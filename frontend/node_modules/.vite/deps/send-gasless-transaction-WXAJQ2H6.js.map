{
  "version": 3,
  "sources": ["../../@thirdweb-dev/sdk/node_modules/thirdweb/dist/esm/transaction/actions/gasless/send-gasless-transaction.js"],
  "sourcesContent": ["export async function sendGaslessTransaction({ account, transaction, serializableTransaction, gasless, }) {\n    // TODO: handle special case for mutlicall transactions!\n    // Steps:\n    // 1. check if the method is `multicall` by comparing the 4bytes data with the `multicall` selector\n    // 2. split the rest of the data into its \"parts\"\n    // 3. solidityPack the parts with the part data + the `account.address`\n    // see v4: `core/classes/transactions.ts>Transaction>prepareGasless:L551`\n    if (serializableTransaction.value && serializableTransaction.value > 0n) {\n        throw new Error(\"Gasless transactions cannot have a value\");\n    }\n    // TODO: multiply gas by 2 for some reason(?) - we do in v4, *should* we?\n    // biconomy\n    if (gasless.provider === \"biconomy\") {\n        const { relayBiconomyTransaction } = await import(\"./providers/biconomy.js\");\n        return relayBiconomyTransaction({\n            account,\n            transaction,\n            serializableTransaction,\n            gasless,\n        });\n    }\n    // openzeppelin\n    if (gasless.provider === \"openzeppelin\") {\n        const { relayOpenZeppelinTransaction } = await import(\"./providers/openzeppelin.js\");\n        return relayOpenZeppelinTransaction({\n            account,\n            transaction,\n            serializableTransaction,\n            gasless,\n        });\n    }\n    if (gasless.provider === \"engine\") {\n        const { relayEngineTransaction } = await import(\"./providers/engine.js\");\n        return relayEngineTransaction({\n            account,\n            transaction,\n            serializableTransaction,\n            gasless,\n        });\n    }\n    throw new Error(\"Unsupported gasless provider\");\n}\n//# sourceMappingURL=send-gasless-transaction.js.map"],
  "mappings": ";;;AAAA,eAAsB,uBAAuB,EAAE,SAAS,aAAa,yBAAyB,QAAS,GAAG;AAOtG,MAAI,wBAAwB,SAAS,wBAAwB,QAAQ,IAAI;AACrE,UAAM,IAAI,MAAM,0CAA0C;AAAA,EAC9D;AAGA,MAAI,QAAQ,aAAa,YAAY;AACjC,UAAM,EAAE,yBAAyB,IAAI,MAAM,OAAO,wBAAyB;AAC3E,WAAO,yBAAyB;AAAA,MAC5B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAEA,MAAI,QAAQ,aAAa,gBAAgB;AACrC,UAAM,EAAE,6BAA6B,IAAI,MAAM,OAAO,4BAA6B;AACnF,WAAO,6BAA6B;AAAA,MAChC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AACA,MAAI,QAAQ,aAAa,UAAU;AAC/B,UAAM,EAAE,uBAAuB,IAAI,MAAM,OAAO,sBAAuB;AACvE,WAAO,uBAAuB;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AACA,QAAM,IAAI,MAAM,8BAA8B;AAClD;",
  "names": []
}
