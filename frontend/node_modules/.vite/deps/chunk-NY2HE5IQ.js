import {
  require_crypto
} from "./chunk-PVOWFSIG.js";
import {
  require_events
} from "./chunk-XAZ6AATU.js";
import {
  bases,
  init_basics
} from "./chunk-44IMT2VJ.js";
import {
  __commonJS,
  __esm,
  __export,
  __reExport,
  __require,
  __toCommonJS,
  __toESM
} from "./chunk-MVEJMUOB.js";

// node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest,
  __spread: () => __spread,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values
});
function __extends(d3, b4) {
  extendStatics(d3, b4);
  function __() {
    this.constructor = d3;
  }
  d3.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
}
function __rest(s2, e2) {
  var t = {};
  for (var p3 in s2) if (Object.prototype.hasOwnProperty.call(s2, p3) && e2.indexOf(p3) < 0)
    t[p3] = s2[p3];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p3 = Object.getOwnPropertySymbols(s2); i3 < p3.length; i3++) {
      if (e2.indexOf(p3[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p3[i3]))
        t[p3[i3]] = s2[p3[i3]];
    }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c4 = arguments.length, r2 = c4 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d3 = decorators[i3]) r2 = (c4 < 3 ? d3(r2) : c4 > 3 ? d3(target, key, r2) : d3(target, key)) || r2;
  return c4 > 3 && r2 && Object.defineProperty(target, key, r2), r2;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f4, y6, t, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n4) {
    return function(v4) {
      return step([n4, v4]);
    };
  }
  function step(op) {
    if (f4) throw new TypeError("Generator is already executing.");
    while (_3) try {
      if (f4 = 1, y6 && (t = op[0] & 2 ? y6["return"] : op[0] ? y6["throw"] || ((t = y6["return"]) && t.call(y6), 0) : y6.next) && !(t = t.call(y6, op[1])).done) return t;
      if (y6 = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y6 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t = _3.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t[1]) {
            _3.label = t[1];
            t = op;
            break;
          }
          if (t && _3.label < t[2]) {
            _3.label = t[2];
            _3.ops.push(op);
            break;
          }
          if (t[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y6 = 0;
    } finally {
      f4 = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding(o2, m2, k5, k22) {
  if (k22 === void 0) k22 = k5;
  o2[k22] = m2[k5];
}
function __exportStar(m2, exports) {
  for (var p3 in m2) if (p3 !== "default" && !exports.hasOwnProperty(p3)) exports[p3] = m2[p3];
}
function __values(o2) {
  var s2 = typeof Symbol === "function" && Symbol.iterator, m2 = s2 && o2[s2], i3 = 0;
  if (m2) return m2.call(o2);
  if (o2 && typeof o2.length === "number") return {
    next: function() {
      if (o2 && i3 >= o2.length) o2 = void 0;
      return { value: o2 && o2[i3++], done: !o2 };
    }
  };
  throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o2, n4) {
  var m2 = typeof Symbol === "function" && o2[Symbol.iterator];
  if (!m2) return o2;
  var i3 = m2.call(o2), r2, ar4 = [], e2;
  try {
    while ((n4 === void 0 || n4-- > 0) && !(r2 = i3.next()).done) ar4.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m2 = i3["return"])) m2.call(i3);
    } finally {
      if (e2) throw e2.error;
    }
  }
  return ar4;
}
function __spread() {
  for (var ar4 = [], i3 = 0; i3 < arguments.length; i3++)
    ar4 = ar4.concat(__read(arguments[i3]));
  return ar4;
}
function __spreadArrays() {
  for (var s2 = 0, i3 = 0, il = arguments.length; i3 < il; i3++) s2 += arguments[i3].length;
  for (var r2 = Array(s2), k5 = 0, i3 = 0; i3 < il; i3++)
    for (var a3 = arguments[i3], j4 = 0, jl = a3.length; j4 < jl; j4++, k5++)
      r2[k5] = a3[j4];
  return r2;
}
function __await(v4) {
  return this instanceof __await ? (this.v = v4, this) : new __await(v4);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g3 = generator.apply(thisArg, _arguments || []), i3, q2 = [];
  return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3;
  function verb(n4) {
    if (g3[n4]) i3[n4] = function(v4) {
      return new Promise(function(a3, b4) {
        q2.push([n4, v4, a3, b4]) > 1 || resume(n4, v4);
      });
    };
  }
  function resume(n4, v4) {
    try {
      step(g3[n4](v4));
    } catch (e2) {
      settle(q2[0][3], e2);
    }
  }
  function step(r2) {
    r2.value instanceof __await ? Promise.resolve(r2.value.v).then(fulfill, reject) : settle(q2[0][2], r2);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f4, v4) {
    if (f4(v4), q2.shift(), q2.length) resume(q2[0][0], q2[0][1]);
  }
}
function __asyncDelegator(o2) {
  var i3, p3;
  return i3 = {}, verb("next"), verb("throw", function(e2) {
    throw e2;
  }), verb("return"), i3[Symbol.iterator] = function() {
    return this;
  }, i3;
  function verb(n4, f4) {
    i3[n4] = o2[n4] ? function(v4) {
      return (p3 = !p3) ? { value: __await(o2[n4](v4)), done: n4 === "return" } : f4 ? f4(v4) : v4;
    } : f4;
  }
}
function __asyncValues(o2) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m2 = o2[Symbol.asyncIterator], i3;
  return m2 ? m2.call(o2) : (o2 = typeof __values === "function" ? __values(o2) : o2[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3);
  function verb(n4) {
    i3[n4] = o2[n4] && function(v4) {
      return new Promise(function(resolve, reject) {
        v4 = o2[n4](v4), settle(resolve, reject, v4.done, v4.value);
      });
    };
  }
  function settle(resolve, reject, d3, v4) {
    Promise.resolve(v4).then(function(v5) {
      resolve({ value: v5, done: d3 });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k5 in mod) if (Object.hasOwnProperty.call(mod, k5)) result[k5] = mod[k5];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics, __assign;
var init_tslib_es6 = __esm({
  "node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js"() {
    extendStatics = function(d3, b4) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b5) {
        d4.__proto__ = b5;
      } || function(d4, b5) {
        for (var p3 in b5) if (b5.hasOwnProperty(p3)) d4[p3] = b5[p3];
      };
      return extendStatics(d3, b4);
    };
    __assign = function() {
      __assign = Object.assign || function __assign4(t) {
        for (var s2, i3 = 1, n4 = arguments.length; i3 < n4; i3++) {
          s2 = arguments[i3];
          for (var p3 in s2) if (Object.prototype.hasOwnProperty.call(s2, p3)) t[p3] = s2[p3];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/delay.js
var require_delay = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/delay.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.delay = void 0;
    function delay(timeout) {
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve(true);
        }, timeout);
      });
    }
    exports.delay = delay;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/misc.js
var require_misc = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/misc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;
    exports.ONE_HUNDRED = 100;
    exports.ONE_THOUSAND = 1e3;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/time.js
var require_time = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;
    exports.ONE_SECOND = 1;
    exports.FIVE_SECONDS = 5;
    exports.TEN_SECONDS = 10;
    exports.THIRTY_SECONDS = 30;
    exports.SIXTY_SECONDS = 60;
    exports.ONE_MINUTE = exports.SIXTY_SECONDS;
    exports.FIVE_MINUTES = exports.ONE_MINUTE * 5;
    exports.TEN_MINUTES = exports.ONE_MINUTE * 10;
    exports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;
    exports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;
    exports.ONE_HOUR = exports.SIXTY_MINUTES;
    exports.THREE_HOURS = exports.ONE_HOUR * 3;
    exports.SIX_HOURS = exports.ONE_HOUR * 6;
    exports.TWELVE_HOURS = exports.ONE_HOUR * 12;
    exports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;
    exports.ONE_DAY = exports.TWENTY_FOUR_HOURS;
    exports.THREE_DAYS = exports.ONE_DAY * 3;
    exports.FIVE_DAYS = exports.ONE_DAY * 5;
    exports.SEVEN_DAYS = exports.ONE_DAY * 7;
    exports.THIRTY_DAYS = exports.ONE_DAY * 30;
    exports.ONE_WEEK = exports.SEVEN_DAYS;
    exports.TWO_WEEKS = exports.ONE_WEEK * 2;
    exports.THREE_WEEKS = exports.ONE_WEEK * 3;
    exports.FOUR_WEEKS = exports.ONE_WEEK * 4;
    exports.ONE_YEAR = exports.ONE_DAY * 365;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/index.js
var require_constants = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_misc(), exports);
    tslib_1.__exportStar(require_time(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/convert.js
var require_convert = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/convert.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromMiliseconds = exports.toMiliseconds = void 0;
    var constants_1 = require_constants();
    function toMiliseconds(seconds) {
      return seconds * constants_1.ONE_THOUSAND;
    }
    exports.toMiliseconds = toMiliseconds;
    function fromMiliseconds(miliseconds) {
      return Math.floor(miliseconds / constants_1.ONE_THOUSAND);
    }
    exports.fromMiliseconds = fromMiliseconds;
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/index.js
var require_utils = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_delay(), exports);
    tslib_1.__exportStar(require_convert(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/watch.js
var require_watch = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Watch = void 0;
    var Watch = class {
      constructor() {
        this.timestamps = /* @__PURE__ */ new Map();
      }
      start(label) {
        if (this.timestamps.has(label)) {
          throw new Error(`Watch already started for label: ${label}`);
        }
        this.timestamps.set(label, { started: Date.now() });
      }
      stop(label) {
        const timestamp = this.get(label);
        if (typeof timestamp.elapsed !== "undefined") {
          throw new Error(`Watch already stopped for label: ${label}`);
        }
        const elapsed = Date.now() - timestamp.started;
        this.timestamps.set(label, { started: timestamp.started, elapsed });
      }
      get(label) {
        const timestamp = this.timestamps.get(label);
        if (typeof timestamp === "undefined") {
          throw new Error(`No timestamp found for label: ${label}`);
        }
        return timestamp;
      }
      elapsed(label) {
        const timestamp = this.get(label);
        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;
        return elapsed;
      }
    };
    exports.Watch = Watch;
    exports.default = Watch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/watch.js
var require_watch2 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IWatch = void 0;
    var IWatch = class {
    };
    exports.IWatch = IWatch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/index.js
var require_types = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_watch2(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_utils(), exports);
    tslib_1.__exportStar(require_watch(), exports);
    tslib_1.__exportStar(require_types(), exports);
    tslib_1.__exportStar(require_constants(), exports);
  }
});

// node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow(name) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name] !== "undefined") {
        res = window[name];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow;
    function getFromWindowOrThrow(name) {
      const res = getFromWindow(name);
      if (!res) {
        throw new Error(`${name} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow;
    function getDocumentOrThrow() {
      return getFromWindowOrThrow("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow;
    function getDocument() {
      return getFromWindow("document");
    }
    exports.getDocument = getDocument;
    function getNavigatorOrThrow() {
      return getFromWindowOrThrow("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow;
    function getNavigator() {
      return getFromWindow("navigator");
    }
    exports.getNavigator = getNavigator;
    function getLocationOrThrow() {
      return getFromWindowOrThrow("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow;
    function getLocation() {
      return getFromWindow("location");
    }
    exports.getLocation = getLocation;
    function getCryptoOrThrow() {
      return getFromWindowOrThrow("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow;
    function getCrypto() {
      return getFromWindow("crypto");
    }
    exports.getCrypto = getCrypto;
    function getLocalStorageOrThrow() {
      return getFromWindowOrThrow("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
    function getLocalStorage() {
      return getFromWindow("localStorage");
    }
    exports.getLocalStorage = getLocalStorage;
  }
});

// node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs2();
    function getWindowMetadata() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e2) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i3 = 0; i3 < links.length; i3++) {
          const link = links[i3];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i3 = 0; i3 < metaTags.length; i3++) {
          const tag = metaTags[i3];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name2 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name2) {
          name2 = doc.title;
        }
        return name2;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata;
  }
});

// node_modules/strict-uri-encode/index.js
var require_strict_uri_encode = __commonJS({
  "node_modules/strict-uri-encode/index.js"(exports, module) {
    "use strict";
    module.exports = (str) => encodeURIComponent(str).replace(/[!'()*]/g, (x4) => `%${x4.charCodeAt(0).toString(16).toUpperCase()}`);
  }
});

// node_modules/decode-uri-component/index.js
var require_decode_uri_component = __commonJS({
  "node_modules/decode-uri-component/index.js"(exports, module) {
    "use strict";
    var token = "%[a-f0-9]{2}";
    var singleMatcher = new RegExp("(" + token + ")|([^%]+?)", "gi");
    var multiMatcher = new RegExp("(" + token + ")+", "gi");
    function decodeComponents(components, split) {
      try {
        return [decodeURIComponent(components.join(""))];
      } catch (err) {
      }
      if (components.length === 1) {
        return components;
      }
      split = split || 1;
      var left = components.slice(0, split);
      var right = components.slice(split);
      return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
    }
    function decode(input) {
      try {
        return decodeURIComponent(input);
      } catch (err) {
        var tokens = input.match(singleMatcher) || [];
        for (var i3 = 1; i3 < tokens.length; i3++) {
          input = decodeComponents(tokens, i3).join("");
          tokens = input.match(singleMatcher) || [];
        }
        return input;
      }
    }
    function customDecodeURIComponent(input) {
      var replaceMap = {
        "%FE%FF": "��",
        "%FF%FE": "��"
      };
      var match = multiMatcher.exec(input);
      while (match) {
        try {
          replaceMap[match[0]] = decodeURIComponent(match[0]);
        } catch (err) {
          var result = decode(match[0]);
          if (result !== match[0]) {
            replaceMap[match[0]] = result;
          }
        }
        match = multiMatcher.exec(input);
      }
      replaceMap["%C2"] = "�";
      var entries = Object.keys(replaceMap);
      for (var i3 = 0; i3 < entries.length; i3++) {
        var key = entries[i3];
        input = input.replace(new RegExp(key, "g"), replaceMap[key]);
      }
      return input;
    }
    module.exports = function(encodedURI) {
      if (typeof encodedURI !== "string") {
        throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
      }
      try {
        encodedURI = encodedURI.replace(/\+/g, " ");
        return decodeURIComponent(encodedURI);
      } catch (err) {
        return customDecodeURIComponent(encodedURI);
      }
    };
  }
});

// node_modules/split-on-first/index.js
var require_split_on_first = __commonJS({
  "node_modules/split-on-first/index.js"(exports, module) {
    "use strict";
    module.exports = (string2, separator) => {
      if (!(typeof string2 === "string" && typeof separator === "string")) {
        throw new TypeError("Expected the arguments to be of type `string`");
      }
      if (separator === "") {
        return [string2];
      }
      const separatorIndex = string2.indexOf(separator);
      if (separatorIndex === -1) {
        return [string2];
      }
      return [
        string2.slice(0, separatorIndex),
        string2.slice(separatorIndex + separator.length)
      ];
    };
  }
});

// node_modules/filter-obj/index.js
var require_filter_obj = __commonJS({
  "node_modules/filter-obj/index.js"(exports, module) {
    "use strict";
    module.exports = function(obj, predicate) {
      var ret = {};
      var keys2 = Object.keys(obj);
      var isArr = Array.isArray(predicate);
      for (var i3 = 0; i3 < keys2.length; i3++) {
        var key = keys2[i3];
        var val = obj[key];
        if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
          ret[key] = val;
        }
      }
      return ret;
    };
  }
});

// node_modules/query-string/index.js
var require_query_string = __commonJS({
  "node_modules/query-string/index.js"(exports) {
    "use strict";
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component();
    var splitOnFirst = require_split_on_first();
    var filterObject = require_filter_obj();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode(key, options), "[", encode(index, options), "]=", encode(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode(key, options), "[]"].join("")];
            }
            return [...result, [encode(key, options), "[]=", encode(value, options)].join("")];
          };
        case "colon-list-separator":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode(key, options), ":list="].join("")];
            }
            return [...result, [encode(key, options), ":list=", encode(value, options)].join("")];
          };
        case "comma":
        case "separator":
        case "bracket-separator": {
          const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            value = value === null ? "" : value;
            if (result.length === 0) {
              return [[encode(key, options), keyValueSep, encode(value, options)].join("")];
            }
            return [[result, encode(value, options)].join(options.arrayFormatSeparator)];
          };
        }
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode(key, options)];
            }
            return [...result, [encode(key, options), "=", encode(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "colon-list-separator":
          return (key, value, accumulator) => {
            result = /(:list)$/.exec(key);
            key = key.replace(/:list$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
            const isEncodedArray = typeof value === "string" && !isArray && decode(value, options).includes(options.arrayFormatSeparator);
            value = isEncodedArray ? decode(value, options) : value;
            const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item) => decode(item, options)) : value === null ? value : decode(value, options);
            accumulator[key] = newValue;
          };
        case "bracket-separator":
          return (key, value, accumulator) => {
            const isArray = /(\[\])$/.test(key);
            key = key.replace(/\[\]$/, "");
            if (!isArray) {
              accumulator[key] = value ? decode(value, options) : value;
              return;
            }
            const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item) => decode(item, options));
            if (accumulator[key] === void 0) {
              accumulator[key] = arrayValue;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], arrayValue);
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a3, b4) => Number(a3) - Number(b4)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse2(query, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof query !== "string") {
        return ret;
      }
      query = query.trim().replace(/^[?#&]/, "");
      if (!query) {
        return ret;
      }
      for (const param of query.split("&")) {
        if (param === "") {
          continue;
        }
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value : decode(value, options);
        formatter(decode(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k5 of Object.keys(value)) {
            value[k5] = parseValue(value[k5], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse2;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys2 = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys2.sort(options.sort);
      }
      return keys2.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode(key, options);
        }
        if (Array.isArray(value)) {
          if (value.length === 0 && options.arrayFormat === "bracket-separator") {
            return encode(key, options) + "[]";
          }
          return value.reduce(formatter(key), []).join("&");
        }
        return encode(key, options) + "=" + encode(value, options);
      }).filter((x4) => x4.length > 0).join("&");
    };
    exports.parseUrl = (url, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url_, hash] = splitOnFirst(url, "#");
      return Object.assign(
        {
          url: url_.split("?")[0] || "",
          query: parse2(extract(url), options)
        },
        options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode(hash, options) } : {}
      );
    };
    exports.stringifyUrl = (object, options) => {
      options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
      }, options);
      const url = removeHash(object.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(object.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, object.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(object.url);
      if (object.fragmentIdentifier) {
        hash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
      }
      return `${url}${queryString}${hash}`;
    };
    exports.pick = (input, filter, options) => {
      options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
      }, options);
      const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
      return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
      }, options);
    };
    exports.exclude = (input, filter, options) => {
      const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value) => !filter(key, value);
      return exports.pick(input, exclusionFilter, options);
    };
  }
});

// node_modules/@stablelib/int/lib/int.js
var require_int = __commonJS({
  "node_modules/@stablelib/int/lib/int.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function imulShim(a3, b4) {
      var ah2 = a3 >>> 16 & 65535, al = a3 & 65535;
      var bh = b4 >>> 16 & 65535, bl = b4 & 65535;
      return al * bl + (ah2 * bl + al * bh << 16 >>> 0) | 0;
    }
    exports.mul = Math.imul || imulShim;
    function add(a3, b4) {
      return a3 + b4 | 0;
    }
    exports.add = add;
    function sub(a3, b4) {
      return a3 - b4 | 0;
    }
    exports.sub = sub;
    function rotl(x4, n4) {
      return x4 << n4 | x4 >>> 32 - n4;
    }
    exports.rotl = rotl;
    function rotr(x4, n4) {
      return x4 << 32 - n4 | x4 >>> n4;
    }
    exports.rotr = rotr;
    function isIntegerShim(n4) {
      return typeof n4 === "number" && isFinite(n4) && Math.floor(n4) === n4;
    }
    exports.isInteger = Number.isInteger || isIntegerShim;
    exports.MAX_SAFE_INTEGER = 9007199254740991;
    exports.isSafeInteger = function(n4) {
      return exports.isInteger(n4) && (n4 >= -exports.MAX_SAFE_INTEGER && n4 <= exports.MAX_SAFE_INTEGER);
    };
  }
});

// node_modules/@stablelib/binary/lib/binary.js
var require_binary = __commonJS({
  "node_modules/@stablelib/binary/lib/binary.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var int_1 = require_int();
    function readInt16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) << 16 >> 16;
    }
    exports.readInt16BE = readInt16BE;
    function readUint16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) >>> 0;
    }
    exports.readUint16BE = readUint16BE;
    function readInt16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) << 16 >> 16;
    }
    exports.readInt16LE = readInt16LE;
    function readUint16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint16LE = readUint16LE;
    function writeUint16BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 8;
      out[offset + 1] = value >>> 0;
      return out;
    }
    exports.writeUint16BE = writeUint16BE;
    exports.writeInt16BE = writeUint16BE;
    function writeUint16LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      return out;
    }
    exports.writeUint16LE = writeUint16LE;
    exports.writeInt16LE = writeUint16LE;
    function readInt32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3];
    }
    exports.readInt32BE = readInt32BE;
    function readUint32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3]) >>> 0;
    }
    exports.readUint32BE = readUint32BE;
    function readInt32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset];
    }
    exports.readInt32LE = readInt32LE;
    function readUint32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint32LE = readUint32LE;
    function writeUint32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 24;
      out[offset + 1] = value >>> 16;
      out[offset + 2] = value >>> 8;
      out[offset + 3] = value >>> 0;
      return out;
    }
    exports.writeUint32BE = writeUint32BE;
    exports.writeInt32BE = writeUint32BE;
    function writeUint32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      out[offset + 2] = value >>> 16;
      out[offset + 3] = value >>> 24;
      return out;
    }
    exports.writeUint32LE = writeUint32LE;
    exports.writeInt32LE = writeUint32LE;
    function readInt64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi2 = readInt32BE(array, offset);
      var lo3 = readInt32BE(array, offset + 4);
      return hi2 * 4294967296 + lo3 - (lo3 >> 31) * 4294967296;
    }
    exports.readInt64BE = readInt64BE;
    function readUint64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi2 = readUint32BE(array, offset);
      var lo3 = readUint32BE(array, offset + 4);
      return hi2 * 4294967296 + lo3;
    }
    exports.readUint64BE = readUint64BE;
    function readInt64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo3 = readInt32LE(array, offset);
      var hi2 = readInt32LE(array, offset + 4);
      return hi2 * 4294967296 + lo3 - (lo3 >> 31) * 4294967296;
    }
    exports.readInt64LE = readInt64LE;
    function readUint64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo3 = readUint32LE(array, offset);
      var hi2 = readUint32LE(array, offset + 4);
      return hi2 * 4294967296 + lo3;
    }
    exports.readUint64LE = readUint64LE;
    function writeUint64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32BE(value / 4294967296 >>> 0, out, offset);
      writeUint32BE(value >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64BE = writeUint64BE;
    exports.writeInt64BE = writeUint64BE;
    function writeUint64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32LE(value >>> 0, out, offset);
      writeUint32LE(value / 4294967296 >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64LE = writeUint64LE;
    exports.writeInt64LE = writeUint64LE;
    function readUintBE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintBE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintBE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i3 = bitLength / 8 + offset - 1; i3 >= offset; i3--) {
        result += array[i3] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintBE = readUintBE;
    function readUintLE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintLE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintLE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i3 = offset; i3 < offset + bitLength / 8; i3++) {
        result += array[i3] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintLE = readUintLE;
    function writeUintBE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintBE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintBE value must be an integer");
      }
      var div = 1;
      for (var i3 = bitLength / 8 + offset - 1; i3 >= offset; i3--) {
        out[i3] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintBE = writeUintBE;
    function writeUintLE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintLE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintLE value must be an integer");
      }
      var div = 1;
      for (var i3 = offset; i3 < offset + bitLength / 8; i3++) {
        out[i3] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintLE = writeUintLE;
    function readFloat32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset);
    }
    exports.readFloat32BE = readFloat32BE;
    function readFloat32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset, true);
    }
    exports.readFloat32LE = readFloat32LE;
    function readFloat64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset);
    }
    exports.readFloat64BE = readFloat64BE;
    function readFloat64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset, true);
    }
    exports.readFloat64LE = readFloat64LE;
    function writeFloat32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value);
      return out;
    }
    exports.writeFloat32BE = writeFloat32BE;
    function writeFloat32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value, true);
      return out;
    }
    exports.writeFloat32LE = writeFloat32LE;
    function writeFloat64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value);
      return out;
    }
    exports.writeFloat64BE = writeFloat64BE;
    function writeFloat64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value, true);
      return out;
    }
    exports.writeFloat64LE = writeFloat64LE;
  }
});

// node_modules/@stablelib/wipe/lib/wipe.js
var require_wipe = __commonJS({
  "node_modules/@stablelib/wipe/lib/wipe.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function wipe(array) {
      for (var i3 = 0; i3 < array.length; i3++) {
        array[i3] = 0;
      }
      return array;
    }
    exports.wipe = wipe;
  }
});

// node_modules/@stablelib/chacha/lib/chacha.js
var require_chacha = __commonJS({
  "node_modules/@stablelib/chacha/lib/chacha.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    var ROUNDS = 20;
    function core(out, input, key) {
      var j02 = 1634760805;
      var j1 = 857760878;
      var j22 = 2036477234;
      var j32 = 1797285236;
      var j4 = key[3] << 24 | key[2] << 16 | key[1] << 8 | key[0];
      var j5 = key[7] << 24 | key[6] << 16 | key[5] << 8 | key[4];
      var j6 = key[11] << 24 | key[10] << 16 | key[9] << 8 | key[8];
      var j7 = key[15] << 24 | key[14] << 16 | key[13] << 8 | key[12];
      var j8 = key[19] << 24 | key[18] << 16 | key[17] << 8 | key[16];
      var j9 = key[23] << 24 | key[22] << 16 | key[21] << 8 | key[20];
      var j10 = key[27] << 24 | key[26] << 16 | key[25] << 8 | key[24];
      var j11 = key[31] << 24 | key[30] << 16 | key[29] << 8 | key[28];
      var j12 = input[3] << 24 | input[2] << 16 | input[1] << 8 | input[0];
      var j13 = input[7] << 24 | input[6] << 16 | input[5] << 8 | input[4];
      var j14 = input[11] << 24 | input[10] << 16 | input[9] << 8 | input[8];
      var j15 = input[15] << 24 | input[14] << 16 | input[13] << 8 | input[12];
      var x02 = j02;
      var x1 = j1;
      var x22 = j22;
      var x32 = j32;
      var x4 = j4;
      var x5 = j5;
      var x6 = j6;
      var x7 = j7;
      var x8 = j8;
      var x9 = j9;
      var x10 = j10;
      var x11 = j11;
      var x12 = j12;
      var x13 = j13;
      var x14 = j14;
      var x15 = j15;
      for (var i3 = 0; i3 < ROUNDS; i3 += 2) {
        x02 = x02 + x4 | 0;
        x12 ^= x02;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x8 = x8 + x12 | 0;
        x4 ^= x8;
        x4 = x4 >>> 32 - 12 | x4 << 12;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x32 = x32 + x7 | 0;
        x15 ^= x32;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x32 = x32 + x7 | 0;
        x15 ^= x32;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 7 | x5 << 7;
        x02 = x02 + x4 | 0;
        x12 ^= x02;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x8 = x8 + x12 | 0;
        x4 ^= x8;
        x4 = x4 >>> 32 - 7 | x4 << 7;
        x02 = x02 + x5 | 0;
        x15 ^= x02;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x32 = x32 + x4 | 0;
        x14 ^= x32;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x9 = x9 + x14 | 0;
        x4 ^= x9;
        x4 = x4 >>> 32 - 12 | x4 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x32 = x32 + x4 | 0;
        x14 ^= x32;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x9 = x9 + x14 | 0;
        x4 ^= x9;
        x4 = x4 >>> 32 - 7 | x4 << 7;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x02 = x02 + x5 | 0;
        x15 ^= x02;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 7 | x5 << 7;
      }
      binary_1.writeUint32LE(x02 + j02 | 0, out, 0);
      binary_1.writeUint32LE(x1 + j1 | 0, out, 4);
      binary_1.writeUint32LE(x22 + j22 | 0, out, 8);
      binary_1.writeUint32LE(x32 + j32 | 0, out, 12);
      binary_1.writeUint32LE(x4 + j4 | 0, out, 16);
      binary_1.writeUint32LE(x5 + j5 | 0, out, 20);
      binary_1.writeUint32LE(x6 + j6 | 0, out, 24);
      binary_1.writeUint32LE(x7 + j7 | 0, out, 28);
      binary_1.writeUint32LE(x8 + j8 | 0, out, 32);
      binary_1.writeUint32LE(x9 + j9 | 0, out, 36);
      binary_1.writeUint32LE(x10 + j10 | 0, out, 40);
      binary_1.writeUint32LE(x11 + j11 | 0, out, 44);
      binary_1.writeUint32LE(x12 + j12 | 0, out, 48);
      binary_1.writeUint32LE(x13 + j13 | 0, out, 52);
      binary_1.writeUint32LE(x14 + j14 | 0, out, 56);
      binary_1.writeUint32LE(x15 + j15 | 0, out, 60);
    }
    function streamXOR(key, nonce, src, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      if (key.length !== 32) {
        throw new Error("ChaCha: key size must be 32 bytes");
      }
      if (dst.length < src.length) {
        throw new Error("ChaCha: destination is shorter than source");
      }
      var nc;
      var counterLength;
      if (nonceInplaceCounterLength === 0) {
        if (nonce.length !== 8 && nonce.length !== 12) {
          throw new Error("ChaCha nonce must be 8 or 12 bytes");
        }
        nc = new Uint8Array(16);
        counterLength = nc.length - nonce.length;
        nc.set(nonce, counterLength);
      } else {
        if (nonce.length !== 16) {
          throw new Error("ChaCha nonce with counter must be 16 bytes");
        }
        nc = nonce;
        counterLength = nonceInplaceCounterLength;
      }
      var block = new Uint8Array(64);
      for (var i3 = 0; i3 < src.length; i3 += 64) {
        core(block, nc, key);
        for (var j4 = i3; j4 < i3 + 64 && j4 < src.length; j4++) {
          dst[j4] = src[j4] ^ block[j4 - i3];
        }
        incrementCounter(nc, 0, counterLength);
      }
      wipe_1.wipe(block);
      if (nonceInplaceCounterLength === 0) {
        wipe_1.wipe(nc);
      }
      return dst;
    }
    exports.streamXOR = streamXOR;
    function stream(key, nonce, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      wipe_1.wipe(dst);
      return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);
    }
    exports.stream = stream;
    function incrementCounter(counter, pos, len) {
      var carry = 1;
      while (len--) {
        carry = carry + (counter[pos] & 255) | 0;
        counter[pos] = carry & 255;
        carry >>>= 8;
        pos++;
      }
      if (carry > 0) {
        throw new Error("ChaCha: counter overflow");
      }
    }
  }
});

// node_modules/@stablelib/constant-time/lib/constant-time.js
var require_constant_time = __commonJS({
  "node_modules/@stablelib/constant-time/lib/constant-time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function select(subject, resultIfOne, resultIfZero) {
      return ~(subject - 1) & resultIfOne | subject - 1 & resultIfZero;
    }
    exports.select = select;
    function lessOrEqual(a3, b4) {
      return (a3 | 0) - (b4 | 0) - 1 >>> 31 & 1;
    }
    exports.lessOrEqual = lessOrEqual;
    function compare2(a3, b4) {
      if (a3.length !== b4.length) {
        return 0;
      }
      var result = 0;
      for (var i3 = 0; i3 < a3.length; i3++) {
        result |= a3[i3] ^ b4[i3];
      }
      return 1 & result - 1 >>> 8;
    }
    exports.compare = compare2;
    function equal(a3, b4) {
      if (a3.length === 0 || b4.length === 0) {
        return false;
      }
      return compare2(a3, b4) !== 0;
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/poly1305/lib/poly1305.js
var require_poly1305 = __commonJS({
  "node_modules/@stablelib/poly1305/lib/poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 16;
    var Poly1305 = (
      /** @class */
      function() {
        function Poly13052(key) {
          this.digestLength = exports.DIGEST_LENGTH;
          this._buffer = new Uint8Array(16);
          this._r = new Uint16Array(10);
          this._h = new Uint16Array(10);
          this._pad = new Uint16Array(8);
          this._leftover = 0;
          this._fin = 0;
          this._finished = false;
          var t0 = key[0] | key[1] << 8;
          this._r[0] = t0 & 8191;
          var t1 = key[2] | key[3] << 8;
          this._r[1] = (t0 >>> 13 | t1 << 3) & 8191;
          var t2 = key[4] | key[5] << 8;
          this._r[2] = (t1 >>> 10 | t2 << 6) & 7939;
          var t3 = key[6] | key[7] << 8;
          this._r[3] = (t2 >>> 7 | t3 << 9) & 8191;
          var t4 = key[8] | key[9] << 8;
          this._r[4] = (t3 >>> 4 | t4 << 12) & 255;
          this._r[5] = t4 >>> 1 & 8190;
          var t5 = key[10] | key[11] << 8;
          this._r[6] = (t4 >>> 14 | t5 << 2) & 8191;
          var t6 = key[12] | key[13] << 8;
          this._r[7] = (t5 >>> 11 | t6 << 5) & 8065;
          var t7 = key[14] | key[15] << 8;
          this._r[8] = (t6 >>> 8 | t7 << 8) & 8191;
          this._r[9] = t7 >>> 5 & 127;
          this._pad[0] = key[16] | key[17] << 8;
          this._pad[1] = key[18] | key[19] << 8;
          this._pad[2] = key[20] | key[21] << 8;
          this._pad[3] = key[22] | key[23] << 8;
          this._pad[4] = key[24] | key[25] << 8;
          this._pad[5] = key[26] | key[27] << 8;
          this._pad[6] = key[28] | key[29] << 8;
          this._pad[7] = key[30] | key[31] << 8;
        }
        Poly13052.prototype._blocks = function(m2, mpos, bytes) {
          var hibit = this._fin ? 0 : 1 << 11;
          var h02 = this._h[0], h1 = this._h[1], h22 = this._h[2], h32 = this._h[3], h42 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];
          var r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];
          while (bytes >= 16) {
            var t0 = m2[mpos + 0] | m2[mpos + 1] << 8;
            h02 += t0 & 8191;
            var t1 = m2[mpos + 2] | m2[mpos + 3] << 8;
            h1 += (t0 >>> 13 | t1 << 3) & 8191;
            var t2 = m2[mpos + 4] | m2[mpos + 5] << 8;
            h22 += (t1 >>> 10 | t2 << 6) & 8191;
            var t3 = m2[mpos + 6] | m2[mpos + 7] << 8;
            h32 += (t2 >>> 7 | t3 << 9) & 8191;
            var t4 = m2[mpos + 8] | m2[mpos + 9] << 8;
            h42 += (t3 >>> 4 | t4 << 12) & 8191;
            h5 += t4 >>> 1 & 8191;
            var t5 = m2[mpos + 10] | m2[mpos + 11] << 8;
            h6 += (t4 >>> 14 | t5 << 2) & 8191;
            var t6 = m2[mpos + 12] | m2[mpos + 13] << 8;
            h7 += (t5 >>> 11 | t6 << 5) & 8191;
            var t7 = m2[mpos + 14] | m2[mpos + 15] << 8;
            h8 += (t6 >>> 8 | t7 << 8) & 8191;
            h9 += t7 >>> 5 | hibit;
            var c4 = 0;
            var d02 = c4;
            d02 += h02 * r0;
            d02 += h1 * (5 * r9);
            d02 += h22 * (5 * r8);
            d02 += h32 * (5 * r7);
            d02 += h42 * (5 * r6);
            c4 = d02 >>> 13;
            d02 &= 8191;
            d02 += h5 * (5 * r5);
            d02 += h6 * (5 * r4);
            d02 += h7 * (5 * r3);
            d02 += h8 * (5 * r2);
            d02 += h9 * (5 * r1);
            c4 += d02 >>> 13;
            d02 &= 8191;
            var d1 = c4;
            d1 += h02 * r1;
            d1 += h1 * r0;
            d1 += h22 * (5 * r9);
            d1 += h32 * (5 * r8);
            d1 += h42 * (5 * r7);
            c4 = d1 >>> 13;
            d1 &= 8191;
            d1 += h5 * (5 * r6);
            d1 += h6 * (5 * r5);
            d1 += h7 * (5 * r4);
            d1 += h8 * (5 * r3);
            d1 += h9 * (5 * r2);
            c4 += d1 >>> 13;
            d1 &= 8191;
            var d22 = c4;
            d22 += h02 * r2;
            d22 += h1 * r1;
            d22 += h22 * r0;
            d22 += h32 * (5 * r9);
            d22 += h42 * (5 * r8);
            c4 = d22 >>> 13;
            d22 &= 8191;
            d22 += h5 * (5 * r7);
            d22 += h6 * (5 * r6);
            d22 += h7 * (5 * r5);
            d22 += h8 * (5 * r4);
            d22 += h9 * (5 * r3);
            c4 += d22 >>> 13;
            d22 &= 8191;
            var d3 = c4;
            d3 += h02 * r3;
            d3 += h1 * r2;
            d3 += h22 * r1;
            d3 += h32 * r0;
            d3 += h42 * (5 * r9);
            c4 = d3 >>> 13;
            d3 &= 8191;
            d3 += h5 * (5 * r8);
            d3 += h6 * (5 * r7);
            d3 += h7 * (5 * r6);
            d3 += h8 * (5 * r5);
            d3 += h9 * (5 * r4);
            c4 += d3 >>> 13;
            d3 &= 8191;
            var d4 = c4;
            d4 += h02 * r4;
            d4 += h1 * r3;
            d4 += h22 * r2;
            d4 += h32 * r1;
            d4 += h42 * r0;
            c4 = d4 >>> 13;
            d4 &= 8191;
            d4 += h5 * (5 * r9);
            d4 += h6 * (5 * r8);
            d4 += h7 * (5 * r7);
            d4 += h8 * (5 * r6);
            d4 += h9 * (5 * r5);
            c4 += d4 >>> 13;
            d4 &= 8191;
            var d5 = c4;
            d5 += h02 * r5;
            d5 += h1 * r4;
            d5 += h22 * r3;
            d5 += h32 * r2;
            d5 += h42 * r1;
            c4 = d5 >>> 13;
            d5 &= 8191;
            d5 += h5 * r0;
            d5 += h6 * (5 * r9);
            d5 += h7 * (5 * r8);
            d5 += h8 * (5 * r7);
            d5 += h9 * (5 * r6);
            c4 += d5 >>> 13;
            d5 &= 8191;
            var d6 = c4;
            d6 += h02 * r6;
            d6 += h1 * r5;
            d6 += h22 * r4;
            d6 += h32 * r3;
            d6 += h42 * r2;
            c4 = d6 >>> 13;
            d6 &= 8191;
            d6 += h5 * r1;
            d6 += h6 * r0;
            d6 += h7 * (5 * r9);
            d6 += h8 * (5 * r8);
            d6 += h9 * (5 * r7);
            c4 += d6 >>> 13;
            d6 &= 8191;
            var d7 = c4;
            d7 += h02 * r7;
            d7 += h1 * r6;
            d7 += h22 * r5;
            d7 += h32 * r4;
            d7 += h42 * r3;
            c4 = d7 >>> 13;
            d7 &= 8191;
            d7 += h5 * r2;
            d7 += h6 * r1;
            d7 += h7 * r0;
            d7 += h8 * (5 * r9);
            d7 += h9 * (5 * r8);
            c4 += d7 >>> 13;
            d7 &= 8191;
            var d8 = c4;
            d8 += h02 * r8;
            d8 += h1 * r7;
            d8 += h22 * r6;
            d8 += h32 * r5;
            d8 += h42 * r4;
            c4 = d8 >>> 13;
            d8 &= 8191;
            d8 += h5 * r3;
            d8 += h6 * r2;
            d8 += h7 * r1;
            d8 += h8 * r0;
            d8 += h9 * (5 * r9);
            c4 += d8 >>> 13;
            d8 &= 8191;
            var d9 = c4;
            d9 += h02 * r9;
            d9 += h1 * r8;
            d9 += h22 * r7;
            d9 += h32 * r6;
            d9 += h42 * r5;
            c4 = d9 >>> 13;
            d9 &= 8191;
            d9 += h5 * r4;
            d9 += h6 * r3;
            d9 += h7 * r2;
            d9 += h8 * r1;
            d9 += h9 * r0;
            c4 += d9 >>> 13;
            d9 &= 8191;
            c4 = (c4 << 2) + c4 | 0;
            c4 = c4 + d02 | 0;
            d02 = c4 & 8191;
            c4 = c4 >>> 13;
            d1 += c4;
            h02 = d02;
            h1 = d1;
            h22 = d22;
            h32 = d3;
            h42 = d4;
            h5 = d5;
            h6 = d6;
            h7 = d7;
            h8 = d8;
            h9 = d9;
            mpos += 16;
            bytes -= 16;
          }
          this._h[0] = h02;
          this._h[1] = h1;
          this._h[2] = h22;
          this._h[3] = h32;
          this._h[4] = h42;
          this._h[5] = h5;
          this._h[6] = h6;
          this._h[7] = h7;
          this._h[8] = h8;
          this._h[9] = h9;
        };
        Poly13052.prototype.finish = function(mac, macpos) {
          if (macpos === void 0) {
            macpos = 0;
          }
          var g3 = new Uint16Array(10);
          var c4;
          var mask;
          var f4;
          var i3;
          if (this._leftover) {
            i3 = this._leftover;
            this._buffer[i3++] = 1;
            for (; i3 < 16; i3++) {
              this._buffer[i3] = 0;
            }
            this._fin = 1;
            this._blocks(this._buffer, 0, 16);
          }
          c4 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          for (i3 = 2; i3 < 10; i3++) {
            this._h[i3] += c4;
            c4 = this._h[i3] >>> 13;
            this._h[i3] &= 8191;
          }
          this._h[0] += c4 * 5;
          c4 = this._h[0] >>> 13;
          this._h[0] &= 8191;
          this._h[1] += c4;
          c4 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          this._h[2] += c4;
          g3[0] = this._h[0] + 5;
          c4 = g3[0] >>> 13;
          g3[0] &= 8191;
          for (i3 = 1; i3 < 10; i3++) {
            g3[i3] = this._h[i3] + c4;
            c4 = g3[i3] >>> 13;
            g3[i3] &= 8191;
          }
          g3[9] -= 1 << 13;
          mask = (c4 ^ 1) - 1;
          for (i3 = 0; i3 < 10; i3++) {
            g3[i3] &= mask;
          }
          mask = ~mask;
          for (i3 = 0; i3 < 10; i3++) {
            this._h[i3] = this._h[i3] & mask | g3[i3];
          }
          this._h[0] = (this._h[0] | this._h[1] << 13) & 65535;
          this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535;
          this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535;
          this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535;
          this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535;
          this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535;
          this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535;
          this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535;
          f4 = this._h[0] + this._pad[0];
          this._h[0] = f4 & 65535;
          for (i3 = 1; i3 < 8; i3++) {
            f4 = (this._h[i3] + this._pad[i3] | 0) + (f4 >>> 16) | 0;
            this._h[i3] = f4 & 65535;
          }
          mac[macpos + 0] = this._h[0] >>> 0;
          mac[macpos + 1] = this._h[0] >>> 8;
          mac[macpos + 2] = this._h[1] >>> 0;
          mac[macpos + 3] = this._h[1] >>> 8;
          mac[macpos + 4] = this._h[2] >>> 0;
          mac[macpos + 5] = this._h[2] >>> 8;
          mac[macpos + 6] = this._h[3] >>> 0;
          mac[macpos + 7] = this._h[3] >>> 8;
          mac[macpos + 8] = this._h[4] >>> 0;
          mac[macpos + 9] = this._h[4] >>> 8;
          mac[macpos + 10] = this._h[5] >>> 0;
          mac[macpos + 11] = this._h[5] >>> 8;
          mac[macpos + 12] = this._h[6] >>> 0;
          mac[macpos + 13] = this._h[6] >>> 8;
          mac[macpos + 14] = this._h[7] >>> 0;
          mac[macpos + 15] = this._h[7] >>> 8;
          this._finished = true;
          return this;
        };
        Poly13052.prototype.update = function(m2) {
          var mpos = 0;
          var bytes = m2.length;
          var want;
          if (this._leftover) {
            want = 16 - this._leftover;
            if (want > bytes) {
              want = bytes;
            }
            for (var i3 = 0; i3 < want; i3++) {
              this._buffer[this._leftover + i3] = m2[mpos + i3];
            }
            bytes -= want;
            mpos += want;
            this._leftover += want;
            if (this._leftover < 16) {
              return this;
            }
            this._blocks(this._buffer, 0, 16);
            this._leftover = 0;
          }
          if (bytes >= 16) {
            want = bytes - bytes % 16;
            this._blocks(m2, mpos, want);
            mpos += want;
            bytes -= want;
          }
          if (bytes) {
            for (var i3 = 0; i3 < bytes; i3++) {
              this._buffer[this._leftover + i3] = m2[mpos + i3];
            }
            this._leftover += bytes;
          }
          return this;
        };
        Poly13052.prototype.digest = function() {
          if (this._finished) {
            throw new Error("Poly1305 was finished");
          }
          var mac = new Uint8Array(16);
          this.finish(mac);
          return mac;
        };
        Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._r);
          wipe_1.wipe(this._h);
          wipe_1.wipe(this._pad);
          this._leftover = 0;
          this._fin = 0;
          this._finished = true;
          return this;
        };
        return Poly13052;
      }()
    );
    exports.Poly1305 = Poly1305;
    function oneTimeAuth(key, data) {
      var h5 = new Poly1305(key);
      h5.update(data);
      var digest = h5.digest();
      h5.clean();
      return digest;
    }
    exports.oneTimeAuth = oneTimeAuth;
    function equal(a3, b4) {
      if (a3.length !== exports.DIGEST_LENGTH || b4.length !== exports.DIGEST_LENGTH) {
        return false;
      }
      return constant_time_1.equal(a3, b4);
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js
var require_chacha20poly1305 = __commonJS({
  "node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var chacha_1 = require_chacha();
    var poly1305_1 = require_poly1305();
    var wipe_1 = require_wipe();
    var binary_1 = require_binary();
    var constant_time_1 = require_constant_time();
    exports.KEY_LENGTH = 32;
    exports.NONCE_LENGTH = 12;
    exports.TAG_LENGTH = 16;
    var ZEROS = new Uint8Array(16);
    var ChaCha20Poly1305 = (
      /** @class */
      function() {
        function ChaCha20Poly13052(key) {
          this.nonceLength = exports.NONCE_LENGTH;
          this.tagLength = exports.TAG_LENGTH;
          if (key.length !== exports.KEY_LENGTH) {
            throw new Error("ChaCha20Poly1305 needs 32-byte key");
          }
          this._key = new Uint8Array(key);
        }
        ChaCha20Poly13052.prototype.seal = function(nonce, plaintext, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var resultLength = plaintext.length + this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, plaintext, result, 4);
          this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.open = function(nonce, sealed, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          if (sealed.length < this.tagLength) {
            return null;
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var calculatedTag = new Uint8Array(this.tagLength);
          this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);
          if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {
            return null;
          }
          var resultLength = sealed.length - this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._key);
          return this;
        };
        ChaCha20Poly13052.prototype._authenticate = function(tagOut, authKey, ciphertext, associatedData) {
          var h5 = new poly1305_1.Poly1305(authKey);
          if (associatedData) {
            h5.update(associatedData);
            if (associatedData.length % 16 > 0) {
              h5.update(ZEROS.subarray(associatedData.length % 16));
            }
          }
          h5.update(ciphertext);
          if (ciphertext.length % 16 > 0) {
            h5.update(ZEROS.subarray(ciphertext.length % 16));
          }
          var length = new Uint8Array(8);
          if (associatedData) {
            binary_1.writeUint64LE(associatedData.length, length);
          }
          h5.update(length);
          binary_1.writeUint64LE(ciphertext.length, length);
          h5.update(length);
          var tag = h5.digest();
          for (var i3 = 0; i3 < tag.length; i3++) {
            tagOut[i3] = tag[i3];
          }
          h5.clean();
          wipe_1.wipe(tag);
          wipe_1.wipe(length);
        };
        return ChaCha20Poly13052;
      }()
    );
    exports.ChaCha20Poly1305 = ChaCha20Poly1305;
  }
});

// node_modules/@stablelib/hash/lib/hash.js
var require_hash = __commonJS({
  "node_modules/@stablelib/hash/lib/hash.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function isSerializableHash(h5) {
      return typeof h5.saveState !== "undefined" && typeof h5.restoreState !== "undefined" && typeof h5.cleanSavedState !== "undefined";
    }
    exports.isSerializableHash = isSerializableHash;
  }
});

// node_modules/@stablelib/hmac/lib/hmac.js
var require_hmac = __commonJS({
  "node_modules/@stablelib/hmac/lib/hmac.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hash_1 = require_hash();
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    var HMAC = (
      /** @class */
      function() {
        function HMAC2(hash, key) {
          this._finished = false;
          this._inner = new hash();
          this._outer = new hash();
          this.blockSize = this._outer.blockSize;
          this.digestLength = this._outer.digestLength;
          var pad = new Uint8Array(this.blockSize);
          if (key.length > this.blockSize) {
            this._inner.update(key).finish(pad).clean();
          } else {
            pad.set(key);
          }
          for (var i3 = 0; i3 < pad.length; i3++) {
            pad[i3] ^= 54;
          }
          this._inner.update(pad);
          for (var i3 = 0; i3 < pad.length; i3++) {
            pad[i3] ^= 54 ^ 92;
          }
          this._outer.update(pad);
          if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {
            this._innerKeyedState = this._inner.saveState();
            this._outerKeyedState = this._outer.saveState();
          }
          wipe_1.wipe(pad);
        }
        HMAC2.prototype.reset = function() {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
          }
          this._inner.restoreState(this._innerKeyedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.clean = function() {
          if (hash_1.isSerializableHash(this._inner)) {
            this._inner.cleanSavedState(this._innerKeyedState);
          }
          if (hash_1.isSerializableHash(this._outer)) {
            this._outer.cleanSavedState(this._outerKeyedState);
          }
          this._inner.clean();
          this._outer.clean();
        };
        HMAC2.prototype.update = function(data) {
          this._inner.update(data);
          return this;
        };
        HMAC2.prototype.finish = function(out) {
          if (this._finished) {
            this._outer.finish(out);
            return this;
          }
          this._inner.finish(out);
          this._outer.update(out.subarray(0, this.digestLength)).finish(out);
          this._finished = true;
          return this;
        };
        HMAC2.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        HMAC2.prototype.saveState = function() {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't saveState() because hash doesn't implement it");
          }
          return this._inner.saveState();
        };
        HMAC2.prototype.restoreState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't restoreState() because hash doesn't implement it");
          }
          this._inner.restoreState(savedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.cleanSavedState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
          }
          this._inner.cleanSavedState(savedState);
        };
        return HMAC2;
      }()
    );
    exports.HMAC = HMAC;
    function hmac(hash, key, data) {
      var h5 = new HMAC(hash, key);
      h5.update(data);
      var digest = h5.digest();
      h5.clean();
      return digest;
    }
    exports.hmac = hmac;
    exports.equal = constant_time_1.equal;
  }
});

// node_modules/@stablelib/hkdf/lib/hkdf.js
var require_hkdf = __commonJS({
  "node_modules/@stablelib/hkdf/lib/hkdf.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hmac_1 = require_hmac();
    var wipe_1 = require_wipe();
    var HKDF = (
      /** @class */
      function() {
        function HKDF2(hash, key, salt, info) {
          if (salt === void 0) {
            salt = new Uint8Array(0);
          }
          this._counter = new Uint8Array(1);
          this._hash = hash;
          this._info = info;
          var okm = hmac_1.hmac(this._hash, salt, key);
          this._hmac = new hmac_1.HMAC(hash, okm);
          this._buffer = new Uint8Array(this._hmac.digestLength);
          this._bufpos = this._buffer.length;
        }
        HKDF2.prototype._fillBuffer = function() {
          this._counter[0]++;
          var ctr = this._counter[0];
          if (ctr === 0) {
            throw new Error("hkdf: cannot expand more");
          }
          this._hmac.reset();
          if (ctr > 1) {
            this._hmac.update(this._buffer);
          }
          if (this._info) {
            this._hmac.update(this._info);
          }
          this._hmac.update(this._counter);
          this._hmac.finish(this._buffer);
          this._bufpos = 0;
        };
        HKDF2.prototype.expand = function(length) {
          var out = new Uint8Array(length);
          for (var i3 = 0; i3 < out.length; i3++) {
            if (this._bufpos === this._buffer.length) {
              this._fillBuffer();
            }
            out[i3] = this._buffer[this._bufpos++];
          }
          return out;
        };
        HKDF2.prototype.clean = function() {
          this._hmac.clean();
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._counter);
          this._bufpos = 0;
        };
        return HKDF2;
      }()
    );
    exports.HKDF = HKDF;
  }
});

// node_modules/@stablelib/random/lib/source/browser.js
var require_browser = __commonJS({
  "node_modules/@stablelib/random/lib/source/browser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BrowserRandomSource = void 0;
    var QUOTA = 65536;
    var BrowserRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        const browserCrypto = typeof self !== "undefined" ? self.crypto || self.msCrypto : null;
        if (browserCrypto && browserCrypto.getRandomValues !== void 0) {
          this._crypto = browserCrypto;
          this.isAvailable = true;
          this.isInstantiated = true;
        }
      }
      randomBytes(length) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Browser random byte generator is not available.");
        }
        const out = new Uint8Array(length);
        for (let i3 = 0; i3 < out.length; i3 += QUOTA) {
          this._crypto.getRandomValues(out.subarray(i3, i3 + Math.min(out.length - i3, QUOTA)));
        }
        return out;
      }
    };
    exports.BrowserRandomSource = BrowserRandomSource;
  }
});

// node_modules/@stablelib/random/lib/source/node.js
var require_node = __commonJS({
  "node_modules/@stablelib/random/lib/source/node.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NodeRandomSource = void 0;
    var wipe_1 = require_wipe();
    var NodeRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        if (typeof __require !== "undefined") {
          const nodeCrypto = require_crypto();
          if (nodeCrypto && nodeCrypto.randomBytes) {
            this._crypto = nodeCrypto;
            this.isAvailable = true;
            this.isInstantiated = true;
          }
        }
      }
      randomBytes(length) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Node.js random byte generator is not available.");
        }
        let buffer = this._crypto.randomBytes(length);
        if (buffer.length !== length) {
          throw new Error("NodeRandomSource: got fewer bytes than requested");
        }
        const out = new Uint8Array(length);
        for (let i3 = 0; i3 < out.length; i3++) {
          out[i3] = buffer[i3];
        }
        (0, wipe_1.wipe)(buffer);
        return out;
      }
    };
    exports.NodeRandomSource = NodeRandomSource;
  }
});

// node_modules/@stablelib/random/lib/source/system.js
var require_system = __commonJS({
  "node_modules/@stablelib/random/lib/source/system.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SystemRandomSource = void 0;
    var browser_1 = require_browser();
    var node_1 = require_node();
    var SystemRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.name = "";
        this._source = new browser_1.BrowserRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Browser";
          return;
        }
        this._source = new node_1.NodeRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Node";
          return;
        }
      }
      randomBytes(length) {
        if (!this.isAvailable) {
          throw new Error("System random byte generator is not available.");
        }
        return this._source.randomBytes(length);
      }
    };
    exports.SystemRandomSource = SystemRandomSource;
  }
});

// node_modules/@stablelib/random/lib/random.js
var require_random = __commonJS({
  "node_modules/@stablelib/random/lib/random.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;
    var system_1 = require_system();
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.defaultRandomSource = new system_1.SystemRandomSource();
    function randomBytes(length, prng = exports.defaultRandomSource) {
      return prng.randomBytes(length);
    }
    exports.randomBytes = randomBytes;
    function randomUint32(prng = exports.defaultRandomSource) {
      const buf = randomBytes(4, prng);
      const result = (0, binary_1.readUint32LE)(buf);
      (0, wipe_1.wipe)(buf);
      return result;
    }
    exports.randomUint32 = randomUint32;
    var ALPHANUMERIC = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    function randomString(length, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      if (charset.length < 2) {
        throw new Error("randomString charset is too short");
      }
      if (charset.length > 256) {
        throw new Error("randomString charset is too long");
      }
      let out = "";
      const charsLen = charset.length;
      const maxByte = 256 - 256 % charsLen;
      while (length > 0) {
        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);
        for (let i3 = 0; i3 < buf.length && length > 0; i3++) {
          const randomByte = buf[i3];
          if (randomByte < maxByte) {
            out += charset.charAt(randomByte % charsLen);
            length--;
          }
        }
        (0, wipe_1.wipe)(buf);
      }
      return out;
    }
    exports.randomString = randomString;
    function randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));
      return randomString(length, charset, prng);
    }
    exports.randomStringForEntropy = randomStringForEntropy;
  }
});

// node_modules/@stablelib/sha256/lib/sha256.js
var require_sha256 = __commonJS({
  "node_modules/@stablelib/sha256/lib/sha256.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 32;
    exports.BLOCK_SIZE = 64;
    var SHA256 = (
      /** @class */
      function() {
        function SHA2562() {
          this.digestLength = exports.DIGEST_LENGTH;
          this.blockSize = exports.BLOCK_SIZE;
          this._state = new Int32Array(8);
          this._temp = new Int32Array(64);
          this._buffer = new Uint8Array(128);
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          this.reset();
        }
        SHA2562.prototype._initState = function() {
          this._state[0] = 1779033703;
          this._state[1] = 3144134277;
          this._state[2] = 1013904242;
          this._state[3] = 2773480762;
          this._state[4] = 1359893119;
          this._state[5] = 2600822924;
          this._state[6] = 528734635;
          this._state[7] = 1541459225;
        };
        SHA2562.prototype.reset = function() {
          this._initState();
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._temp);
          this.reset();
        };
        SHA2562.prototype.update = function(data, dataLength) {
          if (dataLength === void 0) {
            dataLength = data.length;
          }
          if (this._finished) {
            throw new Error("SHA256: can't update because hash was finished.");
          }
          var dataPos = 0;
          this._bytesHashed += dataLength;
          if (this._bufferLength > 0) {
            while (this._bufferLength < this.blockSize && dataLength > 0) {
              this._buffer[this._bufferLength++] = data[dataPos++];
              dataLength--;
            }
            if (this._bufferLength === this.blockSize) {
              hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);
              this._bufferLength = 0;
            }
          }
          if (dataLength >= this.blockSize) {
            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);
            dataLength %= this.blockSize;
          }
          while (dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          return this;
        };
        SHA2562.prototype.finish = function(out) {
          if (!this._finished) {
            var bytesHashed = this._bytesHashed;
            var left = this._bufferLength;
            var bitLenHi = bytesHashed / 536870912 | 0;
            var bitLenLo = bytesHashed << 3;
            var padLength = bytesHashed % 64 < 56 ? 64 : 128;
            this._buffer[left] = 128;
            for (var i3 = left + 1; i3 < padLength - 8; i3++) {
              this._buffer[i3] = 0;
            }
            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);
            this._finished = true;
          }
          for (var i3 = 0; i3 < this.digestLength / 4; i3++) {
            binary_1.writeUint32BE(this._state[i3], out, i3 * 4);
          }
          return this;
        };
        SHA2562.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        SHA2562.prototype.saveState = function() {
          if (this._finished) {
            throw new Error("SHA256: cannot save finished state");
          }
          return {
            state: new Int32Array(this._state),
            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
            bufferLength: this._bufferLength,
            bytesHashed: this._bytesHashed
          };
        };
        SHA2562.prototype.restoreState = function(savedState) {
          this._state.set(savedState.state);
          this._bufferLength = savedState.bufferLength;
          if (savedState.buffer) {
            this._buffer.set(savedState.buffer);
          }
          this._bytesHashed = savedState.bytesHashed;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.cleanSavedState = function(savedState) {
          wipe_1.wipe(savedState.state);
          if (savedState.buffer) {
            wipe_1.wipe(savedState.buffer);
          }
          savedState.bufferLength = 0;
          savedState.bytesHashed = 0;
        };
        return SHA2562;
      }()
    );
    exports.SHA256 = SHA256;
    var K5 = new Int32Array([
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ]);
    function hashBlocks(w4, v4, p3, pos, len) {
      while (len >= 64) {
        var a3 = v4[0];
        var b4 = v4[1];
        var c4 = v4[2];
        var d3 = v4[3];
        var e2 = v4[4];
        var f4 = v4[5];
        var g3 = v4[6];
        var h5 = v4[7];
        for (var i3 = 0; i3 < 16; i3++) {
          var j4 = pos + i3 * 4;
          w4[i3] = binary_1.readUint32BE(p3, j4);
        }
        for (var i3 = 16; i3 < 64; i3++) {
          var u3 = w4[i3 - 2];
          var t1 = (u3 >>> 17 | u3 << 32 - 17) ^ (u3 >>> 19 | u3 << 32 - 19) ^ u3 >>> 10;
          u3 = w4[i3 - 15];
          var t2 = (u3 >>> 7 | u3 << 32 - 7) ^ (u3 >>> 18 | u3 << 32 - 18) ^ u3 >>> 3;
          w4[i3] = (t1 + w4[i3 - 7] | 0) + (t2 + w4[i3 - 16] | 0);
        }
        for (var i3 = 0; i3 < 64; i3++) {
          var t1 = (((e2 >>> 6 | e2 << 32 - 6) ^ (e2 >>> 11 | e2 << 32 - 11) ^ (e2 >>> 25 | e2 << 32 - 25)) + (e2 & f4 ^ ~e2 & g3) | 0) + (h5 + (K5[i3] + w4[i3] | 0) | 0) | 0;
          var t2 = ((a3 >>> 2 | a3 << 32 - 2) ^ (a3 >>> 13 | a3 << 32 - 13) ^ (a3 >>> 22 | a3 << 32 - 22)) + (a3 & b4 ^ a3 & c4 ^ b4 & c4) | 0;
          h5 = g3;
          g3 = f4;
          f4 = e2;
          e2 = d3 + t1 | 0;
          d3 = c4;
          c4 = b4;
          b4 = a3;
          a3 = t1 + t2 | 0;
        }
        v4[0] += a3;
        v4[1] += b4;
        v4[2] += c4;
        v4[3] += d3;
        v4[4] += e2;
        v4[5] += f4;
        v4[6] += g3;
        v4[7] += h5;
        pos += 64;
        len -= 64;
      }
      return pos;
    }
    function hash(data) {
      var h5 = new SHA256();
      h5.update(data);
      var digest = h5.digest();
      h5.clean();
      return digest;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/x25519/lib/x25519.js
var require_x25519 = __commonJS({
  "node_modules/@stablelib/x25519/lib/x25519.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;
    var random_1 = require_random();
    var wipe_1 = require_wipe();
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 32;
    exports.SHARED_KEY_LENGTH = 32;
    function gf2(init) {
      const r2 = new Float64Array(16);
      if (init) {
        for (let i3 = 0; i3 < init.length; i3++) {
          r2[i3] = init[i3];
        }
      }
      return r2;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var _121665 = gf2([56129, 1]);
    function car25519(o2) {
      let c4 = 1;
      for (let i3 = 0; i3 < 16; i3++) {
        let v4 = o2[i3] + c4 + 65535;
        c4 = Math.floor(v4 / 65536);
        o2[i3] = v4 - c4 * 65536;
      }
      o2[0] += c4 - 1 + 37 * (c4 - 1);
    }
    function sel25519(p3, q2, b4) {
      const c4 = ~(b4 - 1);
      for (let i3 = 0; i3 < 16; i3++) {
        const t = c4 & (p3[i3] ^ q2[i3]);
        p3[i3] ^= t;
        q2[i3] ^= t;
      }
    }
    function pack25519(o2, n4) {
      const m2 = gf2();
      const t = gf2();
      for (let i3 = 0; i3 < 16; i3++) {
        t[i3] = n4[i3];
      }
      car25519(t);
      car25519(t);
      car25519(t);
      for (let j4 = 0; j4 < 2; j4++) {
        m2[0] = t[0] - 65517;
        for (let i3 = 1; i3 < 15; i3++) {
          m2[i3] = t[i3] - 65535 - (m2[i3 - 1] >> 16 & 1);
          m2[i3 - 1] &= 65535;
        }
        m2[15] = t[15] - 32767 - (m2[14] >> 16 & 1);
        const b4 = m2[15] >> 16 & 1;
        m2[14] &= 65535;
        sel25519(t, m2, 1 - b4);
      }
      for (let i3 = 0; i3 < 16; i3++) {
        o2[2 * i3] = t[i3] & 255;
        o2[2 * i3 + 1] = t[i3] >> 8;
      }
    }
    function unpack25519(o2, n4) {
      for (let i3 = 0; i3 < 16; i3++) {
        o2[i3] = n4[2 * i3] + (n4[2 * i3 + 1] << 8);
      }
      o2[15] &= 32767;
    }
    function add(o2, a3, b4) {
      for (let i3 = 0; i3 < 16; i3++) {
        o2[i3] = a3[i3] + b4[i3];
      }
    }
    function sub(o2, a3, b4) {
      for (let i3 = 0; i3 < 16; i3++) {
        o2[i3] = a3[i3] - b4[i3];
      }
    }
    function mul(o2, a3, b4) {
      let v4, c4, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b02 = b4[0], b1 = b4[1], b22 = b4[2], b32 = b4[3], b42 = b4[4], b5 = b4[5], b6 = b4[6], b7 = b4[7], b8 = b4[8], b9 = b4[9], b10 = b4[10], b11 = b4[11], b12 = b4[12], b13 = b4[13], b14 = b4[14], b15 = b4[15];
      v4 = a3[0];
      t0 += v4 * b02;
      t1 += v4 * b1;
      t2 += v4 * b22;
      t3 += v4 * b32;
      t4 += v4 * b42;
      t5 += v4 * b5;
      t6 += v4 * b6;
      t7 += v4 * b7;
      t8 += v4 * b8;
      t9 += v4 * b9;
      t10 += v4 * b10;
      t11 += v4 * b11;
      t12 += v4 * b12;
      t13 += v4 * b13;
      t14 += v4 * b14;
      t15 += v4 * b15;
      v4 = a3[1];
      t1 += v4 * b02;
      t2 += v4 * b1;
      t3 += v4 * b22;
      t4 += v4 * b32;
      t5 += v4 * b42;
      t6 += v4 * b5;
      t7 += v4 * b6;
      t8 += v4 * b7;
      t9 += v4 * b8;
      t10 += v4 * b9;
      t11 += v4 * b10;
      t12 += v4 * b11;
      t13 += v4 * b12;
      t14 += v4 * b13;
      t15 += v4 * b14;
      t16 += v4 * b15;
      v4 = a3[2];
      t2 += v4 * b02;
      t3 += v4 * b1;
      t4 += v4 * b22;
      t5 += v4 * b32;
      t6 += v4 * b42;
      t7 += v4 * b5;
      t8 += v4 * b6;
      t9 += v4 * b7;
      t10 += v4 * b8;
      t11 += v4 * b9;
      t12 += v4 * b10;
      t13 += v4 * b11;
      t14 += v4 * b12;
      t15 += v4 * b13;
      t16 += v4 * b14;
      t17 += v4 * b15;
      v4 = a3[3];
      t3 += v4 * b02;
      t4 += v4 * b1;
      t5 += v4 * b22;
      t6 += v4 * b32;
      t7 += v4 * b42;
      t8 += v4 * b5;
      t9 += v4 * b6;
      t10 += v4 * b7;
      t11 += v4 * b8;
      t12 += v4 * b9;
      t13 += v4 * b10;
      t14 += v4 * b11;
      t15 += v4 * b12;
      t16 += v4 * b13;
      t17 += v4 * b14;
      t18 += v4 * b15;
      v4 = a3[4];
      t4 += v4 * b02;
      t5 += v4 * b1;
      t6 += v4 * b22;
      t7 += v4 * b32;
      t8 += v4 * b42;
      t9 += v4 * b5;
      t10 += v4 * b6;
      t11 += v4 * b7;
      t12 += v4 * b8;
      t13 += v4 * b9;
      t14 += v4 * b10;
      t15 += v4 * b11;
      t16 += v4 * b12;
      t17 += v4 * b13;
      t18 += v4 * b14;
      t19 += v4 * b15;
      v4 = a3[5];
      t5 += v4 * b02;
      t6 += v4 * b1;
      t7 += v4 * b22;
      t8 += v4 * b32;
      t9 += v4 * b42;
      t10 += v4 * b5;
      t11 += v4 * b6;
      t12 += v4 * b7;
      t13 += v4 * b8;
      t14 += v4 * b9;
      t15 += v4 * b10;
      t16 += v4 * b11;
      t17 += v4 * b12;
      t18 += v4 * b13;
      t19 += v4 * b14;
      t20 += v4 * b15;
      v4 = a3[6];
      t6 += v4 * b02;
      t7 += v4 * b1;
      t8 += v4 * b22;
      t9 += v4 * b32;
      t10 += v4 * b42;
      t11 += v4 * b5;
      t12 += v4 * b6;
      t13 += v4 * b7;
      t14 += v4 * b8;
      t15 += v4 * b9;
      t16 += v4 * b10;
      t17 += v4 * b11;
      t18 += v4 * b12;
      t19 += v4 * b13;
      t20 += v4 * b14;
      t21 += v4 * b15;
      v4 = a3[7];
      t7 += v4 * b02;
      t8 += v4 * b1;
      t9 += v4 * b22;
      t10 += v4 * b32;
      t11 += v4 * b42;
      t12 += v4 * b5;
      t13 += v4 * b6;
      t14 += v4 * b7;
      t15 += v4 * b8;
      t16 += v4 * b9;
      t17 += v4 * b10;
      t18 += v4 * b11;
      t19 += v4 * b12;
      t20 += v4 * b13;
      t21 += v4 * b14;
      t22 += v4 * b15;
      v4 = a3[8];
      t8 += v4 * b02;
      t9 += v4 * b1;
      t10 += v4 * b22;
      t11 += v4 * b32;
      t12 += v4 * b42;
      t13 += v4 * b5;
      t14 += v4 * b6;
      t15 += v4 * b7;
      t16 += v4 * b8;
      t17 += v4 * b9;
      t18 += v4 * b10;
      t19 += v4 * b11;
      t20 += v4 * b12;
      t21 += v4 * b13;
      t22 += v4 * b14;
      t23 += v4 * b15;
      v4 = a3[9];
      t9 += v4 * b02;
      t10 += v4 * b1;
      t11 += v4 * b22;
      t12 += v4 * b32;
      t13 += v4 * b42;
      t14 += v4 * b5;
      t15 += v4 * b6;
      t16 += v4 * b7;
      t17 += v4 * b8;
      t18 += v4 * b9;
      t19 += v4 * b10;
      t20 += v4 * b11;
      t21 += v4 * b12;
      t22 += v4 * b13;
      t23 += v4 * b14;
      t24 += v4 * b15;
      v4 = a3[10];
      t10 += v4 * b02;
      t11 += v4 * b1;
      t12 += v4 * b22;
      t13 += v4 * b32;
      t14 += v4 * b42;
      t15 += v4 * b5;
      t16 += v4 * b6;
      t17 += v4 * b7;
      t18 += v4 * b8;
      t19 += v4 * b9;
      t20 += v4 * b10;
      t21 += v4 * b11;
      t22 += v4 * b12;
      t23 += v4 * b13;
      t24 += v4 * b14;
      t25 += v4 * b15;
      v4 = a3[11];
      t11 += v4 * b02;
      t12 += v4 * b1;
      t13 += v4 * b22;
      t14 += v4 * b32;
      t15 += v4 * b42;
      t16 += v4 * b5;
      t17 += v4 * b6;
      t18 += v4 * b7;
      t19 += v4 * b8;
      t20 += v4 * b9;
      t21 += v4 * b10;
      t22 += v4 * b11;
      t23 += v4 * b12;
      t24 += v4 * b13;
      t25 += v4 * b14;
      t26 += v4 * b15;
      v4 = a3[12];
      t12 += v4 * b02;
      t13 += v4 * b1;
      t14 += v4 * b22;
      t15 += v4 * b32;
      t16 += v4 * b42;
      t17 += v4 * b5;
      t18 += v4 * b6;
      t19 += v4 * b7;
      t20 += v4 * b8;
      t21 += v4 * b9;
      t22 += v4 * b10;
      t23 += v4 * b11;
      t24 += v4 * b12;
      t25 += v4 * b13;
      t26 += v4 * b14;
      t27 += v4 * b15;
      v4 = a3[13];
      t13 += v4 * b02;
      t14 += v4 * b1;
      t15 += v4 * b22;
      t16 += v4 * b32;
      t17 += v4 * b42;
      t18 += v4 * b5;
      t19 += v4 * b6;
      t20 += v4 * b7;
      t21 += v4 * b8;
      t22 += v4 * b9;
      t23 += v4 * b10;
      t24 += v4 * b11;
      t25 += v4 * b12;
      t26 += v4 * b13;
      t27 += v4 * b14;
      t28 += v4 * b15;
      v4 = a3[14];
      t14 += v4 * b02;
      t15 += v4 * b1;
      t16 += v4 * b22;
      t17 += v4 * b32;
      t18 += v4 * b42;
      t19 += v4 * b5;
      t20 += v4 * b6;
      t21 += v4 * b7;
      t22 += v4 * b8;
      t23 += v4 * b9;
      t24 += v4 * b10;
      t25 += v4 * b11;
      t26 += v4 * b12;
      t27 += v4 * b13;
      t28 += v4 * b14;
      t29 += v4 * b15;
      v4 = a3[15];
      t15 += v4 * b02;
      t16 += v4 * b1;
      t17 += v4 * b22;
      t18 += v4 * b32;
      t19 += v4 * b42;
      t20 += v4 * b5;
      t21 += v4 * b6;
      t22 += v4 * b7;
      t23 += v4 * b8;
      t24 += v4 * b9;
      t25 += v4 * b10;
      t26 += v4 * b11;
      t27 += v4 * b12;
      t28 += v4 * b13;
      t29 += v4 * b14;
      t30 += v4 * b15;
      t0 += 38 * t16;
      t1 += 38 * t17;
      t2 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t22;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c4 = 1;
      v4 = t0 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t0 = v4 - c4 * 65536;
      v4 = t1 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t1 = v4 - c4 * 65536;
      v4 = t2 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t2 = v4 - c4 * 65536;
      v4 = t3 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t3 = v4 - c4 * 65536;
      v4 = t4 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t4 = v4 - c4 * 65536;
      v4 = t5 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t5 = v4 - c4 * 65536;
      v4 = t6 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t6 = v4 - c4 * 65536;
      v4 = t7 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t7 = v4 - c4 * 65536;
      v4 = t8 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t8 = v4 - c4 * 65536;
      v4 = t9 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t9 = v4 - c4 * 65536;
      v4 = t10 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t10 = v4 - c4 * 65536;
      v4 = t11 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t11 = v4 - c4 * 65536;
      v4 = t12 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t12 = v4 - c4 * 65536;
      v4 = t13 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t13 = v4 - c4 * 65536;
      v4 = t14 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t14 = v4 - c4 * 65536;
      v4 = t15 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t15 = v4 - c4 * 65536;
      t0 += c4 - 1 + 37 * (c4 - 1);
      c4 = 1;
      v4 = t0 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t0 = v4 - c4 * 65536;
      v4 = t1 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t1 = v4 - c4 * 65536;
      v4 = t2 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t2 = v4 - c4 * 65536;
      v4 = t3 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t3 = v4 - c4 * 65536;
      v4 = t4 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t4 = v4 - c4 * 65536;
      v4 = t5 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t5 = v4 - c4 * 65536;
      v4 = t6 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t6 = v4 - c4 * 65536;
      v4 = t7 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t7 = v4 - c4 * 65536;
      v4 = t8 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t8 = v4 - c4 * 65536;
      v4 = t9 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t9 = v4 - c4 * 65536;
      v4 = t10 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t10 = v4 - c4 * 65536;
      v4 = t11 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t11 = v4 - c4 * 65536;
      v4 = t12 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t12 = v4 - c4 * 65536;
      v4 = t13 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t13 = v4 - c4 * 65536;
      v4 = t14 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t14 = v4 - c4 * 65536;
      v4 = t15 + c4 + 65535;
      c4 = Math.floor(v4 / 65536);
      t15 = v4 - c4 * 65536;
      t0 += c4 - 1 + 37 * (c4 - 1);
      o2[0] = t0;
      o2[1] = t1;
      o2[2] = t2;
      o2[3] = t3;
      o2[4] = t4;
      o2[5] = t5;
      o2[6] = t6;
      o2[7] = t7;
      o2[8] = t8;
      o2[9] = t9;
      o2[10] = t10;
      o2[11] = t11;
      o2[12] = t12;
      o2[13] = t13;
      o2[14] = t14;
      o2[15] = t15;
    }
    function square(o2, a3) {
      mul(o2, a3, a3);
    }
    function inv25519(o2, inp) {
      const c4 = gf2();
      for (let i3 = 0; i3 < 16; i3++) {
        c4[i3] = inp[i3];
      }
      for (let i3 = 253; i3 >= 0; i3--) {
        square(c4, c4);
        if (i3 !== 2 && i3 !== 4) {
          mul(c4, c4, inp);
        }
      }
      for (let i3 = 0; i3 < 16; i3++) {
        o2[i3] = c4[i3];
      }
    }
    function scalarMult(n4, p3) {
      const z4 = new Uint8Array(32);
      const x4 = new Float64Array(80);
      const a3 = gf2(), b4 = gf2(), c4 = gf2(), d3 = gf2(), e2 = gf2(), f4 = gf2();
      for (let i3 = 0; i3 < 31; i3++) {
        z4[i3] = n4[i3];
      }
      z4[31] = n4[31] & 127 | 64;
      z4[0] &= 248;
      unpack25519(x4, p3);
      for (let i3 = 0; i3 < 16; i3++) {
        b4[i3] = x4[i3];
      }
      a3[0] = d3[0] = 1;
      for (let i3 = 254; i3 >= 0; --i3) {
        const r2 = z4[i3 >>> 3] >>> (i3 & 7) & 1;
        sel25519(a3, b4, r2);
        sel25519(c4, d3, r2);
        add(e2, a3, c4);
        sub(a3, a3, c4);
        add(c4, b4, d3);
        sub(b4, b4, d3);
        square(d3, e2);
        square(f4, a3);
        mul(a3, c4, a3);
        mul(c4, b4, e2);
        add(e2, a3, c4);
        sub(a3, a3, c4);
        square(b4, a3);
        sub(c4, d3, f4);
        mul(a3, c4, _121665);
        add(a3, a3, d3);
        mul(c4, c4, a3);
        mul(a3, d3, f4);
        mul(d3, b4, x4);
        square(b4, e2);
        sel25519(a3, b4, r2);
        sel25519(c4, d3, r2);
      }
      for (let i3 = 0; i3 < 16; i3++) {
        x4[i3 + 16] = a3[i3];
        x4[i3 + 32] = c4[i3];
        x4[i3 + 48] = b4[i3];
        x4[i3 + 64] = d3[i3];
      }
      const x32 = x4.subarray(32);
      const x16 = x4.subarray(16);
      inv25519(x32, x32);
      mul(x16, x16, x32);
      const q2 = new Uint8Array(32);
      pack25519(q2, x16);
      return q2;
    }
    exports.scalarMult = scalarMult;
    function scalarMultBase(n4) {
      return scalarMult(n4, _9);
    }
    exports.scalarMultBase = scalarMultBase;
    function generateKeyPairFromSeed(seed) {
      if (seed.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      const secretKey = new Uint8Array(seed);
      const publicKey = scalarMultBase(secretKey);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed;
    function generateKeyPair2(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair2;
    function sharedKey2(mySecretKey, theirPublicKey, rejectZero = false) {
      if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect secret key length");
      }
      if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect public key length");
      }
      const result = scalarMult(mySecretKey, theirPublicKey);
      if (rejectZero) {
        let zeros = 0;
        for (let i3 = 0; i3 < result.length; i3++) {
          zeros |= result[i3];
        }
        if (zeros === 0) {
          throw new Error("X25519: invalid shared key");
        }
      }
      return result;
    }
    exports.sharedKey = sharedKey2;
  }
});

// node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js
var tslib_es6_exports2 = {};
__export(tslib_es6_exports2, {
  __assign: () => __assign2,
  __asyncDelegator: () => __asyncDelegator2,
  __asyncGenerator: () => __asyncGenerator2,
  __asyncValues: () => __asyncValues2,
  __await: () => __await2,
  __awaiter: () => __awaiter2,
  __classPrivateFieldGet: () => __classPrivateFieldGet2,
  __classPrivateFieldSet: () => __classPrivateFieldSet2,
  __createBinding: () => __createBinding2,
  __decorate: () => __decorate2,
  __exportStar: () => __exportStar2,
  __extends: () => __extends2,
  __generator: () => __generator2,
  __importDefault: () => __importDefault2,
  __importStar: () => __importStar2,
  __makeTemplateObject: () => __makeTemplateObject2,
  __metadata: () => __metadata2,
  __param: () => __param2,
  __read: () => __read2,
  __rest: () => __rest2,
  __spread: () => __spread2,
  __spreadArrays: () => __spreadArrays2,
  __values: () => __values2
});
function __extends2(d3, b4) {
  extendStatics2(d3, b4);
  function __() {
    this.constructor = d3;
  }
  d3.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
}
function __rest2(s2, e2) {
  var t = {};
  for (var p3 in s2) if (Object.prototype.hasOwnProperty.call(s2, p3) && e2.indexOf(p3) < 0)
    t[p3] = s2[p3];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p3 = Object.getOwnPropertySymbols(s2); i3 < p3.length; i3++) {
      if (e2.indexOf(p3[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p3[i3]))
        t[p3[i3]] = s2[p3[i3]];
    }
  return t;
}
function __decorate2(decorators, target, key, desc) {
  var c4 = arguments.length, r2 = c4 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d3 = decorators[i3]) r2 = (c4 < 3 ? d3(r2) : c4 > 3 ? d3(target, key, r2) : d3(target, key)) || r2;
  return c4 > 3 && r2 && Object.defineProperty(target, key, r2), r2;
}
function __param2(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata2(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter2(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator2(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f4, y6, t, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n4) {
    return function(v4) {
      return step([n4, v4]);
    };
  }
  function step(op) {
    if (f4) throw new TypeError("Generator is already executing.");
    while (_3) try {
      if (f4 = 1, y6 && (t = op[0] & 2 ? y6["return"] : op[0] ? y6["throw"] || ((t = y6["return"]) && t.call(y6), 0) : y6.next) && !(t = t.call(y6, op[1])).done) return t;
      if (y6 = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y6 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t = _3.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t[1]) {
            _3.label = t[1];
            t = op;
            break;
          }
          if (t && _3.label < t[2]) {
            _3.label = t[2];
            _3.ops.push(op);
            break;
          }
          if (t[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y6 = 0;
    } finally {
      f4 = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding2(o2, m2, k5, k22) {
  if (k22 === void 0) k22 = k5;
  o2[k22] = m2[k5];
}
function __exportStar2(m2, exports) {
  for (var p3 in m2) if (p3 !== "default" && !exports.hasOwnProperty(p3)) exports[p3] = m2[p3];
}
function __values2(o2) {
  var s2 = typeof Symbol === "function" && Symbol.iterator, m2 = s2 && o2[s2], i3 = 0;
  if (m2) return m2.call(o2);
  if (o2 && typeof o2.length === "number") return {
    next: function() {
      if (o2 && i3 >= o2.length) o2 = void 0;
      return { value: o2 && o2[i3++], done: !o2 };
    }
  };
  throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read2(o2, n4) {
  var m2 = typeof Symbol === "function" && o2[Symbol.iterator];
  if (!m2) return o2;
  var i3 = m2.call(o2), r2, ar4 = [], e2;
  try {
    while ((n4 === void 0 || n4-- > 0) && !(r2 = i3.next()).done) ar4.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m2 = i3["return"])) m2.call(i3);
    } finally {
      if (e2) throw e2.error;
    }
  }
  return ar4;
}
function __spread2() {
  for (var ar4 = [], i3 = 0; i3 < arguments.length; i3++)
    ar4 = ar4.concat(__read2(arguments[i3]));
  return ar4;
}
function __spreadArrays2() {
  for (var s2 = 0, i3 = 0, il = arguments.length; i3 < il; i3++) s2 += arguments[i3].length;
  for (var r2 = Array(s2), k5 = 0, i3 = 0; i3 < il; i3++)
    for (var a3 = arguments[i3], j4 = 0, jl = a3.length; j4 < jl; j4++, k5++)
      r2[k5] = a3[j4];
  return r2;
}
function __await2(v4) {
  return this instanceof __await2 ? (this.v = v4, this) : new __await2(v4);
}
function __asyncGenerator2(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g3 = generator.apply(thisArg, _arguments || []), i3, q2 = [];
  return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3;
  function verb(n4) {
    if (g3[n4]) i3[n4] = function(v4) {
      return new Promise(function(a3, b4) {
        q2.push([n4, v4, a3, b4]) > 1 || resume(n4, v4);
      });
    };
  }
  function resume(n4, v4) {
    try {
      step(g3[n4](v4));
    } catch (e2) {
      settle(q2[0][3], e2);
    }
  }
  function step(r2) {
    r2.value instanceof __await2 ? Promise.resolve(r2.value.v).then(fulfill, reject) : settle(q2[0][2], r2);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f4, v4) {
    if (f4(v4), q2.shift(), q2.length) resume(q2[0][0], q2[0][1]);
  }
}
function __asyncDelegator2(o2) {
  var i3, p3;
  return i3 = {}, verb("next"), verb("throw", function(e2) {
    throw e2;
  }), verb("return"), i3[Symbol.iterator] = function() {
    return this;
  }, i3;
  function verb(n4, f4) {
    i3[n4] = o2[n4] ? function(v4) {
      return (p3 = !p3) ? { value: __await2(o2[n4](v4)), done: n4 === "return" } : f4 ? f4(v4) : v4;
    } : f4;
  }
}
function __asyncValues2(o2) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m2 = o2[Symbol.asyncIterator], i3;
  return m2 ? m2.call(o2) : (o2 = typeof __values2 === "function" ? __values2(o2) : o2[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3);
  function verb(n4) {
    i3[n4] = o2[n4] && function(v4) {
      return new Promise(function(resolve, reject) {
        v4 = o2[n4](v4), settle(resolve, reject, v4.done, v4.value);
      });
    };
  }
  function settle(resolve, reject, d3, v4) {
    Promise.resolve(v4).then(function(v5) {
      resolve({ value: v5, done: d3 });
    }, reject);
  }
}
function __makeTemplateObject2(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar2(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k5 in mod) if (Object.hasOwnProperty.call(mod, k5)) result[k5] = mod[k5];
  }
  result.default = mod;
  return result;
}
function __importDefault2(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet2(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet2(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics2, __assign2;
var init_tslib_es62 = __esm({
  "node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js"() {
    extendStatics2 = function(d3, b4) {
      extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b5) {
        d4.__proto__ = b5;
      } || function(d4, b5) {
        for (var p3 in b5) if (b5.hasOwnProperty(p3)) d4[p3] = b5[p3];
      };
      return extendStatics2(d3, b4);
    };
    __assign2 = function() {
      __assign2 = Object.assign || function __assign4(t) {
        for (var s2, i3 = 1, n4 = arguments.length; i3 < n4; i3++) {
          s2 = arguments[i3];
          for (var p3 in s2) if (Object.prototype.hasOwnProperty.call(s2, p3)) t[p3] = s2[p3];
        }
        return t;
      };
      return __assign2.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/environment/dist/cjs/crypto.js
var require_crypto2 = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/crypto.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;
    function getBrowerCrypto() {
      return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};
    }
    exports.getBrowerCrypto = getBrowerCrypto;
    function getSubtleCrypto() {
      const browserCrypto = getBrowerCrypto();
      return browserCrypto.subtle || browserCrypto.webkitSubtle;
    }
    exports.getSubtleCrypto = getSubtleCrypto;
    function isBrowserCryptoAvailable() {
      return !!getBrowerCrypto() && !!getSubtleCrypto();
    }
    exports.isBrowserCryptoAvailable = isBrowserCryptoAvailable;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/env.js
var require_env = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/env.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowser = exports.isNode = exports.isReactNative = void 0;
    function isReactNative() {
      return typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative";
    }
    exports.isReactNative = isReactNative;
    function isNode2() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    }
    exports.isNode = isNode2;
    function isBrowser() {
      return !isReactNative() && !isNode2();
    }
    exports.isBrowser = isBrowser;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/index.js
var require_cjs4 = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es62(), __toCommonJS(tslib_es6_exports2));
    tslib_1.__exportStar(require_crypto2(), exports);
    tslib_1.__exportStar(require_env(), exports);
  }
});

// node_modules/@thirdweb-dev/wallets/node_modules/tslib/tslib.es6.js
var tslib_es6_exports3 = {};
__export(tslib_es6_exports3, {
  __assign: () => __assign3,
  __asyncDelegator: () => __asyncDelegator3,
  __asyncGenerator: () => __asyncGenerator3,
  __asyncValues: () => __asyncValues3,
  __await: () => __await3,
  __awaiter: () => __awaiter3,
  __classPrivateFieldGet: () => __classPrivateFieldGet3,
  __classPrivateFieldSet: () => __classPrivateFieldSet3,
  __createBinding: () => __createBinding3,
  __decorate: () => __decorate3,
  __exportStar: () => __exportStar3,
  __extends: () => __extends3,
  __generator: () => __generator3,
  __importDefault: () => __importDefault3,
  __importStar: () => __importStar3,
  __makeTemplateObject: () => __makeTemplateObject3,
  __metadata: () => __metadata3,
  __param: () => __param3,
  __read: () => __read3,
  __rest: () => __rest3,
  __spread: () => __spread3,
  __spreadArrays: () => __spreadArrays3,
  __values: () => __values3
});
function __extends3(d3, b4) {
  extendStatics3(d3, b4);
  function __() {
    this.constructor = d3;
  }
  d3.prototype = b4 === null ? Object.create(b4) : (__.prototype = b4.prototype, new __());
}
function __rest3(s2, e2) {
  var t = {};
  for (var p3 in s2) if (Object.prototype.hasOwnProperty.call(s2, p3) && e2.indexOf(p3) < 0)
    t[p3] = s2[p3];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p3 = Object.getOwnPropertySymbols(s2); i3 < p3.length; i3++) {
      if (e2.indexOf(p3[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p3[i3]))
        t[p3[i3]] = s2[p3[i3]];
    }
  return t;
}
function __decorate3(decorators, target, key, desc) {
  var c4 = arguments.length, r2 = c4 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d3 = decorators[i3]) r2 = (c4 < 3 ? d3(r2) : c4 > 3 ? d3(target, key, r2) : d3(target, key)) || r2;
  return c4 > 3 && r2 && Object.defineProperty(target, key, r2), r2;
}
function __param3(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata3(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter3(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator3(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f4, y6, t, g3;
  return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n4) {
    return function(v4) {
      return step([n4, v4]);
    };
  }
  function step(op) {
    if (f4) throw new TypeError("Generator is already executing.");
    while (_3) try {
      if (f4 = 1, y6 && (t = op[0] & 2 ? y6["return"] : op[0] ? y6["throw"] || ((t = y6["return"]) && t.call(y6), 0) : y6.next) && !(t = t.call(y6, op[1])).done) return t;
      if (y6 = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _3.label++;
          return { value: op[1], done: false };
        case 5:
          _3.label++;
          y6 = op[1];
          op = [0];
          continue;
        case 7:
          op = _3.ops.pop();
          _3.trys.pop();
          continue;
        default:
          if (!(t = _3.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _3 = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _3.label = op[1];
            break;
          }
          if (op[0] === 6 && _3.label < t[1]) {
            _3.label = t[1];
            t = op;
            break;
          }
          if (t && _3.label < t[2]) {
            _3.label = t[2];
            _3.ops.push(op);
            break;
          }
          if (t[2]) _3.ops.pop();
          _3.trys.pop();
          continue;
      }
      op = body.call(thisArg, _3);
    } catch (e2) {
      op = [6, e2];
      y6 = 0;
    } finally {
      f4 = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding3(o2, m2, k5, k22) {
  if (k22 === void 0) k22 = k5;
  o2[k22] = m2[k5];
}
function __exportStar3(m2, exports) {
  for (var p3 in m2) if (p3 !== "default" && !exports.hasOwnProperty(p3)) exports[p3] = m2[p3];
}
function __values3(o2) {
  var s2 = typeof Symbol === "function" && Symbol.iterator, m2 = s2 && o2[s2], i3 = 0;
  if (m2) return m2.call(o2);
  if (o2 && typeof o2.length === "number") return {
    next: function() {
      if (o2 && i3 >= o2.length) o2 = void 0;
      return { value: o2 && o2[i3++], done: !o2 };
    }
  };
  throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read3(o2, n4) {
  var m2 = typeof Symbol === "function" && o2[Symbol.iterator];
  if (!m2) return o2;
  var i3 = m2.call(o2), r2, ar4 = [], e2;
  try {
    while ((n4 === void 0 || n4-- > 0) && !(r2 = i3.next()).done) ar4.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m2 = i3["return"])) m2.call(i3);
    } finally {
      if (e2) throw e2.error;
    }
  }
  return ar4;
}
function __spread3() {
  for (var ar4 = [], i3 = 0; i3 < arguments.length; i3++)
    ar4 = ar4.concat(__read3(arguments[i3]));
  return ar4;
}
function __spreadArrays3() {
  for (var s2 = 0, i3 = 0, il = arguments.length; i3 < il; i3++) s2 += arguments[i3].length;
  for (var r2 = Array(s2), k5 = 0, i3 = 0; i3 < il; i3++)
    for (var a3 = arguments[i3], j4 = 0, jl = a3.length; j4 < jl; j4++, k5++)
      r2[k5] = a3[j4];
  return r2;
}
function __await3(v4) {
  return this instanceof __await3 ? (this.v = v4, this) : new __await3(v4);
}
function __asyncGenerator3(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g3 = generator.apply(thisArg, _arguments || []), i3, q2 = [];
  return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3;
  function verb(n4) {
    if (g3[n4]) i3[n4] = function(v4) {
      return new Promise(function(a3, b4) {
        q2.push([n4, v4, a3, b4]) > 1 || resume(n4, v4);
      });
    };
  }
  function resume(n4, v4) {
    try {
      step(g3[n4](v4));
    } catch (e2) {
      settle(q2[0][3], e2);
    }
  }
  function step(r2) {
    r2.value instanceof __await3 ? Promise.resolve(r2.value.v).then(fulfill, reject) : settle(q2[0][2], r2);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f4, v4) {
    if (f4(v4), q2.shift(), q2.length) resume(q2[0][0], q2[0][1]);
  }
}
function __asyncDelegator3(o2) {
  var i3, p3;
  return i3 = {}, verb("next"), verb("throw", function(e2) {
    throw e2;
  }), verb("return"), i3[Symbol.iterator] = function() {
    return this;
  }, i3;
  function verb(n4, f4) {
    i3[n4] = o2[n4] ? function(v4) {
      return (p3 = !p3) ? { value: __await3(o2[n4](v4)), done: n4 === "return" } : f4 ? f4(v4) : v4;
    } : f4;
  }
}
function __asyncValues3(o2) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m2 = o2[Symbol.asyncIterator], i3;
  return m2 ? m2.call(o2) : (o2 = typeof __values3 === "function" ? __values3(o2) : o2[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3);
  function verb(n4) {
    i3[n4] = o2[n4] && function(v4) {
      return new Promise(function(resolve, reject) {
        v4 = o2[n4](v4), settle(resolve, reject, v4.done, v4.value);
      });
    };
  }
  function settle(resolve, reject, d3, v4) {
    Promise.resolve(v4).then(function(v5) {
      resolve({ value: v5, done: d3 });
    }, reject);
  }
}
function __makeTemplateObject3(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar3(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k5 in mod) if (Object.hasOwnProperty.call(mod, k5)) result[k5] = mod[k5];
  }
  result.default = mod;
  return result;
}
function __importDefault3(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet3(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet3(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics3, __assign3;
var init_tslib_es63 = __esm({
  "node_modules/@thirdweb-dev/wallets/node_modules/tslib/tslib.es6.js"() {
    extendStatics3 = function(d3, b4) {
      extendStatics3 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b5) {
        d4.__proto__ = b5;
      } || function(d4, b5) {
        for (var p3 in b5) if (b5.hasOwnProperty(p3)) d4[p3] = b5[p3];
      };
      return extendStatics3(d3, b4);
    };
    __assign3 = function() {
      __assign3 = Object.assign || function __assign4(t) {
        for (var s2, i3 = 1, n4 = arguments.length; i3 < n4; i3++) {
          s2 = arguments[i3];
          for (var p3 in s2) if (Object.prototype.hasOwnProperty.call(s2, p3)) t[p3] = s2[p3];
        }
        return t;
      };
      return __assign3.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/events/dist/esm/events.js
var IEvents;
var init_events = __esm({
  "node_modules/@walletconnect/events/dist/esm/events.js"() {
    IEvents = class {
    };
  }
});

// node_modules/@walletconnect/events/dist/esm/index.js
var esm_exports2 = {};
__export(esm_exports2, {
  IEvents: () => IEvents
});
var init_esm = __esm({
  "node_modules/@walletconnect/events/dist/esm/index.js"() {
    init_events();
  }
});

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js
var require_heartbeat = __commonJS({
  "node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IHeartBeat = void 0;
    var events_1 = (init_esm(), __toCommonJS(esm_exports2));
    var IHeartBeat = class extends events_1.IEvents {
      constructor(opts) {
        super();
      }
    };
    exports.IHeartBeat = IHeartBeat;
  }
});

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js
var require_types2 = __commonJS({
  "node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es63(), __toCommonJS(tslib_es6_exports3));
    tslib_1.__exportStar(require_heartbeat(), exports);
  }
});

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js
var require_heartbeat2 = __commonJS({
  "node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HEARTBEAT_EVENTS = exports.HEARTBEAT_INTERVAL = void 0;
    var time_1 = require_cjs();
    exports.HEARTBEAT_INTERVAL = time_1.FIVE_SECONDS;
    exports.HEARTBEAT_EVENTS = {
      pulse: "heartbeat_pulse"
    };
  }
});

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js
var require_constants2 = __commonJS({
  "node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es63(), __toCommonJS(tslib_es6_exports3));
    tslib_1.__exportStar(require_heartbeat2(), exports);
  }
});

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js
var require_heartbeat3 = __commonJS({
  "node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HeartBeat = void 0;
    var tslib_1 = (init_tslib_es63(), __toCommonJS(tslib_es6_exports3));
    var events_1 = require_events();
    var time_1 = require_cjs();
    var types_1 = require_types2();
    var constants_1 = require_constants2();
    var HeartBeat = class _HeartBeat extends types_1.IHeartBeat {
      constructor(opts) {
        super(opts);
        this.events = new events_1.EventEmitter();
        this.interval = constants_1.HEARTBEAT_INTERVAL;
        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;
      }
      static init(opts) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          const heartbeat = new _HeartBeat(opts);
          yield heartbeat.init();
          return heartbeat;
        });
      }
      init() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          yield this.initialize();
        });
      }
      stop() {
        clearInterval(this.intervalRef);
      }
      on(event, listener) {
        this.events.on(event, listener);
      }
      once(event, listener) {
        this.events.once(event, listener);
      }
      off(event, listener) {
        this.events.off(event, listener);
      }
      removeListener(event, listener) {
        this.events.removeListener(event, listener);
      }
      initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          this.intervalRef = setInterval(() => this.pulse(), time_1.toMiliseconds(this.interval));
        });
      }
      pulse() {
        this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);
      }
    };
    exports.HeartBeat = HeartBeat;
  }
});

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/index.js
var require_cjs5 = __commonJS({
  "node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/heartbeat/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es63(), __toCommonJS(tslib_es6_exports3));
    tslib_1.__exportStar(require_heartbeat3(), exports);
    tslib_1.__exportStar(require_types2(), exports);
    tslib_1.__exportStar(require_constants2(), exports);
  }
});

// node_modules/quick-format-unescaped/index.js
var require_quick_format_unescaped = __commonJS({
  "node_modules/quick-format-unescaped/index.js"(exports, module) {
    "use strict";
    function tryStringify(o2) {
      try {
        return JSON.stringify(o2);
      } catch (e2) {
        return '"[Circular]"';
      }
    }
    module.exports = format;
    function format(f4, args, opts) {
      var ss3 = opts && opts.stringify || tryStringify;
      var offset = 1;
      if (typeof f4 === "object" && f4 !== null) {
        var len = args.length + offset;
        if (len === 1) return f4;
        var objects = new Array(len);
        objects[0] = ss3(f4);
        for (var index = 1; index < len; index++) {
          objects[index] = ss3(args[index]);
        }
        return objects.join(" ");
      }
      if (typeof f4 !== "string") {
        return f4;
      }
      var argLen = args.length;
      if (argLen === 0) return f4;
      var str = "";
      var a3 = 1 - offset;
      var lastPos = -1;
      var flen = f4 && f4.length || 0;
      for (var i3 = 0; i3 < flen; ) {
        if (f4.charCodeAt(i3) === 37 && i3 + 1 < flen) {
          lastPos = lastPos > -1 ? lastPos : 0;
          switch (f4.charCodeAt(i3 + 1)) {
            case 100:
            // 'd'
            case 102:
              if (a3 >= argLen)
                break;
              if (args[a3] == null) break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += Number(args[a3]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 105:
              if (a3 >= argLen)
                break;
              if (args[a3] == null) break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += Math.floor(Number(args[a3]));
              lastPos = i3 + 2;
              i3++;
              break;
            case 79:
            // 'O'
            case 111:
            // 'o'
            case 106:
              if (a3 >= argLen)
                break;
              if (args[a3] === void 0) break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              var type = typeof args[a3];
              if (type === "string") {
                str += "'" + args[a3] + "'";
                lastPos = i3 + 2;
                i3++;
                break;
              }
              if (type === "function") {
                str += args[a3].name || "<anonymous>";
                lastPos = i3 + 2;
                i3++;
                break;
              }
              str += ss3(args[a3]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 115:
              if (a3 >= argLen)
                break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += String(args[a3]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 37:
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += "%";
              lastPos = i3 + 2;
              i3++;
              a3--;
              break;
          }
          ++a3;
        }
        ++i3;
      }
      if (lastPos === -1)
        return f4;
      else if (lastPos < flen) {
        str += f4.slice(lastPos);
      }
      return str;
    }
  }
});

// node_modules/pino/browser.js
var require_browser2 = __commonJS({
  "node_modules/pino/browser.js"(exports, module) {
    "use strict";
    var format = require_quick_format_unescaped();
    module.exports = pino;
    var _console = pfGlobalThisOrFallback().console || {};
    var stdSerializers = {
      mapHttpRequest: mock,
      mapHttpResponse: mock,
      wrapRequestSerializer: passthrough,
      wrapResponseSerializer: passthrough,
      wrapErrorSerializer: passthrough,
      req: mock,
      res: mock,
      err: asErrValue
    };
    function shouldSerialize(serialize, serializers) {
      if (Array.isArray(serialize)) {
        const hasToFilter = serialize.filter(function(k5) {
          return k5 !== "!stdSerializers.err";
        });
        return hasToFilter;
      } else if (serialize === true) {
        return Object.keys(serializers);
      }
      return false;
    }
    function pino(opts) {
      opts = opts || {};
      opts.browser = opts.browser || {};
      const transmit2 = opts.browser.transmit;
      if (transmit2 && typeof transmit2.send !== "function") {
        throw Error("pino: transmit option must have a send function");
      }
      const proto = opts.browser.write || _console;
      if (opts.browser.write) opts.browser.asObject = true;
      const serializers = opts.serializers || {};
      const serialize = shouldSerialize(opts.browser.serialize, serializers);
      let stdErrSerialize = opts.browser.serialize;
      if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf("!stdSerializers.err") > -1) stdErrSerialize = false;
      const levels = ["error", "fatal", "warn", "info", "debug", "trace"];
      if (typeof proto === "function") {
        proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;
      }
      if (opts.enabled === false) opts.level = "silent";
      const level = opts.level || "info";
      const logger = Object.create(proto);
      if (!logger.log) logger.log = noop;
      Object.defineProperty(logger, "levelVal", {
        get: getLevelVal
      });
      Object.defineProperty(logger, "level", {
        get: getLevel,
        set: setLevel
      });
      const setOpts = {
        transmit: transmit2,
        serialize,
        asObject: opts.browser.asObject,
        levels,
        timestamp: getTimeFunction(opts)
      };
      logger.levels = pino.levels;
      logger.level = level;
      logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;
      logger.serializers = serializers;
      logger._serialize = serialize;
      logger._stdErrSerialize = stdErrSerialize;
      logger.child = child;
      if (transmit2) logger._logEvent = createLogEventShape();
      function getLevelVal() {
        return this.level === "silent" ? Infinity : this.levels.values[this.level];
      }
      function getLevel() {
        return this._level;
      }
      function setLevel(level2) {
        if (level2 !== "silent" && !this.levels.values[level2]) {
          throw Error("unknown level " + level2);
        }
        this._level = level2;
        set2(setOpts, logger, "error", "log");
        set2(setOpts, logger, "fatal", "error");
        set2(setOpts, logger, "warn", "error");
        set2(setOpts, logger, "info", "log");
        set2(setOpts, logger, "debug", "log");
        set2(setOpts, logger, "trace", "log");
      }
      function child(bindings, childOptions) {
        if (!bindings) {
          throw new Error("missing bindings for child Pino");
        }
        childOptions = childOptions || {};
        if (serialize && bindings.serializers) {
          childOptions.serializers = bindings.serializers;
        }
        const childOptionsSerializers = childOptions.serializers;
        if (serialize && childOptionsSerializers) {
          var childSerializers = Object.assign({}, serializers, childOptionsSerializers);
          var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;
          delete bindings.serializers;
          applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);
        }
        function Child(parent) {
          this._childLevel = (parent._childLevel | 0) + 1;
          this.error = bind(parent, bindings, "error");
          this.fatal = bind(parent, bindings, "fatal");
          this.warn = bind(parent, bindings, "warn");
          this.info = bind(parent, bindings, "info");
          this.debug = bind(parent, bindings, "debug");
          this.trace = bind(parent, bindings, "trace");
          if (childSerializers) {
            this.serializers = childSerializers;
            this._serialize = childSerialize;
          }
          if (transmit2) {
            this._logEvent = createLogEventShape(
              [].concat(parent._logEvent.bindings, bindings)
            );
          }
        }
        Child.prototype = this;
        return new Child(this);
      }
      return logger;
    }
    pino.levels = {
      values: {
        fatal: 60,
        error: 50,
        warn: 40,
        info: 30,
        debug: 20,
        trace: 10
      },
      labels: {
        10: "trace",
        20: "debug",
        30: "info",
        40: "warn",
        50: "error",
        60: "fatal"
      }
    };
    pino.stdSerializers = stdSerializers;
    pino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime });
    function set2(opts, logger, level, fallback) {
      const proto = Object.getPrototypeOf(logger);
      logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;
      wrap(opts, logger, level);
    }
    function wrap(opts, logger, level) {
      if (!opts.transmit && logger[level] === noop) return;
      logger[level] = /* @__PURE__ */ function(write) {
        return function LOG() {
          const ts3 = opts.timestamp();
          const args = new Array(arguments.length);
          const proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;
          for (var i3 = 0; i3 < args.length; i3++) args[i3] = arguments[i3];
          if (opts.serialize && !opts.asObject) {
            applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);
          }
          if (opts.asObject) write.call(proto, asObject(this, level, args, ts3));
          else write.apply(proto, args);
          if (opts.transmit) {
            const transmitLevel = opts.transmit.level || logger.level;
            const transmitValue = pino.levels.values[transmitLevel];
            const methodValue = pino.levels.values[level];
            if (methodValue < transmitValue) return;
            transmit(this, {
              ts: ts3,
              methodLevel: level,
              methodValue,
              transmitLevel,
              transmitValue: pino.levels.values[opts.transmit.level || logger.level],
              send: opts.transmit.send,
              val: logger.levelVal
            }, args);
          }
        };
      }(logger[level]);
    }
    function asObject(logger, level, args, ts3) {
      if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);
      const argsCloned = args.slice();
      let msg = argsCloned[0];
      const o2 = {};
      if (ts3) {
        o2.time = ts3;
      }
      o2.level = pino.levels.values[level];
      let lvl = (logger._childLevel | 0) + 1;
      if (lvl < 1) lvl = 1;
      if (msg !== null && typeof msg === "object") {
        while (lvl-- && typeof argsCloned[0] === "object") {
          Object.assign(o2, argsCloned.shift());
        }
        msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : void 0;
      } else if (typeof msg === "string") msg = format(argsCloned.shift(), argsCloned);
      if (msg !== void 0) o2.msg = msg;
      return o2;
    }
    function applySerializers(args, serialize, serializers, stdErrSerialize) {
      for (const i3 in args) {
        if (stdErrSerialize && args[i3] instanceof Error) {
          args[i3] = pino.stdSerializers.err(args[i3]);
        } else if (typeof args[i3] === "object" && !Array.isArray(args[i3])) {
          for (const k5 in args[i3]) {
            if (serialize && serialize.indexOf(k5) > -1 && k5 in serializers) {
              args[i3][k5] = serializers[k5](args[i3][k5]);
            }
          }
        }
      }
    }
    function bind(parent, bindings, level) {
      return function() {
        const args = new Array(1 + arguments.length);
        args[0] = bindings;
        for (var i3 = 1; i3 < args.length; i3++) {
          args[i3] = arguments[i3 - 1];
        }
        return parent[level].apply(this, args);
      };
    }
    function transmit(logger, opts, args) {
      const send = opts.send;
      const ts3 = opts.ts;
      const methodLevel = opts.methodLevel;
      const methodValue = opts.methodValue;
      const val = opts.val;
      const bindings = logger._logEvent.bindings;
      applySerializers(
        args,
        logger._serialize || Object.keys(logger.serializers),
        logger.serializers,
        logger._stdErrSerialize === void 0 ? true : logger._stdErrSerialize
      );
      logger._logEvent.ts = ts3;
      logger._logEvent.messages = args.filter(function(arg) {
        return bindings.indexOf(arg) === -1;
      });
      logger._logEvent.level.label = methodLevel;
      logger._logEvent.level.value = methodValue;
      send(methodLevel, logger._logEvent, val);
      logger._logEvent = createLogEventShape(bindings);
    }
    function createLogEventShape(bindings) {
      return {
        ts: 0,
        messages: [],
        bindings: bindings || [],
        level: { label: "", value: 0 }
      };
    }
    function asErrValue(err) {
      const obj = {
        type: err.constructor.name,
        msg: err.message,
        stack: err.stack
      };
      for (const key in err) {
        if (obj[key] === void 0) {
          obj[key] = err[key];
        }
      }
      return obj;
    }
    function getTimeFunction(opts) {
      if (typeof opts.timestamp === "function") {
        return opts.timestamp;
      }
      if (opts.timestamp === false) {
        return nullTime;
      }
      return epochTime;
    }
    function mock() {
      return {};
    }
    function passthrough(a3) {
      return a3;
    }
    function noop() {
    }
    function nullTime() {
      return false;
    }
    function epochTime() {
      return Date.now();
    }
    function unixTime() {
      return Math.round(Date.now() / 1e3);
    }
    function isoTime() {
      return new Date(Date.now()).toISOString();
    }
    function pfGlobalThisOrFallback() {
      function defd(o2) {
        return typeof o2 !== "undefined" && o2;
      }
      try {
        if (typeof globalThis !== "undefined") return globalThis;
        Object.defineProperty(Object.prototype, "globalThis", {
          get: function() {
            delete Object.prototype.globalThis;
            return this.globalThis = this;
          },
          configurable: true
        });
        return globalThis;
      } catch (e2) {
        return defd(self) || defd(window) || defd(this) || {};
      }
    }
  }
});

// node_modules/@thirdweb-dev/wallets/node_modules/ws/browser.js
var require_browser3 = __commonJS({
  "node_modules/@thirdweb-dev/wallets/node_modules/ws/browser.js"(exports, module) {
    "use strict";
    module.exports = function() {
      throw new Error(
        "ws does not work in the browser. Browser clients must use the native WebSocket object"
      );
    };
  }
});

// node_modules/lodash.isequal/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.isequal/index.js"(exports, module) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var asyncTag = "[object AsyncFunction]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var nullTag = "[object Null]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var proxyTag = "[object Proxy]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var undefinedTag = "[object Undefined]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e2) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    function baseTimes(n4, iteratee) {
      var index = -1, result = Array(n4);
      while (++index < n4) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    function setToArray(set2) {
      var index = -1, result = Array(set2.size);
      set2.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var nativeObjectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var Symbol2 = root.Symbol;
    var Uint8Array2 = root.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView2 = getNative(root, "DataView");
    var Map2 = getNative(root, "Map");
    var Promise2 = getNative(root, "Promise");
    var Set2 = getNative(root, "Set");
    var WeakMap2 = getNative(root, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys2, getSymbols);
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e2) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e2) {
        }
        try {
          return func + "";
        } catch (e2) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(/* @__PURE__ */ function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function keys2(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function stubArray() {
      return [];
    }
    function stubFalse() {
      return false;
    }
    module.exports = isEqual;
  }
});

// node_modules/unfetch/dist/unfetch.module.js
var unfetch_module_exports = {};
__export(unfetch_module_exports, {
  default: () => unfetch_module_default
});
function unfetch_module_default(e2, n4) {
  return n4 = n4 || {}, new Promise(function(t, r2) {
    var s2 = new XMLHttpRequest(), o2 = [], u3 = [], i3 = {}, a3 = function() {
      return { ok: 2 == (s2.status / 100 | 0), statusText: s2.statusText, status: s2.status, url: s2.responseURL, text: function() {
        return Promise.resolve(s2.responseText);
      }, json: function() {
        return Promise.resolve(s2.responseText).then(JSON.parse);
      }, blob: function() {
        return Promise.resolve(new Blob([s2.response]));
      }, clone: a3, headers: { keys: function() {
        return o2;
      }, entries: function() {
        return u3;
      }, get: function(e3) {
        return i3[e3.toLowerCase()];
      }, has: function(e3) {
        return e3.toLowerCase() in i3;
      } } };
    };
    for (var l3 in s2.open(n4.method || "get", e2, true), s2.onload = function() {
      s2.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, function(e3, n5, t2) {
        o2.push(n5 = n5.toLowerCase()), u3.push([n5, t2]), i3[n5] = i3[n5] ? i3[n5] + "," + t2 : t2;
      }), t(a3());
    }, s2.onerror = r2, s2.withCredentials = "include" == n4.credentials, n4.headers) s2.setRequestHeader(l3, n4.headers[l3]);
    s2.send(n4.body || null);
  });
}
var init_unfetch_module = __esm({
  "node_modules/unfetch/dist/unfetch.module.js"() {
  }
});

// node_modules/isomorphic-unfetch/browser.js
var require_browser4 = __commonJS({
  "node_modules/isomorphic-unfetch/browser.js"(exports, module) {
    module.exports = self.fetch || (self.fetch = (init_unfetch_module(), __toCommonJS(unfetch_module_exports)).default || (init_unfetch_module(), __toCommonJS(unfetch_module_exports)));
  }
});

// node_modules/detect-browser/es/index.js
var __spreadArray = function(to3, from, pack) {
  if (pack || arguments.length === 2) for (var i3 = 0, l3 = from.length, ar4; i3 < l3; i3++) {
    if (ar4 || !(i3 in from)) {
      if (!ar4) ar4 = Array.prototype.slice.call(from, 0, i3);
      ar4[i3] = from[i3];
    }
  }
  return to3.concat(ar4 || Array.prototype.slice.call(from));
};
var BrowserInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function BrowserInfo2(name, version, os3) {
      this.name = name;
      this.version = version;
      this.os = os3;
      this.type = "browser";
    }
    return BrowserInfo2;
  }()
);
var NodeInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function NodeInfo2(version) {
      this.version = version;
      this.type = "node";
      this.name = "node";
      this.os = process.platform;
    }
    return NodeInfo2;
  }()
);
var SearchBotDeviceInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function SearchBotDeviceInfo2(name, version, os3, bot) {
      this.name = name;
      this.version = version;
      this.os = os3;
      this.bot = bot;
      this.type = "bot-device";
    }
    return SearchBotDeviceInfo2;
  }()
);
var BotInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function BotInfo2() {
      this.type = "bot";
      this.bot = true;
      this.name = "bot";
      this.version = null;
      this.os = null;
    }
    return BotInfo2;
  }()
);
var ReactNativeInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function ReactNativeInfo2() {
      this.type = "react-native";
      this.name = "react-native";
      this.version = null;
      this.os = null;
    }
    return ReactNativeInfo2;
  }()
);
var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [
  ["aol", /AOLShield\/([0-9\._]+)/],
  ["edge", /Edge\/([0-9\._]+)/],
  ["edge-ios", /EdgiOS\/([0-9\._]+)/],
  ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
  ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
  ["samsung", /SamsungBrowser\/([0-9\.]+)/],
  ["silk", /\bSilk\/([0-9._-]+)\b/],
  ["miui", /MiuiBrowser\/([0-9\.]+)$/],
  ["beaker", /BeakerBrowser\/([0-9\.]+)/],
  ["edge-chromium", /EdgA?\/([0-9\.]+)/],
  [
    "chromium-webview",
    /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
  ],
  ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
  ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
  ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
  ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
  ["fxios", /FxiOS\/([0-9\.]+)/],
  ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
  ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
  ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
  ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
  ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
  ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
  ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
  ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
  ["ie", /MSIE\s(7\.0)/],
  ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
  ["android", /Android\s([0-9\.]+)/],
  ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
  ["safari", /Version\/([0-9\._]+).*Safari/],
  ["facebook", /FB[AS]V\/([0-9\.]+)/],
  ["instagram", /Instagram\s([0-9\.]+)/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
  ["curl", /^curl\/([0-9\.]+)$/],
  ["searchbot", SEARCHBOX_UA_REGEX]
];
var operatingSystemRules = [
  ["iOS", /iP(hone|od|ad)/],
  ["Android OS", /Android/],
  ["BlackBerry OS", /BlackBerry|BB10/],
  ["Windows Mobile", /IEMobile/],
  ["Amazon OS", /Kindle/],
  ["Windows 3.11", /Win16/],
  ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
  ["Windows 98", /(Windows 98)|(Win98)/],
  ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
  ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
  ["Windows Server 2003", /(Windows NT 5.2)/],
  ["Windows Vista", /(Windows NT 6.0)/],
  ["Windows 7", /(Windows NT 6.1)/],
  ["Windows 8", /(Windows NT 6.2)/],
  ["Windows 8.1", /(Windows NT 6.3)/],
  ["Windows 10", /(Windows NT 10.0)/],
  ["Windows ME", /Windows ME/],
  ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
  ["Open BSD", /OpenBSD/],
  ["Sun OS", /SunOS/],
  ["Chrome OS", /CrOS/],
  ["Linux", /(Linux)|(X11)/],
  ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
  ["QNX", /QNX/],
  ["BeOS", /BeOS/],
  ["OS/2", /OS\/2/]
];
function detect(userAgent) {
  if (!!userAgent) {
    return parseUserAgent(userAgent);
  }
  if (typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative") {
    return new ReactNativeInfo();
  }
  if (typeof navigator !== "undefined") {
    return parseUserAgent(navigator.userAgent);
  }
  return getNodeVersion();
}
function matchUserAgent(ua2) {
  return ua2 !== "" && userAgentRules.reduce(function(matched, _a2) {
    var browser = _a2[0], regex = _a2[1];
    if (matched) {
      return matched;
    }
    var uaMatch = regex.exec(ua2);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}
function parseUserAgent(ua2) {
  var matchedRule = matchUserAgent(ua2);
  if (!matchedRule) {
    return null;
  }
  var name = matchedRule[0], match = matchedRule[1];
  if (name === "searchbot") {
    return new BotInfo();
  }
  var versionParts = match[1] && match[1].split(".").join("_").split("_").slice(0, 3);
  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS) {
      versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);
    }
  } else {
    versionParts = [];
  }
  var version = versionParts.join(".");
  var os3 = detectOS(ua2);
  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua2);
  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo(name, version, os3, searchBotMatch[1]);
  }
  return new BrowserInfo(name, version, os3);
}
function detectOS(ua2) {
  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
    var _a2 = operatingSystemRules[ii], os3 = _a2[0], regex = _a2[1];
    var match = regex.exec(ua2);
    if (match) {
      return os3;
    }
  }
  return null;
}
function getNodeVersion() {
  var isNode2 = typeof process !== "undefined" && process.version;
  return isNode2 ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
  var output = [];
  for (var ii = 0; ii < count; ii++) {
    output.push("0");
  }
  return output;
}

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/utils/dist/index.es.js
var import_time = __toESM(require_cjs());
var import_window_getters = __toESM(require_cjs2());
var import_window_metadata = __toESM(require_cjs3());
var Nr = __toESM(require_query_string());
var import_chacha20poly1305 = __toESM(require_chacha20poly1305());
var import_hkdf = __toESM(require_hkdf());
var import_random = __toESM(require_random());
var import_sha256 = __toESM(require_sha256());
var cn = __toESM(require_x25519());

// node_modules/@thirdweb-dev/wallets/node_modules/uint8arrays/esm/src/util/as-uint8array.js
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

// node_modules/@thirdweb-dev/wallets/node_modules/uint8arrays/esm/src/alloc.js
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return asUint8Array(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

// node_modules/@thirdweb-dev/wallets/node_modules/uint8arrays/esm/src/concat.js
function concat(arrays, length) {
  if (!length) {
    length = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = allocUnsafe(length);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return asUint8Array(output);
}

// node_modules/@thirdweb-dev/wallets/node_modules/uint8arrays/esm/src/util/bases.js
init_basics();
function createCodec(name, prefix, encode, decode) {
  return {
    name,
    prefix,
    encoder: {
      name,
      prefix,
      encode
    },
    decoder: { decode }
  };
}
var string = createCodec("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii = createCodec("ascii", "a", (buf) => {
  let string2 = "a";
  for (let i3 = 0; i3 < buf.length; i3++) {
    string2 += String.fromCharCode(buf[i3]);
  }
  return string2;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe(str.length);
  for (let i3 = 0; i3 < str.length; i3++) {
    buf[i3] = str.charCodeAt(i3);
  }
  return buf;
});
var BASES = {
  utf8: string,
  "utf-8": string,
  hex: bases.base16,
  latin1: ascii,
  ascii,
  binary: ascii,
  ...bases
};
var bases_default = BASES;

// node_modules/@thirdweb-dev/wallets/node_modules/uint8arrays/esm/src/from-string.js
function fromString(string2, encoding = "utf8") {
  const base = bases_default[encoding];
  if (!base) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return asUint8Array(globalThis.Buffer.from(string2, "utf-8"));
  }
  return base.decoder.decode(`${base.prefix}${string2}`);
}

// node_modules/@thirdweb-dev/wallets/node_modules/uint8arrays/esm/src/to-string.js
function toString(array, encoding = "utf8") {
  const base = bases_default[encoding];
  if (!base) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base.encoder.encode(array).substring(1);
}

// node_modules/@walletconnect/relay-api/dist/index.es.js
var C = { waku: { publish: "waku_publish", batchPublish: "waku_batchPublish", subscribe: "waku_subscribe", batchSubscribe: "waku_batchSubscribe", subscription: "waku_subscription", unsubscribe: "waku_unsubscribe", batchUnsubscribe: "waku_batchUnsubscribe", batchFetchMessages: "waku_batchFetchMessages" }, irn: { publish: "irn_publish", batchPublish: "irn_batchPublish", subscribe: "irn_subscribe", batchSubscribe: "irn_batchSubscribe", subscription: "irn_subscription", unsubscribe: "irn_unsubscribe", batchUnsubscribe: "irn_batchUnsubscribe", batchFetchMessages: "irn_batchFetchMessages" }, iridium: { publish: "iridium_publish", batchPublish: "iridium_batchPublish", subscribe: "iridium_subscribe", batchSubscribe: "iridium_batchSubscribe", subscription: "iridium_subscription", unsubscribe: "iridium_unsubscribe", batchUnsubscribe: "iridium_batchUnsubscribe", batchFetchMessages: "iridium_batchFetchMessages" } };

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/utils/dist/index.es.js
var Ir = ":";
function dn(e2) {
  const [t, r2] = e2.split(Ir);
  return { namespace: t, reference: r2 };
}
function zo(e2, t = []) {
  const r2 = [];
  return Object.keys(e2).forEach((i3) => {
    if (t.length && !t.includes(i3)) return;
    const n4 = e2[i3];
    r2.push(...n4.accounts);
  }), r2;
}
function _r(e2, t) {
  return e2.includes(":") ? [e2] : t.chains || [];
}
var Qo = Object.defineProperty;
var bn = Object.getOwnPropertySymbols;
var Jo = Object.prototype.hasOwnProperty;
var Go = Object.prototype.propertyIsEnumerable;
var yn = (e2, t, r2) => t in e2 ? Qo(e2, t, { enumerable: true, configurable: true, writable: true, value: r2 }) : e2[t] = r2;
var wn = (e2, t) => {
  for (var r2 in t || (t = {})) Jo.call(t, r2) && yn(e2, r2, t[r2]);
  if (bn) for (var r2 of bn(t)) Go.call(t, r2) && yn(e2, r2, t[r2]);
  return e2;
};
var xn = "ReactNative";
var qt = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" };
var En = "js";
function pi() {
  return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
}
function er() {
  return !(0, import_window_getters.getDocument)() && !!(0, import_window_getters.getNavigator)() && navigator.product === xn;
}
function pr() {
  return !pi() && !!(0, import_window_getters.getNavigator)() && !!(0, import_window_getters.getDocument)();
}
function We() {
  return er() ? qt.reactNative : pi() ? qt.node : pr() ? qt.browser : qt.unknown;
}
function Wo() {
  var e2;
  try {
    return er() && typeof global < "u" && typeof (global == null ? void 0 : global.Application) < "u" ? (e2 = global.Application) == null ? void 0 : e2.applicationId : void 0;
  } catch {
    return;
  }
}
function Sn(e2, t) {
  let r2 = Nr.parse(e2);
  return r2 = wn(wn({}, r2), t), e2 = Nr.stringify(r2), e2;
}
function Xo() {
  return (0, import_window_metadata.getWindowMetadata)() || { name: "", description: "", url: "", icons: [""] };
}
function Nn() {
  if (We() === qt.reactNative && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u") {
    const { OS: r2, Version: i3 } = global.Platform;
    return [r2, i3].join("-");
  }
  const e2 = detect();
  if (e2 === null) return "unknown";
  const t = e2.os ? e2.os.replace(" ", "").toLowerCase() : "unknown";
  return e2.type === "browser" ? [t, e2.name, e2.version].join("-") : [t, e2.version].join("-");
}
function In() {
  var e2;
  const t = We();
  return t === qt.browser ? [t, ((e2 = (0, import_window_getters.getLocation)()) == null ? void 0 : e2.host) || "unknown"].join(":") : t;
}
function _n(e2, t, r2) {
  const i3 = Nn(), n4 = In();
  return [[e2, t].join("-"), [En, r2].join("-"), i3, n4].join("/");
}
function $o({ protocol: e2, version: t, relayUrl: r2, sdkVersion: i3, auth: n4, projectId: o2, useOnCloseEvent: h5, bundleId: p3 }) {
  const b4 = r2.split("?"), m2 = _n(e2, t, i3), w4 = { auth: n4, ua: m2, projectId: o2, useOnCloseEvent: h5 || void 0, origin: p3 || void 0 }, y6 = Sn(b4[1] || "", w4);
  return b4[0] + "?" + y6;
}
function _e(e2, t) {
  return e2.filter((r2) => t.includes(r2)).length === e2.length;
}
function i0(e2) {
  return Object.fromEntries(e2.entries());
}
function n0(e2) {
  return new Map(Object.entries(e2));
}
function a0(e2 = import_time.FIVE_MINUTES, t) {
  const r2 = (0, import_time.toMiliseconds)(e2 || import_time.FIVE_MINUTES);
  let i3, n4, o2;
  return { resolve: (h5) => {
    o2 && i3 && (clearTimeout(o2), i3(h5));
  }, reject: (h5) => {
    o2 && n4 && (clearTimeout(o2), n4(h5));
  }, done: () => new Promise((h5, p3) => {
    o2 = setTimeout(() => {
      p3(new Error(t));
    }, r2), i3 = h5, n4 = p3;
  }) };
}
function u0(e2, t, r2) {
  return new Promise(async (i3, n4) => {
    const o2 = setTimeout(() => n4(new Error(r2)), t);
    try {
      const h5 = await e2;
      i3(h5);
    } catch (h5) {
      n4(h5);
    }
    clearTimeout(o2);
  });
}
function vi(e2, t) {
  if (typeof t == "string" && t.startsWith(`${e2}:`)) return t;
  if (e2.toLowerCase() === "topic") {
    if (typeof t != "string") throw new Error('Value must be "string" for expirer target type: topic');
    return `topic:${t}`;
  } else if (e2.toLowerCase() === "id") {
    if (typeof t != "number") throw new Error('Value must be "number" for expirer target type: id');
    return `id:${t}`;
  }
  throw new Error(`Unknown expirer target type: ${e2}`);
}
function h0(e2) {
  return vi("topic", e2);
}
function c0(e2) {
  return vi("id", e2);
}
function l0(e2) {
  const [t, r2] = e2.split(":"), i3 = { id: void 0, topic: void 0 };
  if (t === "topic" && typeof r2 == "string") i3.topic = r2;
  else if (t === "id" && Number.isInteger(Number(r2))) i3.id = Number(r2);
  else throw new Error(`Invalid target, expected id:number or topic:string, got ${t}:${r2}`);
  return i3;
}
function d0(e2, t) {
  return (0, import_time.fromMiliseconds)((t || Date.now()) + (0, import_time.toMiliseconds)(e2));
}
function p0(e2) {
  return Date.now() >= (0, import_time.toMiliseconds)(e2);
}
function v0(e2, t) {
  return `${e2}${t ? `:${t}` : ""}`;
}
function ge(e2 = [], t = []) {
  return [.../* @__PURE__ */ new Set([...e2, ...t])];
}
async function m0({ id: e2, topic: t, wcDeepLink: r2 }) {
  try {
    if (!r2) return;
    const i3 = typeof r2 == "string" ? JSON.parse(r2) : r2;
    let n4 = i3 == null ? void 0 : i3.href;
    if (typeof n4 != "string") return;
    n4.endsWith("/") && (n4 = n4.slice(0, -1));
    const o2 = `${n4}/wc?requestId=${e2}&sessionTopic=${t}`, h5 = We();
    h5 === qt.browser ? o2.startsWith("https://") || o2.startsWith("http://") ? window.open(o2, "_blank", "noreferrer noopener") : window.open(o2, "_self", "noreferrer noopener") : h5 === qt.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(o2);
  } catch (i3) {
    console.error(i3);
  }
}
async function g0(e2, t) {
  try {
    return await e2.getItem(t) || (pr() ? localStorage.getItem(t) : void 0);
  } catch (r2) {
    console.error(r2);
  }
}
var On = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function A0(e2) {
  var t = e2.default;
  if (typeof t == "function") {
    var r2 = function() {
      return t.apply(this, arguments);
    };
    r2.prototype = t.prototype;
  } else r2 = {};
  return Object.defineProperty(r2, "__esModule", { value: true }), Object.keys(e2).forEach(function(i3) {
    var n4 = Object.getOwnPropertyDescriptor(e2, i3);
    Object.defineProperty(r2, i3, n4.get ? n4 : { enumerable: true, get: function() {
      return e2[i3];
    } });
  }), r2;
}
var Pn = { exports: {} };
(function(e2) {
  (function() {
    var t = "input is invalid type", r2 = "finalize already called", i3 = typeof window == "object", n4 = i3 ? window : {};
    n4.JS_SHA3_NO_WINDOW && (i3 = false);
    var o2 = !i3 && typeof self == "object", h5 = !n4.JS_SHA3_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
    h5 ? n4 = On : o2 && (n4 = self);
    var p3 = !n4.JS_SHA3_NO_COMMON_JS && true && e2.exports, b4 = !n4.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", m2 = "0123456789abcdef".split(""), w4 = [31, 7936, 2031616, 520093696], y6 = [4, 1024, 262144, 67108864], S4 = [1, 256, 65536, 16777216], I3 = [6, 1536, 393216, 100663296], N3 = [0, 8, 16, 24], C4 = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], F2 = [224, 256, 384, 512], U3 = [128, 256], J2 = ["hex", "buffer", "arrayBuffer", "array", "digest"], Bt3 = { 128: 168, 256: 136 };
    (n4.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(u3) {
      return Object.prototype.toString.call(u3) === "[object Array]";
    }), b4 && (n4.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(u3) {
      return typeof u3 == "object" && u3.buffer && u3.buffer.constructor === ArrayBuffer;
    });
    for (var G3 = function(u3, E4, _3) {
      return function(B2) {
        return new s2(u3, E4, u3).update(B2)[_3]();
      };
    }, H2 = function(u3, E4, _3) {
      return function(B2, R) {
        return new s2(u3, E4, R).update(B2)[_3]();
      };
    }, z4 = function(u3, E4, _3) {
      return function(B2, R, T3, P2) {
        return f4["cshake" + u3].update(B2, R, T3, P2)[_3]();
      };
    }, Pt3 = function(u3, E4, _3) {
      return function(B2, R, T3, P2) {
        return f4["kmac" + u3].update(B2, R, T3, P2)[_3]();
      };
    }, W3 = function(u3, E4, _3, B2) {
      for (var R = 0; R < J2.length; ++R) {
        var T3 = J2[R];
        u3[T3] = E4(_3, B2, T3);
      }
      return u3;
    }, Rt3 = function(u3, E4) {
      var _3 = G3(u3, E4, "hex");
      return _3.create = function() {
        return new s2(u3, E4, u3);
      }, _3.update = function(B2) {
        return _3.create().update(B2);
      }, W3(_3, G3, u3, E4);
    }, Yt3 = function(u3, E4) {
      var _3 = H2(u3, E4, "hex");
      return _3.create = function(B2) {
        return new s2(u3, E4, B2);
      }, _3.update = function(B2, R) {
        return _3.create(R).update(B2);
      }, W3(_3, H2, u3, E4);
    }, Y = function(u3, E4) {
      var _3 = Bt3[u3], B2 = z4(u3, E4, "hex");
      return B2.create = function(R, T3, P2) {
        return !T3 && !P2 ? f4["shake" + u3].create(R) : new s2(u3, E4, R).bytepad([T3, P2], _3);
      }, B2.update = function(R, T3, P2, O3) {
        return B2.create(T3, P2, O3).update(R);
      }, W3(B2, z4, u3, E4);
    }, Vt3 = function(u3, E4) {
      var _3 = Bt3[u3], B2 = Pt3(u3, E4, "hex");
      return B2.create = function(R, T3, P2) {
        return new v4(u3, E4, T3).bytepad(["KMAC", P2], _3).bytepad([R], _3);
      }, B2.update = function(R, T3, P2, O3) {
        return B2.create(R, P2, O3).update(T3);
      }, W3(B2, Pt3, u3, E4);
    }, A2 = [{ name: "keccak", padding: S4, bits: F2, createMethod: Rt3 }, { name: "sha3", padding: I3, bits: F2, createMethod: Rt3 }, { name: "shake", padding: w4, bits: U3, createMethod: Yt3 }, { name: "cshake", padding: y6, bits: U3, createMethod: Y }, { name: "kmac", padding: y6, bits: U3, createMethod: Vt3 }], f4 = {}, a3 = [], c4 = 0; c4 < A2.length; ++c4) for (var d3 = A2[c4], g3 = d3.bits, x4 = 0; x4 < g3.length; ++x4) {
      var M2 = d3.name + "_" + g3[x4];
      if (a3.push(M2), f4[M2] = d3.createMethod(g3[x4], d3.padding), d3.name !== "sha3") {
        var l3 = d3.name + g3[x4];
        a3.push(l3), f4[l3] = f4[M2];
      }
    }
    function s2(u3, E4, _3) {
      this.blocks = [], this.s = [], this.padding = E4, this.outputBits = _3, this.reset = true, this.finalized = false, this.block = 0, this.start = 0, this.blockCount = 1600 - (u3 << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = _3 >> 5, this.extraBytes = (_3 & 31) >> 3;
      for (var B2 = 0; B2 < 50; ++B2) this.s[B2] = 0;
    }
    s2.prototype.update = function(u3) {
      if (this.finalized) throw new Error(r2);
      var E4, _3 = typeof u3;
      if (_3 !== "string") {
        if (_3 === "object") {
          if (u3 === null) throw new Error(t);
          if (b4 && u3.constructor === ArrayBuffer) u3 = new Uint8Array(u3);
          else if (!Array.isArray(u3) && (!b4 || !ArrayBuffer.isView(u3))) throw new Error(t);
        } else throw new Error(t);
        E4 = true;
      }
      for (var B2 = this.blocks, R = this.byteCount, T3 = u3.length, P2 = this.blockCount, O3 = 0, Ct2 = this.s, D2, q2; O3 < T3; ) {
        if (this.reset) for (this.reset = false, B2[0] = this.block, D2 = 1; D2 < P2 + 1; ++D2) B2[D2] = 0;
        if (E4) for (D2 = this.start; O3 < T3 && D2 < R; ++O3) B2[D2 >> 2] |= u3[O3] << N3[D2++ & 3];
        else for (D2 = this.start; O3 < T3 && D2 < R; ++O3) q2 = u3.charCodeAt(O3), q2 < 128 ? B2[D2 >> 2] |= q2 << N3[D2++ & 3] : q2 < 2048 ? (B2[D2 >> 2] |= (192 | q2 >> 6) << N3[D2++ & 3], B2[D2 >> 2] |= (128 | q2 & 63) << N3[D2++ & 3]) : q2 < 55296 || q2 >= 57344 ? (B2[D2 >> 2] |= (224 | q2 >> 12) << N3[D2++ & 3], B2[D2 >> 2] |= (128 | q2 >> 6 & 63) << N3[D2++ & 3], B2[D2 >> 2] |= (128 | q2 & 63) << N3[D2++ & 3]) : (q2 = 65536 + ((q2 & 1023) << 10 | u3.charCodeAt(++O3) & 1023), B2[D2 >> 2] |= (240 | q2 >> 18) << N3[D2++ & 3], B2[D2 >> 2] |= (128 | q2 >> 12 & 63) << N3[D2++ & 3], B2[D2 >> 2] |= (128 | q2 >> 6 & 63) << N3[D2++ & 3], B2[D2 >> 2] |= (128 | q2 & 63) << N3[D2++ & 3]);
        if (this.lastByteIndex = D2, D2 >= R) {
          for (this.start = D2 - R, this.block = B2[P2], D2 = 0; D2 < P2; ++D2) Ct2[D2] ^= B2[D2];
          k5(Ct2), this.reset = true;
        } else this.start = D2;
      }
      return this;
    }, s2.prototype.encode = function(u3, E4) {
      var _3 = u3 & 255, B2 = 1, R = [_3];
      for (u3 = u3 >> 8, _3 = u3 & 255; _3 > 0; ) R.unshift(_3), u3 = u3 >> 8, _3 = u3 & 255, ++B2;
      return E4 ? R.push(B2) : R.unshift(B2), this.update(R), R.length;
    }, s2.prototype.encodeString = function(u3) {
      var E4, _3 = typeof u3;
      if (_3 !== "string") {
        if (_3 === "object") {
          if (u3 === null) throw new Error(t);
          if (b4 && u3.constructor === ArrayBuffer) u3 = new Uint8Array(u3);
          else if (!Array.isArray(u3) && (!b4 || !ArrayBuffer.isView(u3))) throw new Error(t);
        } else throw new Error(t);
        E4 = true;
      }
      var B2 = 0, R = u3.length;
      if (E4) B2 = R;
      else for (var T3 = 0; T3 < u3.length; ++T3) {
        var P2 = u3.charCodeAt(T3);
        P2 < 128 ? B2 += 1 : P2 < 2048 ? B2 += 2 : P2 < 55296 || P2 >= 57344 ? B2 += 3 : (P2 = 65536 + ((P2 & 1023) << 10 | u3.charCodeAt(++T3) & 1023), B2 += 4);
      }
      return B2 += this.encode(B2 * 8), this.update(u3), B2;
    }, s2.prototype.bytepad = function(u3, E4) {
      for (var _3 = this.encode(E4), B2 = 0; B2 < u3.length; ++B2) _3 += this.encodeString(u3[B2]);
      var R = E4 - _3 % E4, T3 = [];
      return T3.length = R, this.update(T3), this;
    }, s2.prototype.finalize = function() {
      if (!this.finalized) {
        this.finalized = true;
        var u3 = this.blocks, E4 = this.lastByteIndex, _3 = this.blockCount, B2 = this.s;
        if (u3[E4 >> 2] |= this.padding[E4 & 3], this.lastByteIndex === this.byteCount) for (u3[0] = u3[_3], E4 = 1; E4 < _3 + 1; ++E4) u3[E4] = 0;
        for (u3[_3 - 1] |= 2147483648, E4 = 0; E4 < _3; ++E4) B2[E4] ^= u3[E4];
        k5(B2);
      }
    }, s2.prototype.toString = s2.prototype.hex = function() {
      this.finalize();
      for (var u3 = this.blockCount, E4 = this.s, _3 = this.outputBlocks, B2 = this.extraBytes, R = 0, T3 = 0, P2 = "", O3; T3 < _3; ) {
        for (R = 0; R < u3 && T3 < _3; ++R, ++T3) O3 = E4[R], P2 += m2[O3 >> 4 & 15] + m2[O3 & 15] + m2[O3 >> 12 & 15] + m2[O3 >> 8 & 15] + m2[O3 >> 20 & 15] + m2[O3 >> 16 & 15] + m2[O3 >> 28 & 15] + m2[O3 >> 24 & 15];
        T3 % u3 === 0 && (k5(E4), R = 0);
      }
      return B2 && (O3 = E4[R], P2 += m2[O3 >> 4 & 15] + m2[O3 & 15], B2 > 1 && (P2 += m2[O3 >> 12 & 15] + m2[O3 >> 8 & 15]), B2 > 2 && (P2 += m2[O3 >> 20 & 15] + m2[O3 >> 16 & 15])), P2;
    }, s2.prototype.arrayBuffer = function() {
      this.finalize();
      var u3 = this.blockCount, E4 = this.s, _3 = this.outputBlocks, B2 = this.extraBytes, R = 0, T3 = 0, P2 = this.outputBits >> 3, O3;
      B2 ? O3 = new ArrayBuffer(_3 + 1 << 2) : O3 = new ArrayBuffer(P2);
      for (var Ct2 = new Uint32Array(O3); T3 < _3; ) {
        for (R = 0; R < u3 && T3 < _3; ++R, ++T3) Ct2[T3] = E4[R];
        T3 % u3 === 0 && k5(E4);
      }
      return B2 && (Ct2[R] = E4[R], O3 = O3.slice(0, P2)), O3;
    }, s2.prototype.buffer = s2.prototype.arrayBuffer, s2.prototype.digest = s2.prototype.array = function() {
      this.finalize();
      for (var u3 = this.blockCount, E4 = this.s, _3 = this.outputBlocks, B2 = this.extraBytes, R = 0, T3 = 0, P2 = [], O3, Ct2; T3 < _3; ) {
        for (R = 0; R < u3 && T3 < _3; ++R, ++T3) O3 = T3 << 2, Ct2 = E4[R], P2[O3] = Ct2 & 255, P2[O3 + 1] = Ct2 >> 8 & 255, P2[O3 + 2] = Ct2 >> 16 & 255, P2[O3 + 3] = Ct2 >> 24 & 255;
        T3 % u3 === 0 && k5(E4);
      }
      return B2 && (O3 = T3 << 2, Ct2 = E4[R], P2[O3] = Ct2 & 255, B2 > 1 && (P2[O3 + 1] = Ct2 >> 8 & 255), B2 > 2 && (P2[O3 + 2] = Ct2 >> 16 & 255)), P2;
    };
    function v4(u3, E4, _3) {
      s2.call(this, u3, E4, _3);
    }
    v4.prototype = new s2(), v4.prototype.finalize = function() {
      return this.encode(this.outputBits, true), s2.prototype.finalize.call(this);
    };
    var k5 = function(u3) {
      var E4, _3, B2, R, T3, P2, O3, Ct2, D2, q2, De3, X2, Z2, Fe2, $2, tt2, Te2, et2, rt3, Ue3, it3, nt3, ke3, ft3, ot2, qe3, st2, at2, Ke3, ut3, ht3, He3, ct3, lt3, ze2, dt3, pt2, Le2, vt3, mt2, je3, gt3, At2, Qe3, bt3, yt3, Je3, wt3, xt3, Ge3, Mt3, Et3, Ye3, St3, Nt3, Ve3, It3, _t3, Me3, Ee2, Se3, Ne2, Ie2;
      for (B2 = 0; B2 < 48; B2 += 2) R = u3[0] ^ u3[10] ^ u3[20] ^ u3[30] ^ u3[40], T3 = u3[1] ^ u3[11] ^ u3[21] ^ u3[31] ^ u3[41], P2 = u3[2] ^ u3[12] ^ u3[22] ^ u3[32] ^ u3[42], O3 = u3[3] ^ u3[13] ^ u3[23] ^ u3[33] ^ u3[43], Ct2 = u3[4] ^ u3[14] ^ u3[24] ^ u3[34] ^ u3[44], D2 = u3[5] ^ u3[15] ^ u3[25] ^ u3[35] ^ u3[45], q2 = u3[6] ^ u3[16] ^ u3[26] ^ u3[36] ^ u3[46], De3 = u3[7] ^ u3[17] ^ u3[27] ^ u3[37] ^ u3[47], X2 = u3[8] ^ u3[18] ^ u3[28] ^ u3[38] ^ u3[48], Z2 = u3[9] ^ u3[19] ^ u3[29] ^ u3[39] ^ u3[49], E4 = X2 ^ (P2 << 1 | O3 >>> 31), _3 = Z2 ^ (O3 << 1 | P2 >>> 31), u3[0] ^= E4, u3[1] ^= _3, u3[10] ^= E4, u3[11] ^= _3, u3[20] ^= E4, u3[21] ^= _3, u3[30] ^= E4, u3[31] ^= _3, u3[40] ^= E4, u3[41] ^= _3, E4 = R ^ (Ct2 << 1 | D2 >>> 31), _3 = T3 ^ (D2 << 1 | Ct2 >>> 31), u3[2] ^= E4, u3[3] ^= _3, u3[12] ^= E4, u3[13] ^= _3, u3[22] ^= E4, u3[23] ^= _3, u3[32] ^= E4, u3[33] ^= _3, u3[42] ^= E4, u3[43] ^= _3, E4 = P2 ^ (q2 << 1 | De3 >>> 31), _3 = O3 ^ (De3 << 1 | q2 >>> 31), u3[4] ^= E4, u3[5] ^= _3, u3[14] ^= E4, u3[15] ^= _3, u3[24] ^= E4, u3[25] ^= _3, u3[34] ^= E4, u3[35] ^= _3, u3[44] ^= E4, u3[45] ^= _3, E4 = Ct2 ^ (X2 << 1 | Z2 >>> 31), _3 = D2 ^ (Z2 << 1 | X2 >>> 31), u3[6] ^= E4, u3[7] ^= _3, u3[16] ^= E4, u3[17] ^= _3, u3[26] ^= E4, u3[27] ^= _3, u3[36] ^= E4, u3[37] ^= _3, u3[46] ^= E4, u3[47] ^= _3, E4 = q2 ^ (R << 1 | T3 >>> 31), _3 = De3 ^ (T3 << 1 | R >>> 31), u3[8] ^= E4, u3[9] ^= _3, u3[18] ^= E4, u3[19] ^= _3, u3[28] ^= E4, u3[29] ^= _3, u3[38] ^= E4, u3[39] ^= _3, u3[48] ^= E4, u3[49] ^= _3, Fe2 = u3[0], $2 = u3[1], yt3 = u3[11] << 4 | u3[10] >>> 28, Je3 = u3[10] << 4 | u3[11] >>> 28, at2 = u3[20] << 3 | u3[21] >>> 29, Ke3 = u3[21] << 3 | u3[20] >>> 29, Ee2 = u3[31] << 9 | u3[30] >>> 23, Se3 = u3[30] << 9 | u3[31] >>> 23, gt3 = u3[40] << 18 | u3[41] >>> 14, At2 = u3[41] << 18 | u3[40] >>> 14, lt3 = u3[2] << 1 | u3[3] >>> 31, ze2 = u3[3] << 1 | u3[2] >>> 31, tt2 = u3[13] << 12 | u3[12] >>> 20, Te2 = u3[12] << 12 | u3[13] >>> 20, wt3 = u3[22] << 10 | u3[23] >>> 22, xt3 = u3[23] << 10 | u3[22] >>> 22, ut3 = u3[33] << 13 | u3[32] >>> 19, ht3 = u3[32] << 13 | u3[33] >>> 19, Ne2 = u3[42] << 2 | u3[43] >>> 30, Ie2 = u3[43] << 2 | u3[42] >>> 30, St3 = u3[5] << 30 | u3[4] >>> 2, Nt3 = u3[4] << 30 | u3[5] >>> 2, dt3 = u3[14] << 6 | u3[15] >>> 26, pt2 = u3[15] << 6 | u3[14] >>> 26, et2 = u3[25] << 11 | u3[24] >>> 21, rt3 = u3[24] << 11 | u3[25] >>> 21, Ge3 = u3[34] << 15 | u3[35] >>> 17, Mt3 = u3[35] << 15 | u3[34] >>> 17, He3 = u3[45] << 29 | u3[44] >>> 3, ct3 = u3[44] << 29 | u3[45] >>> 3, ft3 = u3[6] << 28 | u3[7] >>> 4, ot2 = u3[7] << 28 | u3[6] >>> 4, Ve3 = u3[17] << 23 | u3[16] >>> 9, It3 = u3[16] << 23 | u3[17] >>> 9, Le2 = u3[26] << 25 | u3[27] >>> 7, vt3 = u3[27] << 25 | u3[26] >>> 7, Ue3 = u3[36] << 21 | u3[37] >>> 11, it3 = u3[37] << 21 | u3[36] >>> 11, Et3 = u3[47] << 24 | u3[46] >>> 8, Ye3 = u3[46] << 24 | u3[47] >>> 8, Qe3 = u3[8] << 27 | u3[9] >>> 5, bt3 = u3[9] << 27 | u3[8] >>> 5, qe3 = u3[18] << 20 | u3[19] >>> 12, st2 = u3[19] << 20 | u3[18] >>> 12, _t3 = u3[29] << 7 | u3[28] >>> 25, Me3 = u3[28] << 7 | u3[29] >>> 25, mt2 = u3[38] << 8 | u3[39] >>> 24, je3 = u3[39] << 8 | u3[38] >>> 24, nt3 = u3[48] << 14 | u3[49] >>> 18, ke3 = u3[49] << 14 | u3[48] >>> 18, u3[0] = Fe2 ^ ~tt2 & et2, u3[1] = $2 ^ ~Te2 & rt3, u3[10] = ft3 ^ ~qe3 & at2, u3[11] = ot2 ^ ~st2 & Ke3, u3[20] = lt3 ^ ~dt3 & Le2, u3[21] = ze2 ^ ~pt2 & vt3, u3[30] = Qe3 ^ ~yt3 & wt3, u3[31] = bt3 ^ ~Je3 & xt3, u3[40] = St3 ^ ~Ve3 & _t3, u3[41] = Nt3 ^ ~It3 & Me3, u3[2] = tt2 ^ ~et2 & Ue3, u3[3] = Te2 ^ ~rt3 & it3, u3[12] = qe3 ^ ~at2 & ut3, u3[13] = st2 ^ ~Ke3 & ht3, u3[22] = dt3 ^ ~Le2 & mt2, u3[23] = pt2 ^ ~vt3 & je3, u3[32] = yt3 ^ ~wt3 & Ge3, u3[33] = Je3 ^ ~xt3 & Mt3, u3[42] = Ve3 ^ ~_t3 & Ee2, u3[43] = It3 ^ ~Me3 & Se3, u3[4] = et2 ^ ~Ue3 & nt3, u3[5] = rt3 ^ ~it3 & ke3, u3[14] = at2 ^ ~ut3 & He3, u3[15] = Ke3 ^ ~ht3 & ct3, u3[24] = Le2 ^ ~mt2 & gt3, u3[25] = vt3 ^ ~je3 & At2, u3[34] = wt3 ^ ~Ge3 & Et3, u3[35] = xt3 ^ ~Mt3 & Ye3, u3[44] = _t3 ^ ~Ee2 & Ne2, u3[45] = Me3 ^ ~Se3 & Ie2, u3[6] = Ue3 ^ ~nt3 & Fe2, u3[7] = it3 ^ ~ke3 & $2, u3[16] = ut3 ^ ~He3 & ft3, u3[17] = ht3 ^ ~ct3 & ot2, u3[26] = mt2 ^ ~gt3 & lt3, u3[27] = je3 ^ ~At2 & ze2, u3[36] = Ge3 ^ ~Et3 & Qe3, u3[37] = Mt3 ^ ~Ye3 & bt3, u3[46] = Ee2 ^ ~Ne2 & St3, u3[47] = Se3 ^ ~Ie2 & Nt3, u3[8] = nt3 ^ ~Fe2 & tt2, u3[9] = ke3 ^ ~$2 & Te2, u3[18] = He3 ^ ~ft3 & qe3, u3[19] = ct3 ^ ~ot2 & st2, u3[28] = gt3 ^ ~lt3 & dt3, u3[29] = At2 ^ ~ze2 & pt2, u3[38] = Et3 ^ ~Qe3 & yt3, u3[39] = Ye3 ^ ~bt3 & Je3, u3[48] = Ne2 ^ ~St3 & Ve3, u3[49] = Ie2 ^ ~Nt3 & It3, u3[0] ^= C4[B2], u3[1] ^= C4[B2 + 1];
    };
    if (p3) e2.exports = f4;
    else for (c4 = 0; c4 < a3.length; ++c4) n4[a3[c4]] = f4[a3[c4]];
  })();
})(Pn);
var b0 = Pn.exports;
var y0 = "logger/5.7.0";
var Dn = false;
var Fn = false;
var Cr = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };
var Tn = Cr.default;
var gi = null;
function w0() {
  try {
    const e2 = [];
    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((t) => {
      try {
        if ("test".normalize(t) !== "test") throw new Error("bad normalize");
      } catch {
        e2.push(t);
      }
    }), e2.length) throw new Error("missing " + e2.join(", "));
    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation");
  } catch (e2) {
    return e2.message;
  }
  return null;
}
var Un = w0();
var Ai;
(function(e2) {
  e2.DEBUG = "DEBUG", e2.INFO = "INFO", e2.WARNING = "WARNING", e2.ERROR = "ERROR", e2.OFF = "OFF";
})(Ai || (Ai = {}));
var re;
(function(e2) {
  e2.UNKNOWN_ERROR = "UNKNOWN_ERROR", e2.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e2.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e2.NETWORK_ERROR = "NETWORK_ERROR", e2.SERVER_ERROR = "SERVER_ERROR", e2.TIMEOUT = "TIMEOUT", e2.BUFFER_OVERRUN = "BUFFER_OVERRUN", e2.NUMERIC_FAULT = "NUMERIC_FAULT", e2.MISSING_NEW = "MISSING_NEW", e2.INVALID_ARGUMENT = "INVALID_ARGUMENT", e2.MISSING_ARGUMENT = "MISSING_ARGUMENT", e2.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e2.CALL_EXCEPTION = "CALL_EXCEPTION", e2.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e2.NONCE_EXPIRED = "NONCE_EXPIRED", e2.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e2.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e2.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e2.ACTION_REJECTED = "ACTION_REJECTED";
})(re || (re = {}));
var kn = "0123456789abcdef";
var L = class _L {
  constructor(t) {
    Object.defineProperty(this, "version", { enumerable: true, value: t, writable: false });
  }
  _log(t, r2) {
    const i3 = t.toLowerCase();
    Cr[i3] == null && this.throwArgumentError("invalid log level name", "logLevel", t), !(Tn > Cr[i3]) && console.log.apply(console, r2);
  }
  debug(...t) {
    this._log(_L.levels.DEBUG, t);
  }
  info(...t) {
    this._log(_L.levels.INFO, t);
  }
  warn(...t) {
    this._log(_L.levels.WARNING, t);
  }
  makeError(t, r2, i3) {
    if (Fn) return this.makeError("censored error", r2, {});
    r2 || (r2 = _L.errors.UNKNOWN_ERROR), i3 || (i3 = {});
    const n4 = [];
    Object.keys(i3).forEach((b4) => {
      const m2 = i3[b4];
      try {
        if (m2 instanceof Uint8Array) {
          let w4 = "";
          for (let y6 = 0; y6 < m2.length; y6++) w4 += kn[m2[y6] >> 4], w4 += kn[m2[y6] & 15];
          n4.push(b4 + "=Uint8Array(0x" + w4 + ")");
        } else n4.push(b4 + "=" + JSON.stringify(m2));
      } catch {
        n4.push(b4 + "=" + JSON.stringify(i3[b4].toString()));
      }
    }), n4.push(`code=${r2}`), n4.push(`version=${this.version}`);
    const o2 = t;
    let h5 = "";
    switch (r2) {
      case re.NUMERIC_FAULT: {
        h5 = "NUMERIC_FAULT";
        const b4 = t;
        switch (b4) {
          case "overflow":
          case "underflow":
          case "division-by-zero":
            h5 += "-" + b4;
            break;
          case "negative-power":
          case "negative-width":
            h5 += "-unsupported";
            break;
          case "unbound-bitwise-result":
            h5 += "-unbound-result";
            break;
        }
        break;
      }
      case re.CALL_EXCEPTION:
      case re.INSUFFICIENT_FUNDS:
      case re.MISSING_NEW:
      case re.NONCE_EXPIRED:
      case re.REPLACEMENT_UNDERPRICED:
      case re.TRANSACTION_REPLACED:
      case re.UNPREDICTABLE_GAS_LIMIT:
        h5 = r2;
        break;
    }
    h5 && (t += " [ See: https://links.ethers.org/v5-errors-" + h5 + " ]"), n4.length && (t += " (" + n4.join(", ") + ")");
    const p3 = new Error(t);
    return p3.reason = o2, p3.code = r2, Object.keys(i3).forEach(function(b4) {
      p3[b4] = i3[b4];
    }), p3;
  }
  throwError(t, r2, i3) {
    throw this.makeError(t, r2, i3);
  }
  throwArgumentError(t, r2, i3) {
    return this.throwError(t, _L.errors.INVALID_ARGUMENT, { argument: r2, value: i3 });
  }
  assert(t, r2, i3, n4) {
    t || this.throwError(r2, i3, n4);
  }
  assertArgument(t, r2, i3, n4) {
    t || this.throwArgumentError(r2, i3, n4);
  }
  checkNormalize(t) {
    Un && this.throwError("platform missing String.prototype.normalize", _L.errors.UNSUPPORTED_OPERATION, { operation: "String.prototype.normalize", form: Un });
  }
  checkSafeUint53(t, r2) {
    typeof t == "number" && (r2 == null && (r2 = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(r2, _L.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "out-of-safe-range", value: t }), t % 1 && this.throwError(r2, _L.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "non-integer", value: t }));
  }
  checkArgumentCount(t, r2, i3) {
    i3 ? i3 = ": " + i3 : i3 = "", t < r2 && this.throwError("missing argument" + i3, _L.errors.MISSING_ARGUMENT, { count: t, expectedCount: r2 }), t > r2 && this.throwError("too many arguments" + i3, _L.errors.UNEXPECTED_ARGUMENT, { count: t, expectedCount: r2 });
  }
  checkNew(t, r2) {
    (t === Object || t == null) && this.throwError("missing new", _L.errors.MISSING_NEW, { name: r2.name });
  }
  checkAbstract(t, r2) {
    t === r2 ? this.throwError("cannot instantiate abstract class " + JSON.stringify(r2.name) + " directly; use a sub-class", _L.errors.UNSUPPORTED_OPERATION, { name: t.name, operation: "new" }) : (t === Object || t == null) && this.throwError("missing new", _L.errors.MISSING_NEW, { name: r2.name });
  }
  static globalLogger() {
    return gi || (gi = new _L(y0)), gi;
  }
  static setCensorship(t, r2) {
    if (!t && r2 && this.globalLogger().throwError("cannot permanently disable censorship", _L.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" }), Dn) {
      if (!t) return;
      this.globalLogger().throwError("error censorship permanent", _L.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" });
    }
    Fn = !!t, Dn = !!r2;
  }
  static setLogLevel(t) {
    const r2 = Cr[t.toLowerCase()];
    if (r2 == null) {
      _L.globalLogger().warn("invalid log level - " + t);
      return;
    }
    Tn = r2;
  }
  static from(t) {
    return new _L(t);
  }
};
L.errors = re, L.levels = Ai;
var x0 = "bytes/5.7.0";
var Dt = new L(x0);
function qn(e2) {
  return !!e2.toHexString;
}
function rr(e2) {
  return e2.slice || (e2.slice = function() {
    const t = Array.prototype.slice.call(arguments);
    return rr(new Uint8Array(Array.prototype.slice.apply(e2, t)));
  }), e2;
}
function M0(e2) {
  return Qt(e2) && !(e2.length % 2) || ir(e2);
}
function Kn(e2) {
  return typeof e2 == "number" && e2 == e2 && e2 % 1 === 0;
}
function ir(e2) {
  if (e2 == null) return false;
  if (e2.constructor === Uint8Array) return true;
  if (typeof e2 == "string" || !Kn(e2.length) || e2.length < 0) return false;
  for (let t = 0; t < e2.length; t++) {
    const r2 = e2[t];
    if (!Kn(r2) || r2 < 0 || r2 >= 256) return false;
  }
  return true;
}
function Ot(e2, t) {
  if (t || (t = {}), typeof e2 == "number") {
    Dt.checkSafeUint53(e2, "invalid arrayify value");
    const r2 = [];
    for (; e2; ) r2.unshift(e2 & 255), e2 = parseInt(String(e2 / 256));
    return r2.length === 0 && r2.push(0), rr(new Uint8Array(r2));
  }
  if (t.allowMissingPrefix && typeof e2 == "string" && e2.substring(0, 2) !== "0x" && (e2 = "0x" + e2), qn(e2) && (e2 = e2.toHexString()), Qt(e2)) {
    let r2 = e2.substring(2);
    r2.length % 2 && (t.hexPad === "left" ? r2 = "0" + r2 : t.hexPad === "right" ? r2 += "0" : Dt.throwArgumentError("hex data is odd-length", "value", e2));
    const i3 = [];
    for (let n4 = 0; n4 < r2.length; n4 += 2) i3.push(parseInt(r2.substring(n4, n4 + 2), 16));
    return rr(new Uint8Array(i3));
  }
  return ir(e2) ? rr(new Uint8Array(e2)) : Dt.throwArgumentError("invalid arrayify value", "value", e2);
}
function E0(e2) {
  const t = e2.map((n4) => Ot(n4)), r2 = t.reduce((n4, o2) => n4 + o2.length, 0), i3 = new Uint8Array(r2);
  return t.reduce((n4, o2) => (i3.set(o2, n4), n4 + o2.length), 0), rr(i3);
}
function S0(e2, t) {
  e2 = Ot(e2), e2.length > t && Dt.throwArgumentError("value out of range", "value", arguments[0]);
  const r2 = new Uint8Array(t);
  return r2.set(e2, t - e2.length), rr(r2);
}
function Qt(e2, t) {
  return !(typeof e2 != "string" || !e2.match(/^0x[0-9A-Fa-f]*$/) || t && e2.length !== 2 + 2 * t);
}
var bi = "0123456789abcdef";
function Kt(e2, t) {
  if (t || (t = {}), typeof e2 == "number") {
    Dt.checkSafeUint53(e2, "invalid hexlify value");
    let r2 = "";
    for (; e2; ) r2 = bi[e2 & 15] + r2, e2 = Math.floor(e2 / 16);
    return r2.length ? (r2.length % 2 && (r2 = "0" + r2), "0x" + r2) : "0x00";
  }
  if (typeof e2 == "bigint") return e2 = e2.toString(16), e2.length % 2 ? "0x0" + e2 : "0x" + e2;
  if (t.allowMissingPrefix && typeof e2 == "string" && e2.substring(0, 2) !== "0x" && (e2 = "0x" + e2), qn(e2)) return e2.toHexString();
  if (Qt(e2)) return e2.length % 2 && (t.hexPad === "left" ? e2 = "0x0" + e2.substring(2) : t.hexPad === "right" ? e2 += "0" : Dt.throwArgumentError("hex data is odd-length", "value", e2)), e2.toLowerCase();
  if (ir(e2)) {
    let r2 = "0x";
    for (let i3 = 0; i3 < e2.length; i3++) {
      let n4 = e2[i3];
      r2 += bi[(n4 & 240) >> 4] + bi[n4 & 15];
    }
    return r2;
  }
  return Dt.throwArgumentError("invalid hexlify value", "value", e2);
}
function N0(e2) {
  if (typeof e2 != "string") e2 = Kt(e2);
  else if (!Qt(e2) || e2.length % 2) return null;
  return (e2.length - 2) / 2;
}
function Hn(e2, t, r2) {
  return typeof e2 != "string" ? e2 = Kt(e2) : (!Qt(e2) || e2.length % 2) && Dt.throwArgumentError("invalid hexData", "value", e2), t = 2 + 2 * t, r2 != null ? "0x" + e2.substring(t, 2 + 2 * r2) : "0x" + e2.substring(t);
}
function oe(e2, t) {
  for (typeof e2 != "string" ? e2 = Kt(e2) : Qt(e2) || Dt.throwArgumentError("invalid hex string", "value", e2), e2.length > 2 * t + 2 && Dt.throwArgumentError("value out of range", "value", arguments[1]); e2.length < 2 * t + 2; ) e2 = "0x0" + e2.substring(2);
  return e2;
}
function zn(e2) {
  const t = { r: "0x", s: "0x", _vs: "0x", recoveryParam: 0, v: 0, yParityAndS: "0x", compact: "0x" };
  if (M0(e2)) {
    let r2 = Ot(e2);
    r2.length === 64 ? (t.v = 27 + (r2[32] >> 7), r2[32] &= 127, t.r = Kt(r2.slice(0, 32)), t.s = Kt(r2.slice(32, 64))) : r2.length === 65 ? (t.r = Kt(r2.slice(0, 32)), t.s = Kt(r2.slice(32, 64)), t.v = r2[64]) : Dt.throwArgumentError("invalid signature string", "signature", e2), t.v < 27 && (t.v === 0 || t.v === 1 ? t.v += 27 : Dt.throwArgumentError("signature invalid v byte", "signature", e2)), t.recoveryParam = 1 - t.v % 2, t.recoveryParam && (r2[32] |= 128), t._vs = Kt(r2.slice(32, 64));
  } else {
    if (t.r = e2.r, t.s = e2.s, t.v = e2.v, t.recoveryParam = e2.recoveryParam, t._vs = e2._vs, t._vs != null) {
      const n4 = S0(Ot(t._vs), 32);
      t._vs = Kt(n4);
      const o2 = n4[0] >= 128 ? 1 : 0;
      t.recoveryParam == null ? t.recoveryParam = o2 : t.recoveryParam !== o2 && Dt.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e2), n4[0] &= 127;
      const h5 = Kt(n4);
      t.s == null ? t.s = h5 : t.s !== h5 && Dt.throwArgumentError("signature v mismatch _vs", "signature", e2);
    }
    if (t.recoveryParam == null) t.v == null ? Dt.throwArgumentError("signature missing v and recoveryParam", "signature", e2) : t.v === 0 || t.v === 1 ? t.recoveryParam = t.v : t.recoveryParam = 1 - t.v % 2;
    else if (t.v == null) t.v = 27 + t.recoveryParam;
    else {
      const n4 = t.v === 0 || t.v === 1 ? t.v : 1 - t.v % 2;
      t.recoveryParam !== n4 && Dt.throwArgumentError("signature recoveryParam mismatch v", "signature", e2);
    }
    t.r == null || !Qt(t.r) ? Dt.throwArgumentError("signature missing or invalid r", "signature", e2) : t.r = oe(t.r, 32), t.s == null || !Qt(t.s) ? Dt.throwArgumentError("signature missing or invalid s", "signature", e2) : t.s = oe(t.s, 32);
    const r2 = Ot(t.s);
    r2[0] >= 128 && Dt.throwArgumentError("signature s out of range", "signature", e2), t.recoveryParam && (r2[0] |= 128);
    const i3 = Kt(r2);
    t._vs && (Qt(t._vs) || Dt.throwArgumentError("signature invalid _vs", "signature", e2), t._vs = oe(t._vs, 32)), t._vs == null ? t._vs = i3 : t._vs !== i3 && Dt.throwArgumentError("signature _vs mismatch v and s", "signature", e2);
  }
  return t.yParityAndS = t._vs, t.compact = t.r + t.yParityAndS.substring(2), t;
}
function yi(e2) {
  return "0x" + b0.keccak_256(Ot(e2));
}
var Ln = { exports: {} };
var I0 = {};
var _0 = Object.freeze({ __proto__: null, default: I0 });
var B0 = A0(_0);
(function(e2) {
  (function(t, r2) {
    function i3(A2, f4) {
      if (!A2) throw new Error(f4 || "Assertion failed");
    }
    function n4(A2, f4) {
      A2.super_ = f4;
      var a3 = function() {
      };
      a3.prototype = f4.prototype, A2.prototype = new a3(), A2.prototype.constructor = A2;
    }
    function o2(A2, f4, a3) {
      if (o2.isBN(A2)) return A2;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, A2 !== null && ((f4 === "le" || f4 === "be") && (a3 = f4, f4 = 10), this._init(A2 || 0, f4 || 10, a3 || "be"));
    }
    typeof t == "object" ? t.exports = o2 : r2.BN = o2, o2.BN = o2, o2.wordSize = 26;
    var h5;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? h5 = window.Buffer : h5 = B0.Buffer;
    } catch {
    }
    o2.isBN = function(f4) {
      return f4 instanceof o2 ? true : f4 !== null && typeof f4 == "object" && f4.constructor.wordSize === o2.wordSize && Array.isArray(f4.words);
    }, o2.max = function(f4, a3) {
      return f4.cmp(a3) > 0 ? f4 : a3;
    }, o2.min = function(f4, a3) {
      return f4.cmp(a3) < 0 ? f4 : a3;
    }, o2.prototype._init = function(f4, a3, c4) {
      if (typeof f4 == "number") return this._initNumber(f4, a3, c4);
      if (typeof f4 == "object") return this._initArray(f4, a3, c4);
      a3 === "hex" && (a3 = 16), i3(a3 === (a3 | 0) && a3 >= 2 && a3 <= 36), f4 = f4.toString().replace(/\s+/g, "");
      var d3 = 0;
      f4[0] === "-" && (d3++, this.negative = 1), d3 < f4.length && (a3 === 16 ? this._parseHex(f4, d3, c4) : (this._parseBase(f4, a3, d3), c4 === "le" && this._initArray(this.toArray(), a3, c4)));
    }, o2.prototype._initNumber = function(f4, a3, c4) {
      f4 < 0 && (this.negative = 1, f4 = -f4), f4 < 67108864 ? (this.words = [f4 & 67108863], this.length = 1) : f4 < 4503599627370496 ? (this.words = [f4 & 67108863, f4 / 67108864 & 67108863], this.length = 2) : (i3(f4 < 9007199254740992), this.words = [f4 & 67108863, f4 / 67108864 & 67108863, 1], this.length = 3), c4 === "le" && this._initArray(this.toArray(), a3, c4);
    }, o2.prototype._initArray = function(f4, a3, c4) {
      if (i3(typeof f4.length == "number"), f4.length <= 0) return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(f4.length / 3), this.words = new Array(this.length);
      for (var d3 = 0; d3 < this.length; d3++) this.words[d3] = 0;
      var g3, x4, M2 = 0;
      if (c4 === "be") for (d3 = f4.length - 1, g3 = 0; d3 >= 0; d3 -= 3) x4 = f4[d3] | f4[d3 - 1] << 8 | f4[d3 - 2] << 16, this.words[g3] |= x4 << M2 & 67108863, this.words[g3 + 1] = x4 >>> 26 - M2 & 67108863, M2 += 24, M2 >= 26 && (M2 -= 26, g3++);
      else if (c4 === "le") for (d3 = 0, g3 = 0; d3 < f4.length; d3 += 3) x4 = f4[d3] | f4[d3 + 1] << 8 | f4[d3 + 2] << 16, this.words[g3] |= x4 << M2 & 67108863, this.words[g3 + 1] = x4 >>> 26 - M2 & 67108863, M2 += 24, M2 >= 26 && (M2 -= 26, g3++);
      return this._strip();
    };
    function p3(A2, f4) {
      var a3 = A2.charCodeAt(f4);
      if (a3 >= 48 && a3 <= 57) return a3 - 48;
      if (a3 >= 65 && a3 <= 70) return a3 - 55;
      if (a3 >= 97 && a3 <= 102) return a3 - 87;
      i3(false, "Invalid character in " + A2);
    }
    function b4(A2, f4, a3) {
      var c4 = p3(A2, a3);
      return a3 - 1 >= f4 && (c4 |= p3(A2, a3 - 1) << 4), c4;
    }
    o2.prototype._parseHex = function(f4, a3, c4) {
      this.length = Math.ceil((f4.length - a3) / 6), this.words = new Array(this.length);
      for (var d3 = 0; d3 < this.length; d3++) this.words[d3] = 0;
      var g3 = 0, x4 = 0, M2;
      if (c4 === "be") for (d3 = f4.length - 1; d3 >= a3; d3 -= 2) M2 = b4(f4, a3, d3) << g3, this.words[x4] |= M2 & 67108863, g3 >= 18 ? (g3 -= 18, x4 += 1, this.words[x4] |= M2 >>> 26) : g3 += 8;
      else {
        var l3 = f4.length - a3;
        for (d3 = l3 % 2 === 0 ? a3 + 1 : a3; d3 < f4.length; d3 += 2) M2 = b4(f4, a3, d3) << g3, this.words[x4] |= M2 & 67108863, g3 >= 18 ? (g3 -= 18, x4 += 1, this.words[x4] |= M2 >>> 26) : g3 += 8;
      }
      this._strip();
    };
    function m2(A2, f4, a3, c4) {
      for (var d3 = 0, g3 = 0, x4 = Math.min(A2.length, a3), M2 = f4; M2 < x4; M2++) {
        var l3 = A2.charCodeAt(M2) - 48;
        d3 *= c4, l3 >= 49 ? g3 = l3 - 49 + 10 : l3 >= 17 ? g3 = l3 - 17 + 10 : g3 = l3, i3(l3 >= 0 && g3 < c4, "Invalid character"), d3 += g3;
      }
      return d3;
    }
    o2.prototype._parseBase = function(f4, a3, c4) {
      this.words = [0], this.length = 1;
      for (var d3 = 0, g3 = 1; g3 <= 67108863; g3 *= a3) d3++;
      d3--, g3 = g3 / a3 | 0;
      for (var x4 = f4.length - c4, M2 = x4 % d3, l3 = Math.min(x4, x4 - M2) + c4, s2 = 0, v4 = c4; v4 < l3; v4 += d3) s2 = m2(f4, v4, v4 + d3, a3), this.imuln(g3), this.words[0] + s2 < 67108864 ? this.words[0] += s2 : this._iaddn(s2);
      if (M2 !== 0) {
        var k5 = 1;
        for (s2 = m2(f4, v4, f4.length, a3), v4 = 0; v4 < M2; v4++) k5 *= a3;
        this.imuln(k5), this.words[0] + s2 < 67108864 ? this.words[0] += s2 : this._iaddn(s2);
      }
      this._strip();
    }, o2.prototype.copy = function(f4) {
      f4.words = new Array(this.length);
      for (var a3 = 0; a3 < this.length; a3++) f4.words[a3] = this.words[a3];
      f4.length = this.length, f4.negative = this.negative, f4.red = this.red;
    };
    function w4(A2, f4) {
      A2.words = f4.words, A2.length = f4.length, A2.negative = f4.negative, A2.red = f4.red;
    }
    if (o2.prototype._move = function(f4) {
      w4(f4, this);
    }, o2.prototype.clone = function() {
      var f4 = new o2(null);
      return this.copy(f4), f4;
    }, o2.prototype._expand = function(f4) {
      for (; this.length < f4; ) this.words[this.length++] = 0;
      return this;
    }, o2.prototype._strip = function() {
      for (; this.length > 1 && this.words[this.length - 1] === 0; ) this.length--;
      return this._normSign();
    }, o2.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, typeof Symbol < "u" && typeof Symbol.for == "function") try {
      o2.prototype[Symbol.for("nodejs.util.inspect.custom")] = y6;
    } catch {
      o2.prototype.inspect = y6;
    }
    else o2.prototype.inspect = y6;
    function y6() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var S4 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], I3 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], N3 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    o2.prototype.toString = function(f4, a3) {
      f4 = f4 || 10, a3 = a3 | 0 || 1;
      var c4;
      if (f4 === 16 || f4 === "hex") {
        c4 = "";
        for (var d3 = 0, g3 = 0, x4 = 0; x4 < this.length; x4++) {
          var M2 = this.words[x4], l3 = ((M2 << d3 | g3) & 16777215).toString(16);
          g3 = M2 >>> 24 - d3 & 16777215, d3 += 2, d3 >= 26 && (d3 -= 26, x4--), g3 !== 0 || x4 !== this.length - 1 ? c4 = S4[6 - l3.length] + l3 + c4 : c4 = l3 + c4;
        }
        for (g3 !== 0 && (c4 = g3.toString(16) + c4); c4.length % a3 !== 0; ) c4 = "0" + c4;
        return this.negative !== 0 && (c4 = "-" + c4), c4;
      }
      if (f4 === (f4 | 0) && f4 >= 2 && f4 <= 36) {
        var s2 = I3[f4], v4 = N3[f4];
        c4 = "";
        var k5 = this.clone();
        for (k5.negative = 0; !k5.isZero(); ) {
          var u3 = k5.modrn(v4).toString(f4);
          k5 = k5.idivn(v4), k5.isZero() ? c4 = u3 + c4 : c4 = S4[s2 - u3.length] + u3 + c4;
        }
        for (this.isZero() && (c4 = "0" + c4); c4.length % a3 !== 0; ) c4 = "0" + c4;
        return this.negative !== 0 && (c4 = "-" + c4), c4;
      }
      i3(false, "Base should be between 2 and 36");
    }, o2.prototype.toNumber = function() {
      var f4 = this.words[0];
      return this.length === 2 ? f4 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? f4 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && i3(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -f4 : f4;
    }, o2.prototype.toJSON = function() {
      return this.toString(16, 2);
    }, h5 && (o2.prototype.toBuffer = function(f4, a3) {
      return this.toArrayLike(h5, f4, a3);
    }), o2.prototype.toArray = function(f4, a3) {
      return this.toArrayLike(Array, f4, a3);
    };
    var C4 = function(f4, a3) {
      return f4.allocUnsafe ? f4.allocUnsafe(a3) : new f4(a3);
    };
    o2.prototype.toArrayLike = function(f4, a3, c4) {
      this._strip();
      var d3 = this.byteLength(), g3 = c4 || Math.max(1, d3);
      i3(d3 <= g3, "byte array longer than desired length"), i3(g3 > 0, "Requested array length <= 0");
      var x4 = C4(f4, g3), M2 = a3 === "le" ? "LE" : "BE";
      return this["_toArrayLike" + M2](x4, d3), x4;
    }, o2.prototype._toArrayLikeLE = function(f4, a3) {
      for (var c4 = 0, d3 = 0, g3 = 0, x4 = 0; g3 < this.length; g3++) {
        var M2 = this.words[g3] << x4 | d3;
        f4[c4++] = M2 & 255, c4 < f4.length && (f4[c4++] = M2 >> 8 & 255), c4 < f4.length && (f4[c4++] = M2 >> 16 & 255), x4 === 6 ? (c4 < f4.length && (f4[c4++] = M2 >> 24 & 255), d3 = 0, x4 = 0) : (d3 = M2 >>> 24, x4 += 2);
      }
      if (c4 < f4.length) for (f4[c4++] = d3; c4 < f4.length; ) f4[c4++] = 0;
    }, o2.prototype._toArrayLikeBE = function(f4, a3) {
      for (var c4 = f4.length - 1, d3 = 0, g3 = 0, x4 = 0; g3 < this.length; g3++) {
        var M2 = this.words[g3] << x4 | d3;
        f4[c4--] = M2 & 255, c4 >= 0 && (f4[c4--] = M2 >> 8 & 255), c4 >= 0 && (f4[c4--] = M2 >> 16 & 255), x4 === 6 ? (c4 >= 0 && (f4[c4--] = M2 >> 24 & 255), d3 = 0, x4 = 0) : (d3 = M2 >>> 24, x4 += 2);
      }
      if (c4 >= 0) for (f4[c4--] = d3; c4 >= 0; ) f4[c4--] = 0;
    }, Math.clz32 ? o2.prototype._countBits = function(f4) {
      return 32 - Math.clz32(f4);
    } : o2.prototype._countBits = function(f4) {
      var a3 = f4, c4 = 0;
      return a3 >= 4096 && (c4 += 13, a3 >>>= 13), a3 >= 64 && (c4 += 7, a3 >>>= 7), a3 >= 8 && (c4 += 4, a3 >>>= 4), a3 >= 2 && (c4 += 2, a3 >>>= 2), c4 + a3;
    }, o2.prototype._zeroBits = function(f4) {
      if (f4 === 0) return 26;
      var a3 = f4, c4 = 0;
      return a3 & 8191 || (c4 += 13, a3 >>>= 13), a3 & 127 || (c4 += 7, a3 >>>= 7), a3 & 15 || (c4 += 4, a3 >>>= 4), a3 & 3 || (c4 += 2, a3 >>>= 2), a3 & 1 || c4++, c4;
    }, o2.prototype.bitLength = function() {
      var f4 = this.words[this.length - 1], a3 = this._countBits(f4);
      return (this.length - 1) * 26 + a3;
    };
    function F2(A2) {
      for (var f4 = new Array(A2.bitLength()), a3 = 0; a3 < f4.length; a3++) {
        var c4 = a3 / 26 | 0, d3 = a3 % 26;
        f4[a3] = A2.words[c4] >>> d3 & 1;
      }
      return f4;
    }
    o2.prototype.zeroBits = function() {
      if (this.isZero()) return 0;
      for (var f4 = 0, a3 = 0; a3 < this.length; a3++) {
        var c4 = this._zeroBits(this.words[a3]);
        if (f4 += c4, c4 !== 26) break;
      }
      return f4;
    }, o2.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, o2.prototype.toTwos = function(f4) {
      return this.negative !== 0 ? this.abs().inotn(f4).iaddn(1) : this.clone();
    }, o2.prototype.fromTwos = function(f4) {
      return this.testn(f4 - 1) ? this.notn(f4).iaddn(1).ineg() : this.clone();
    }, o2.prototype.isNeg = function() {
      return this.negative !== 0;
    }, o2.prototype.neg = function() {
      return this.clone().ineg();
    }, o2.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, o2.prototype.iuor = function(f4) {
      for (; this.length < f4.length; ) this.words[this.length++] = 0;
      for (var a3 = 0; a3 < f4.length; a3++) this.words[a3] = this.words[a3] | f4.words[a3];
      return this._strip();
    }, o2.prototype.ior = function(f4) {
      return i3((this.negative | f4.negative) === 0), this.iuor(f4);
    }, o2.prototype.or = function(f4) {
      return this.length > f4.length ? this.clone().ior(f4) : f4.clone().ior(this);
    }, o2.prototype.uor = function(f4) {
      return this.length > f4.length ? this.clone().iuor(f4) : f4.clone().iuor(this);
    }, o2.prototype.iuand = function(f4) {
      var a3;
      this.length > f4.length ? a3 = f4 : a3 = this;
      for (var c4 = 0; c4 < a3.length; c4++) this.words[c4] = this.words[c4] & f4.words[c4];
      return this.length = a3.length, this._strip();
    }, o2.prototype.iand = function(f4) {
      return i3((this.negative | f4.negative) === 0), this.iuand(f4);
    }, o2.prototype.and = function(f4) {
      return this.length > f4.length ? this.clone().iand(f4) : f4.clone().iand(this);
    }, o2.prototype.uand = function(f4) {
      return this.length > f4.length ? this.clone().iuand(f4) : f4.clone().iuand(this);
    }, o2.prototype.iuxor = function(f4) {
      var a3, c4;
      this.length > f4.length ? (a3 = this, c4 = f4) : (a3 = f4, c4 = this);
      for (var d3 = 0; d3 < c4.length; d3++) this.words[d3] = a3.words[d3] ^ c4.words[d3];
      if (this !== a3) for (; d3 < a3.length; d3++) this.words[d3] = a3.words[d3];
      return this.length = a3.length, this._strip();
    }, o2.prototype.ixor = function(f4) {
      return i3((this.negative | f4.negative) === 0), this.iuxor(f4);
    }, o2.prototype.xor = function(f4) {
      return this.length > f4.length ? this.clone().ixor(f4) : f4.clone().ixor(this);
    }, o2.prototype.uxor = function(f4) {
      return this.length > f4.length ? this.clone().iuxor(f4) : f4.clone().iuxor(this);
    }, o2.prototype.inotn = function(f4) {
      i3(typeof f4 == "number" && f4 >= 0);
      var a3 = Math.ceil(f4 / 26) | 0, c4 = f4 % 26;
      this._expand(a3), c4 > 0 && a3--;
      for (var d3 = 0; d3 < a3; d3++) this.words[d3] = ~this.words[d3] & 67108863;
      return c4 > 0 && (this.words[d3] = ~this.words[d3] & 67108863 >> 26 - c4), this._strip();
    }, o2.prototype.notn = function(f4) {
      return this.clone().inotn(f4);
    }, o2.prototype.setn = function(f4, a3) {
      i3(typeof f4 == "number" && f4 >= 0);
      var c4 = f4 / 26 | 0, d3 = f4 % 26;
      return this._expand(c4 + 1), a3 ? this.words[c4] = this.words[c4] | 1 << d3 : this.words[c4] = this.words[c4] & ~(1 << d3), this._strip();
    }, o2.prototype.iadd = function(f4) {
      var a3;
      if (this.negative !== 0 && f4.negative === 0) return this.negative = 0, a3 = this.isub(f4), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && f4.negative !== 0) return f4.negative = 0, a3 = this.isub(f4), f4.negative = 1, a3._normSign();
      var c4, d3;
      this.length > f4.length ? (c4 = this, d3 = f4) : (c4 = f4, d3 = this);
      for (var g3 = 0, x4 = 0; x4 < d3.length; x4++) a3 = (c4.words[x4] | 0) + (d3.words[x4] | 0) + g3, this.words[x4] = a3 & 67108863, g3 = a3 >>> 26;
      for (; g3 !== 0 && x4 < c4.length; x4++) a3 = (c4.words[x4] | 0) + g3, this.words[x4] = a3 & 67108863, g3 = a3 >>> 26;
      if (this.length = c4.length, g3 !== 0) this.words[this.length] = g3, this.length++;
      else if (c4 !== this) for (; x4 < c4.length; x4++) this.words[x4] = c4.words[x4];
      return this;
    }, o2.prototype.add = function(f4) {
      var a3;
      return f4.negative !== 0 && this.negative === 0 ? (f4.negative = 0, a3 = this.sub(f4), f4.negative ^= 1, a3) : f4.negative === 0 && this.negative !== 0 ? (this.negative = 0, a3 = f4.sub(this), this.negative = 1, a3) : this.length > f4.length ? this.clone().iadd(f4) : f4.clone().iadd(this);
    }, o2.prototype.isub = function(f4) {
      if (f4.negative !== 0) {
        f4.negative = 0;
        var a3 = this.iadd(f4);
        return f4.negative = 1, a3._normSign();
      } else if (this.negative !== 0) return this.negative = 0, this.iadd(f4), this.negative = 1, this._normSign();
      var c4 = this.cmp(f4);
      if (c4 === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var d3, g3;
      c4 > 0 ? (d3 = this, g3 = f4) : (d3 = f4, g3 = this);
      for (var x4 = 0, M2 = 0; M2 < g3.length; M2++) a3 = (d3.words[M2] | 0) - (g3.words[M2] | 0) + x4, x4 = a3 >> 26, this.words[M2] = a3 & 67108863;
      for (; x4 !== 0 && M2 < d3.length; M2++) a3 = (d3.words[M2] | 0) + x4, x4 = a3 >> 26, this.words[M2] = a3 & 67108863;
      if (x4 === 0 && M2 < d3.length && d3 !== this) for (; M2 < d3.length; M2++) this.words[M2] = d3.words[M2];
      return this.length = Math.max(this.length, M2), d3 !== this && (this.negative = 1), this._strip();
    }, o2.prototype.sub = function(f4) {
      return this.clone().isub(f4);
    };
    function U3(A2, f4, a3) {
      a3.negative = f4.negative ^ A2.negative;
      var c4 = A2.length + f4.length | 0;
      a3.length = c4, c4 = c4 - 1 | 0;
      var d3 = A2.words[0] | 0, g3 = f4.words[0] | 0, x4 = d3 * g3, M2 = x4 & 67108863, l3 = x4 / 67108864 | 0;
      a3.words[0] = M2;
      for (var s2 = 1; s2 < c4; s2++) {
        for (var v4 = l3 >>> 26, k5 = l3 & 67108863, u3 = Math.min(s2, f4.length - 1), E4 = Math.max(0, s2 - A2.length + 1); E4 <= u3; E4++) {
          var _3 = s2 - E4 | 0;
          d3 = A2.words[_3] | 0, g3 = f4.words[E4] | 0, x4 = d3 * g3 + k5, v4 += x4 / 67108864 | 0, k5 = x4 & 67108863;
        }
        a3.words[s2] = k5 | 0, l3 = v4 | 0;
      }
      return l3 !== 0 ? a3.words[s2] = l3 | 0 : a3.length--, a3._strip();
    }
    var J2 = function(f4, a3, c4) {
      var d3 = f4.words, g3 = a3.words, x4 = c4.words, M2 = 0, l3, s2, v4, k5 = d3[0] | 0, u3 = k5 & 8191, E4 = k5 >>> 13, _3 = d3[1] | 0, B2 = _3 & 8191, R = _3 >>> 13, T3 = d3[2] | 0, P2 = T3 & 8191, O3 = T3 >>> 13, Ct2 = d3[3] | 0, D2 = Ct2 & 8191, q2 = Ct2 >>> 13, De3 = d3[4] | 0, X2 = De3 & 8191, Z2 = De3 >>> 13, Fe2 = d3[5] | 0, $2 = Fe2 & 8191, tt2 = Fe2 >>> 13, Te2 = d3[6] | 0, et2 = Te2 & 8191, rt3 = Te2 >>> 13, Ue3 = d3[7] | 0, it3 = Ue3 & 8191, nt3 = Ue3 >>> 13, ke3 = d3[8] | 0, ft3 = ke3 & 8191, ot2 = ke3 >>> 13, qe3 = d3[9] | 0, st2 = qe3 & 8191, at2 = qe3 >>> 13, Ke3 = g3[0] | 0, ut3 = Ke3 & 8191, ht3 = Ke3 >>> 13, He3 = g3[1] | 0, ct3 = He3 & 8191, lt3 = He3 >>> 13, ze2 = g3[2] | 0, dt3 = ze2 & 8191, pt2 = ze2 >>> 13, Le2 = g3[3] | 0, vt3 = Le2 & 8191, mt2 = Le2 >>> 13, je3 = g3[4] | 0, gt3 = je3 & 8191, At2 = je3 >>> 13, Qe3 = g3[5] | 0, bt3 = Qe3 & 8191, yt3 = Qe3 >>> 13, Je3 = g3[6] | 0, wt3 = Je3 & 8191, xt3 = Je3 >>> 13, Ge3 = g3[7] | 0, Mt3 = Ge3 & 8191, Et3 = Ge3 >>> 13, Ye3 = g3[8] | 0, St3 = Ye3 & 8191, Nt3 = Ye3 >>> 13, Ve3 = g3[9] | 0, It3 = Ve3 & 8191, _t3 = Ve3 >>> 13;
      c4.negative = f4.negative ^ a3.negative, c4.length = 19, l3 = Math.imul(u3, ut3), s2 = Math.imul(u3, ht3), s2 = s2 + Math.imul(E4, ut3) | 0, v4 = Math.imul(E4, ht3);
      var Me3 = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (Me3 >>> 26) | 0, Me3 &= 67108863, l3 = Math.imul(B2, ut3), s2 = Math.imul(B2, ht3), s2 = s2 + Math.imul(R, ut3) | 0, v4 = Math.imul(R, ht3), l3 = l3 + Math.imul(u3, ct3) | 0, s2 = s2 + Math.imul(u3, lt3) | 0, s2 = s2 + Math.imul(E4, ct3) | 0, v4 = v4 + Math.imul(E4, lt3) | 0;
      var Ee2 = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (Ee2 >>> 26) | 0, Ee2 &= 67108863, l3 = Math.imul(P2, ut3), s2 = Math.imul(P2, ht3), s2 = s2 + Math.imul(O3, ut3) | 0, v4 = Math.imul(O3, ht3), l3 = l3 + Math.imul(B2, ct3) | 0, s2 = s2 + Math.imul(B2, lt3) | 0, s2 = s2 + Math.imul(R, ct3) | 0, v4 = v4 + Math.imul(R, lt3) | 0, l3 = l3 + Math.imul(u3, dt3) | 0, s2 = s2 + Math.imul(u3, pt2) | 0, s2 = s2 + Math.imul(E4, dt3) | 0, v4 = v4 + Math.imul(E4, pt2) | 0;
      var Se3 = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (Se3 >>> 26) | 0, Se3 &= 67108863, l3 = Math.imul(D2, ut3), s2 = Math.imul(D2, ht3), s2 = s2 + Math.imul(q2, ut3) | 0, v4 = Math.imul(q2, ht3), l3 = l3 + Math.imul(P2, ct3) | 0, s2 = s2 + Math.imul(P2, lt3) | 0, s2 = s2 + Math.imul(O3, ct3) | 0, v4 = v4 + Math.imul(O3, lt3) | 0, l3 = l3 + Math.imul(B2, dt3) | 0, s2 = s2 + Math.imul(B2, pt2) | 0, s2 = s2 + Math.imul(R, dt3) | 0, v4 = v4 + Math.imul(R, pt2) | 0, l3 = l3 + Math.imul(u3, vt3) | 0, s2 = s2 + Math.imul(u3, mt2) | 0, s2 = s2 + Math.imul(E4, vt3) | 0, v4 = v4 + Math.imul(E4, mt2) | 0;
      var Ne2 = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (Ne2 >>> 26) | 0, Ne2 &= 67108863, l3 = Math.imul(X2, ut3), s2 = Math.imul(X2, ht3), s2 = s2 + Math.imul(Z2, ut3) | 0, v4 = Math.imul(Z2, ht3), l3 = l3 + Math.imul(D2, ct3) | 0, s2 = s2 + Math.imul(D2, lt3) | 0, s2 = s2 + Math.imul(q2, ct3) | 0, v4 = v4 + Math.imul(q2, lt3) | 0, l3 = l3 + Math.imul(P2, dt3) | 0, s2 = s2 + Math.imul(P2, pt2) | 0, s2 = s2 + Math.imul(O3, dt3) | 0, v4 = v4 + Math.imul(O3, pt2) | 0, l3 = l3 + Math.imul(B2, vt3) | 0, s2 = s2 + Math.imul(B2, mt2) | 0, s2 = s2 + Math.imul(R, vt3) | 0, v4 = v4 + Math.imul(R, mt2) | 0, l3 = l3 + Math.imul(u3, gt3) | 0, s2 = s2 + Math.imul(u3, At2) | 0, s2 = s2 + Math.imul(E4, gt3) | 0, v4 = v4 + Math.imul(E4, At2) | 0;
      var Ie2 = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (Ie2 >>> 26) | 0, Ie2 &= 67108863, l3 = Math.imul($2, ut3), s2 = Math.imul($2, ht3), s2 = s2 + Math.imul(tt2, ut3) | 0, v4 = Math.imul(tt2, ht3), l3 = l3 + Math.imul(X2, ct3) | 0, s2 = s2 + Math.imul(X2, lt3) | 0, s2 = s2 + Math.imul(Z2, ct3) | 0, v4 = v4 + Math.imul(Z2, lt3) | 0, l3 = l3 + Math.imul(D2, dt3) | 0, s2 = s2 + Math.imul(D2, pt2) | 0, s2 = s2 + Math.imul(q2, dt3) | 0, v4 = v4 + Math.imul(q2, pt2) | 0, l3 = l3 + Math.imul(P2, vt3) | 0, s2 = s2 + Math.imul(P2, mt2) | 0, s2 = s2 + Math.imul(O3, vt3) | 0, v4 = v4 + Math.imul(O3, mt2) | 0, l3 = l3 + Math.imul(B2, gt3) | 0, s2 = s2 + Math.imul(B2, At2) | 0, s2 = s2 + Math.imul(R, gt3) | 0, v4 = v4 + Math.imul(R, At2) | 0, l3 = l3 + Math.imul(u3, bt3) | 0, s2 = s2 + Math.imul(u3, yt3) | 0, s2 = s2 + Math.imul(E4, bt3) | 0, v4 = v4 + Math.imul(E4, yt3) | 0;
      var Wr2 = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (Wr2 >>> 26) | 0, Wr2 &= 67108863, l3 = Math.imul(et2, ut3), s2 = Math.imul(et2, ht3), s2 = s2 + Math.imul(rt3, ut3) | 0, v4 = Math.imul(rt3, ht3), l3 = l3 + Math.imul($2, ct3) | 0, s2 = s2 + Math.imul($2, lt3) | 0, s2 = s2 + Math.imul(tt2, ct3) | 0, v4 = v4 + Math.imul(tt2, lt3) | 0, l3 = l3 + Math.imul(X2, dt3) | 0, s2 = s2 + Math.imul(X2, pt2) | 0, s2 = s2 + Math.imul(Z2, dt3) | 0, v4 = v4 + Math.imul(Z2, pt2) | 0, l3 = l3 + Math.imul(D2, vt3) | 0, s2 = s2 + Math.imul(D2, mt2) | 0, s2 = s2 + Math.imul(q2, vt3) | 0, v4 = v4 + Math.imul(q2, mt2) | 0, l3 = l3 + Math.imul(P2, gt3) | 0, s2 = s2 + Math.imul(P2, At2) | 0, s2 = s2 + Math.imul(O3, gt3) | 0, v4 = v4 + Math.imul(O3, At2) | 0, l3 = l3 + Math.imul(B2, bt3) | 0, s2 = s2 + Math.imul(B2, yt3) | 0, s2 = s2 + Math.imul(R, bt3) | 0, v4 = v4 + Math.imul(R, yt3) | 0, l3 = l3 + Math.imul(u3, wt3) | 0, s2 = s2 + Math.imul(u3, xt3) | 0, s2 = s2 + Math.imul(E4, wt3) | 0, v4 = v4 + Math.imul(E4, xt3) | 0;
      var Xr2 = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (Xr2 >>> 26) | 0, Xr2 &= 67108863, l3 = Math.imul(it3, ut3), s2 = Math.imul(it3, ht3), s2 = s2 + Math.imul(nt3, ut3) | 0, v4 = Math.imul(nt3, ht3), l3 = l3 + Math.imul(et2, ct3) | 0, s2 = s2 + Math.imul(et2, lt3) | 0, s2 = s2 + Math.imul(rt3, ct3) | 0, v4 = v4 + Math.imul(rt3, lt3) | 0, l3 = l3 + Math.imul($2, dt3) | 0, s2 = s2 + Math.imul($2, pt2) | 0, s2 = s2 + Math.imul(tt2, dt3) | 0, v4 = v4 + Math.imul(tt2, pt2) | 0, l3 = l3 + Math.imul(X2, vt3) | 0, s2 = s2 + Math.imul(X2, mt2) | 0, s2 = s2 + Math.imul(Z2, vt3) | 0, v4 = v4 + Math.imul(Z2, mt2) | 0, l3 = l3 + Math.imul(D2, gt3) | 0, s2 = s2 + Math.imul(D2, At2) | 0, s2 = s2 + Math.imul(q2, gt3) | 0, v4 = v4 + Math.imul(q2, At2) | 0, l3 = l3 + Math.imul(P2, bt3) | 0, s2 = s2 + Math.imul(P2, yt3) | 0, s2 = s2 + Math.imul(O3, bt3) | 0, v4 = v4 + Math.imul(O3, yt3) | 0, l3 = l3 + Math.imul(B2, wt3) | 0, s2 = s2 + Math.imul(B2, xt3) | 0, s2 = s2 + Math.imul(R, wt3) | 0, v4 = v4 + Math.imul(R, xt3) | 0, l3 = l3 + Math.imul(u3, Mt3) | 0, s2 = s2 + Math.imul(u3, Et3) | 0, s2 = s2 + Math.imul(E4, Mt3) | 0, v4 = v4 + Math.imul(E4, Et3) | 0;
      var Zr2 = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (Zr2 >>> 26) | 0, Zr2 &= 67108863, l3 = Math.imul(ft3, ut3), s2 = Math.imul(ft3, ht3), s2 = s2 + Math.imul(ot2, ut3) | 0, v4 = Math.imul(ot2, ht3), l3 = l3 + Math.imul(it3, ct3) | 0, s2 = s2 + Math.imul(it3, lt3) | 0, s2 = s2 + Math.imul(nt3, ct3) | 0, v4 = v4 + Math.imul(nt3, lt3) | 0, l3 = l3 + Math.imul(et2, dt3) | 0, s2 = s2 + Math.imul(et2, pt2) | 0, s2 = s2 + Math.imul(rt3, dt3) | 0, v4 = v4 + Math.imul(rt3, pt2) | 0, l3 = l3 + Math.imul($2, vt3) | 0, s2 = s2 + Math.imul($2, mt2) | 0, s2 = s2 + Math.imul(tt2, vt3) | 0, v4 = v4 + Math.imul(tt2, mt2) | 0, l3 = l3 + Math.imul(X2, gt3) | 0, s2 = s2 + Math.imul(X2, At2) | 0, s2 = s2 + Math.imul(Z2, gt3) | 0, v4 = v4 + Math.imul(Z2, At2) | 0, l3 = l3 + Math.imul(D2, bt3) | 0, s2 = s2 + Math.imul(D2, yt3) | 0, s2 = s2 + Math.imul(q2, bt3) | 0, v4 = v4 + Math.imul(q2, yt3) | 0, l3 = l3 + Math.imul(P2, wt3) | 0, s2 = s2 + Math.imul(P2, xt3) | 0, s2 = s2 + Math.imul(O3, wt3) | 0, v4 = v4 + Math.imul(O3, xt3) | 0, l3 = l3 + Math.imul(B2, Mt3) | 0, s2 = s2 + Math.imul(B2, Et3) | 0, s2 = s2 + Math.imul(R, Mt3) | 0, v4 = v4 + Math.imul(R, Et3) | 0, l3 = l3 + Math.imul(u3, St3) | 0, s2 = s2 + Math.imul(u3, Nt3) | 0, s2 = s2 + Math.imul(E4, St3) | 0, v4 = v4 + Math.imul(E4, Nt3) | 0;
      var $r3 = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + ($r3 >>> 26) | 0, $r3 &= 67108863, l3 = Math.imul(st2, ut3), s2 = Math.imul(st2, ht3), s2 = s2 + Math.imul(at2, ut3) | 0, v4 = Math.imul(at2, ht3), l3 = l3 + Math.imul(ft3, ct3) | 0, s2 = s2 + Math.imul(ft3, lt3) | 0, s2 = s2 + Math.imul(ot2, ct3) | 0, v4 = v4 + Math.imul(ot2, lt3) | 0, l3 = l3 + Math.imul(it3, dt3) | 0, s2 = s2 + Math.imul(it3, pt2) | 0, s2 = s2 + Math.imul(nt3, dt3) | 0, v4 = v4 + Math.imul(nt3, pt2) | 0, l3 = l3 + Math.imul(et2, vt3) | 0, s2 = s2 + Math.imul(et2, mt2) | 0, s2 = s2 + Math.imul(rt3, vt3) | 0, v4 = v4 + Math.imul(rt3, mt2) | 0, l3 = l3 + Math.imul($2, gt3) | 0, s2 = s2 + Math.imul($2, At2) | 0, s2 = s2 + Math.imul(tt2, gt3) | 0, v4 = v4 + Math.imul(tt2, At2) | 0, l3 = l3 + Math.imul(X2, bt3) | 0, s2 = s2 + Math.imul(X2, yt3) | 0, s2 = s2 + Math.imul(Z2, bt3) | 0, v4 = v4 + Math.imul(Z2, yt3) | 0, l3 = l3 + Math.imul(D2, wt3) | 0, s2 = s2 + Math.imul(D2, xt3) | 0, s2 = s2 + Math.imul(q2, wt3) | 0, v4 = v4 + Math.imul(q2, xt3) | 0, l3 = l3 + Math.imul(P2, Mt3) | 0, s2 = s2 + Math.imul(P2, Et3) | 0, s2 = s2 + Math.imul(O3, Mt3) | 0, v4 = v4 + Math.imul(O3, Et3) | 0, l3 = l3 + Math.imul(B2, St3) | 0, s2 = s2 + Math.imul(B2, Nt3) | 0, s2 = s2 + Math.imul(R, St3) | 0, v4 = v4 + Math.imul(R, Nt3) | 0, l3 = l3 + Math.imul(u3, It3) | 0, s2 = s2 + Math.imul(u3, _t3) | 0, s2 = s2 + Math.imul(E4, It3) | 0, v4 = v4 + Math.imul(E4, _t3) | 0;
      var ti = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (ti >>> 26) | 0, ti &= 67108863, l3 = Math.imul(st2, ct3), s2 = Math.imul(st2, lt3), s2 = s2 + Math.imul(at2, ct3) | 0, v4 = Math.imul(at2, lt3), l3 = l3 + Math.imul(ft3, dt3) | 0, s2 = s2 + Math.imul(ft3, pt2) | 0, s2 = s2 + Math.imul(ot2, dt3) | 0, v4 = v4 + Math.imul(ot2, pt2) | 0, l3 = l3 + Math.imul(it3, vt3) | 0, s2 = s2 + Math.imul(it3, mt2) | 0, s2 = s2 + Math.imul(nt3, vt3) | 0, v4 = v4 + Math.imul(nt3, mt2) | 0, l3 = l3 + Math.imul(et2, gt3) | 0, s2 = s2 + Math.imul(et2, At2) | 0, s2 = s2 + Math.imul(rt3, gt3) | 0, v4 = v4 + Math.imul(rt3, At2) | 0, l3 = l3 + Math.imul($2, bt3) | 0, s2 = s2 + Math.imul($2, yt3) | 0, s2 = s2 + Math.imul(tt2, bt3) | 0, v4 = v4 + Math.imul(tt2, yt3) | 0, l3 = l3 + Math.imul(X2, wt3) | 0, s2 = s2 + Math.imul(X2, xt3) | 0, s2 = s2 + Math.imul(Z2, wt3) | 0, v4 = v4 + Math.imul(Z2, xt3) | 0, l3 = l3 + Math.imul(D2, Mt3) | 0, s2 = s2 + Math.imul(D2, Et3) | 0, s2 = s2 + Math.imul(q2, Mt3) | 0, v4 = v4 + Math.imul(q2, Et3) | 0, l3 = l3 + Math.imul(P2, St3) | 0, s2 = s2 + Math.imul(P2, Nt3) | 0, s2 = s2 + Math.imul(O3, St3) | 0, v4 = v4 + Math.imul(O3, Nt3) | 0, l3 = l3 + Math.imul(B2, It3) | 0, s2 = s2 + Math.imul(B2, _t3) | 0, s2 = s2 + Math.imul(R, It3) | 0, v4 = v4 + Math.imul(R, _t3) | 0;
      var ei2 = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (ei2 >>> 26) | 0, ei2 &= 67108863, l3 = Math.imul(st2, dt3), s2 = Math.imul(st2, pt2), s2 = s2 + Math.imul(at2, dt3) | 0, v4 = Math.imul(at2, pt2), l3 = l3 + Math.imul(ft3, vt3) | 0, s2 = s2 + Math.imul(ft3, mt2) | 0, s2 = s2 + Math.imul(ot2, vt3) | 0, v4 = v4 + Math.imul(ot2, mt2) | 0, l3 = l3 + Math.imul(it3, gt3) | 0, s2 = s2 + Math.imul(it3, At2) | 0, s2 = s2 + Math.imul(nt3, gt3) | 0, v4 = v4 + Math.imul(nt3, At2) | 0, l3 = l3 + Math.imul(et2, bt3) | 0, s2 = s2 + Math.imul(et2, yt3) | 0, s2 = s2 + Math.imul(rt3, bt3) | 0, v4 = v4 + Math.imul(rt3, yt3) | 0, l3 = l3 + Math.imul($2, wt3) | 0, s2 = s2 + Math.imul($2, xt3) | 0, s2 = s2 + Math.imul(tt2, wt3) | 0, v4 = v4 + Math.imul(tt2, xt3) | 0, l3 = l3 + Math.imul(X2, Mt3) | 0, s2 = s2 + Math.imul(X2, Et3) | 0, s2 = s2 + Math.imul(Z2, Mt3) | 0, v4 = v4 + Math.imul(Z2, Et3) | 0, l3 = l3 + Math.imul(D2, St3) | 0, s2 = s2 + Math.imul(D2, Nt3) | 0, s2 = s2 + Math.imul(q2, St3) | 0, v4 = v4 + Math.imul(q2, Nt3) | 0, l3 = l3 + Math.imul(P2, It3) | 0, s2 = s2 + Math.imul(P2, _t3) | 0, s2 = s2 + Math.imul(O3, It3) | 0, v4 = v4 + Math.imul(O3, _t3) | 0;
      var ri = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (ri >>> 26) | 0, ri &= 67108863, l3 = Math.imul(st2, vt3), s2 = Math.imul(st2, mt2), s2 = s2 + Math.imul(at2, vt3) | 0, v4 = Math.imul(at2, mt2), l3 = l3 + Math.imul(ft3, gt3) | 0, s2 = s2 + Math.imul(ft3, At2) | 0, s2 = s2 + Math.imul(ot2, gt3) | 0, v4 = v4 + Math.imul(ot2, At2) | 0, l3 = l3 + Math.imul(it3, bt3) | 0, s2 = s2 + Math.imul(it3, yt3) | 0, s2 = s2 + Math.imul(nt3, bt3) | 0, v4 = v4 + Math.imul(nt3, yt3) | 0, l3 = l3 + Math.imul(et2, wt3) | 0, s2 = s2 + Math.imul(et2, xt3) | 0, s2 = s2 + Math.imul(rt3, wt3) | 0, v4 = v4 + Math.imul(rt3, xt3) | 0, l3 = l3 + Math.imul($2, Mt3) | 0, s2 = s2 + Math.imul($2, Et3) | 0, s2 = s2 + Math.imul(tt2, Mt3) | 0, v4 = v4 + Math.imul(tt2, Et3) | 0, l3 = l3 + Math.imul(X2, St3) | 0, s2 = s2 + Math.imul(X2, Nt3) | 0, s2 = s2 + Math.imul(Z2, St3) | 0, v4 = v4 + Math.imul(Z2, Nt3) | 0, l3 = l3 + Math.imul(D2, It3) | 0, s2 = s2 + Math.imul(D2, _t3) | 0, s2 = s2 + Math.imul(q2, It3) | 0, v4 = v4 + Math.imul(q2, _t3) | 0;
      var ii = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (ii >>> 26) | 0, ii &= 67108863, l3 = Math.imul(st2, gt3), s2 = Math.imul(st2, At2), s2 = s2 + Math.imul(at2, gt3) | 0, v4 = Math.imul(at2, At2), l3 = l3 + Math.imul(ft3, bt3) | 0, s2 = s2 + Math.imul(ft3, yt3) | 0, s2 = s2 + Math.imul(ot2, bt3) | 0, v4 = v4 + Math.imul(ot2, yt3) | 0, l3 = l3 + Math.imul(it3, wt3) | 0, s2 = s2 + Math.imul(it3, xt3) | 0, s2 = s2 + Math.imul(nt3, wt3) | 0, v4 = v4 + Math.imul(nt3, xt3) | 0, l3 = l3 + Math.imul(et2, Mt3) | 0, s2 = s2 + Math.imul(et2, Et3) | 0, s2 = s2 + Math.imul(rt3, Mt3) | 0, v4 = v4 + Math.imul(rt3, Et3) | 0, l3 = l3 + Math.imul($2, St3) | 0, s2 = s2 + Math.imul($2, Nt3) | 0, s2 = s2 + Math.imul(tt2, St3) | 0, v4 = v4 + Math.imul(tt2, Nt3) | 0, l3 = l3 + Math.imul(X2, It3) | 0, s2 = s2 + Math.imul(X2, _t3) | 0, s2 = s2 + Math.imul(Z2, It3) | 0, v4 = v4 + Math.imul(Z2, _t3) | 0;
      var ni = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (ni >>> 26) | 0, ni &= 67108863, l3 = Math.imul(st2, bt3), s2 = Math.imul(st2, yt3), s2 = s2 + Math.imul(at2, bt3) | 0, v4 = Math.imul(at2, yt3), l3 = l3 + Math.imul(ft3, wt3) | 0, s2 = s2 + Math.imul(ft3, xt3) | 0, s2 = s2 + Math.imul(ot2, wt3) | 0, v4 = v4 + Math.imul(ot2, xt3) | 0, l3 = l3 + Math.imul(it3, Mt3) | 0, s2 = s2 + Math.imul(it3, Et3) | 0, s2 = s2 + Math.imul(nt3, Mt3) | 0, v4 = v4 + Math.imul(nt3, Et3) | 0, l3 = l3 + Math.imul(et2, St3) | 0, s2 = s2 + Math.imul(et2, Nt3) | 0, s2 = s2 + Math.imul(rt3, St3) | 0, v4 = v4 + Math.imul(rt3, Nt3) | 0, l3 = l3 + Math.imul($2, It3) | 0, s2 = s2 + Math.imul($2, _t3) | 0, s2 = s2 + Math.imul(tt2, It3) | 0, v4 = v4 + Math.imul(tt2, _t3) | 0;
      var fi = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (fi >>> 26) | 0, fi &= 67108863, l3 = Math.imul(st2, wt3), s2 = Math.imul(st2, xt3), s2 = s2 + Math.imul(at2, wt3) | 0, v4 = Math.imul(at2, xt3), l3 = l3 + Math.imul(ft3, Mt3) | 0, s2 = s2 + Math.imul(ft3, Et3) | 0, s2 = s2 + Math.imul(ot2, Mt3) | 0, v4 = v4 + Math.imul(ot2, Et3) | 0, l3 = l3 + Math.imul(it3, St3) | 0, s2 = s2 + Math.imul(it3, Nt3) | 0, s2 = s2 + Math.imul(nt3, St3) | 0, v4 = v4 + Math.imul(nt3, Nt3) | 0, l3 = l3 + Math.imul(et2, It3) | 0, s2 = s2 + Math.imul(et2, _t3) | 0, s2 = s2 + Math.imul(rt3, It3) | 0, v4 = v4 + Math.imul(rt3, _t3) | 0;
      var oi = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (oi >>> 26) | 0, oi &= 67108863, l3 = Math.imul(st2, Mt3), s2 = Math.imul(st2, Et3), s2 = s2 + Math.imul(at2, Mt3) | 0, v4 = Math.imul(at2, Et3), l3 = l3 + Math.imul(ft3, St3) | 0, s2 = s2 + Math.imul(ft3, Nt3) | 0, s2 = s2 + Math.imul(ot2, St3) | 0, v4 = v4 + Math.imul(ot2, Nt3) | 0, l3 = l3 + Math.imul(it3, It3) | 0, s2 = s2 + Math.imul(it3, _t3) | 0, s2 = s2 + Math.imul(nt3, It3) | 0, v4 = v4 + Math.imul(nt3, _t3) | 0;
      var si = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (si >>> 26) | 0, si &= 67108863, l3 = Math.imul(st2, St3), s2 = Math.imul(st2, Nt3), s2 = s2 + Math.imul(at2, St3) | 0, v4 = Math.imul(at2, Nt3), l3 = l3 + Math.imul(ft3, It3) | 0, s2 = s2 + Math.imul(ft3, _t3) | 0, s2 = s2 + Math.imul(ot2, It3) | 0, v4 = v4 + Math.imul(ot2, _t3) | 0;
      var ai = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      M2 = (v4 + (s2 >>> 13) | 0) + (ai >>> 26) | 0, ai &= 67108863, l3 = Math.imul(st2, It3), s2 = Math.imul(st2, _t3), s2 = s2 + Math.imul(at2, It3) | 0, v4 = Math.imul(at2, _t3);
      var ui = (M2 + l3 | 0) + ((s2 & 8191) << 13) | 0;
      return M2 = (v4 + (s2 >>> 13) | 0) + (ui >>> 26) | 0, ui &= 67108863, x4[0] = Me3, x4[1] = Ee2, x4[2] = Se3, x4[3] = Ne2, x4[4] = Ie2, x4[5] = Wr2, x4[6] = Xr2, x4[7] = Zr2, x4[8] = $r3, x4[9] = ti, x4[10] = ei2, x4[11] = ri, x4[12] = ii, x4[13] = ni, x4[14] = fi, x4[15] = oi, x4[16] = si, x4[17] = ai, x4[18] = ui, M2 !== 0 && (x4[19] = M2, c4.length++), c4;
    };
    Math.imul || (J2 = U3);
    function Bt3(A2, f4, a3) {
      a3.negative = f4.negative ^ A2.negative, a3.length = A2.length + f4.length;
      for (var c4 = 0, d3 = 0, g3 = 0; g3 < a3.length - 1; g3++) {
        var x4 = d3;
        d3 = 0;
        for (var M2 = c4 & 67108863, l3 = Math.min(g3, f4.length - 1), s2 = Math.max(0, g3 - A2.length + 1); s2 <= l3; s2++) {
          var v4 = g3 - s2, k5 = A2.words[v4] | 0, u3 = f4.words[s2] | 0, E4 = k5 * u3, _3 = E4 & 67108863;
          x4 = x4 + (E4 / 67108864 | 0) | 0, _3 = _3 + M2 | 0, M2 = _3 & 67108863, x4 = x4 + (_3 >>> 26) | 0, d3 += x4 >>> 26, x4 &= 67108863;
        }
        a3.words[g3] = M2, c4 = x4, x4 = d3;
      }
      return c4 !== 0 ? a3.words[g3] = c4 : a3.length--, a3._strip();
    }
    function G3(A2, f4, a3) {
      return Bt3(A2, f4, a3);
    }
    o2.prototype.mulTo = function(f4, a3) {
      var c4, d3 = this.length + f4.length;
      return this.length === 10 && f4.length === 10 ? c4 = J2(this, f4, a3) : d3 < 63 ? c4 = U3(this, f4, a3) : d3 < 1024 ? c4 = Bt3(this, f4, a3) : c4 = G3(this, f4, a3), c4;
    }, o2.prototype.mul = function(f4) {
      var a3 = new o2(null);
      return a3.words = new Array(this.length + f4.length), this.mulTo(f4, a3);
    }, o2.prototype.mulf = function(f4) {
      var a3 = new o2(null);
      return a3.words = new Array(this.length + f4.length), G3(this, f4, a3);
    }, o2.prototype.imul = function(f4) {
      return this.clone().mulTo(f4, this);
    }, o2.prototype.imuln = function(f4) {
      var a3 = f4 < 0;
      a3 && (f4 = -f4), i3(typeof f4 == "number"), i3(f4 < 67108864);
      for (var c4 = 0, d3 = 0; d3 < this.length; d3++) {
        var g3 = (this.words[d3] | 0) * f4, x4 = (g3 & 67108863) + (c4 & 67108863);
        c4 >>= 26, c4 += g3 / 67108864 | 0, c4 += x4 >>> 26, this.words[d3] = x4 & 67108863;
      }
      return c4 !== 0 && (this.words[d3] = c4, this.length++), a3 ? this.ineg() : this;
    }, o2.prototype.muln = function(f4) {
      return this.clone().imuln(f4);
    }, o2.prototype.sqr = function() {
      return this.mul(this);
    }, o2.prototype.isqr = function() {
      return this.imul(this.clone());
    }, o2.prototype.pow = function(f4) {
      var a3 = F2(f4);
      if (a3.length === 0) return new o2(1);
      for (var c4 = this, d3 = 0; d3 < a3.length && a3[d3] === 0; d3++, c4 = c4.sqr()) ;
      if (++d3 < a3.length) for (var g3 = c4.sqr(); d3 < a3.length; d3++, g3 = g3.sqr()) a3[d3] !== 0 && (c4 = c4.mul(g3));
      return c4;
    }, o2.prototype.iushln = function(f4) {
      i3(typeof f4 == "number" && f4 >= 0);
      var a3 = f4 % 26, c4 = (f4 - a3) / 26, d3 = 67108863 >>> 26 - a3 << 26 - a3, g3;
      if (a3 !== 0) {
        var x4 = 0;
        for (g3 = 0; g3 < this.length; g3++) {
          var M2 = this.words[g3] & d3, l3 = (this.words[g3] | 0) - M2 << a3;
          this.words[g3] = l3 | x4, x4 = M2 >>> 26 - a3;
        }
        x4 && (this.words[g3] = x4, this.length++);
      }
      if (c4 !== 0) {
        for (g3 = this.length - 1; g3 >= 0; g3--) this.words[g3 + c4] = this.words[g3];
        for (g3 = 0; g3 < c4; g3++) this.words[g3] = 0;
        this.length += c4;
      }
      return this._strip();
    }, o2.prototype.ishln = function(f4) {
      return i3(this.negative === 0), this.iushln(f4);
    }, o2.prototype.iushrn = function(f4, a3, c4) {
      i3(typeof f4 == "number" && f4 >= 0);
      var d3;
      a3 ? d3 = (a3 - a3 % 26) / 26 : d3 = 0;
      var g3 = f4 % 26, x4 = Math.min((f4 - g3) / 26, this.length), M2 = 67108863 ^ 67108863 >>> g3 << g3, l3 = c4;
      if (d3 -= x4, d3 = Math.max(0, d3), l3) {
        for (var s2 = 0; s2 < x4; s2++) l3.words[s2] = this.words[s2];
        l3.length = x4;
      }
      if (x4 !== 0) if (this.length > x4) for (this.length -= x4, s2 = 0; s2 < this.length; s2++) this.words[s2] = this.words[s2 + x4];
      else this.words[0] = 0, this.length = 1;
      var v4 = 0;
      for (s2 = this.length - 1; s2 >= 0 && (v4 !== 0 || s2 >= d3); s2--) {
        var k5 = this.words[s2] | 0;
        this.words[s2] = v4 << 26 - g3 | k5 >>> g3, v4 = k5 & M2;
      }
      return l3 && v4 !== 0 && (l3.words[l3.length++] = v4), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
    }, o2.prototype.ishrn = function(f4, a3, c4) {
      return i3(this.negative === 0), this.iushrn(f4, a3, c4);
    }, o2.prototype.shln = function(f4) {
      return this.clone().ishln(f4);
    }, o2.prototype.ushln = function(f4) {
      return this.clone().iushln(f4);
    }, o2.prototype.shrn = function(f4) {
      return this.clone().ishrn(f4);
    }, o2.prototype.ushrn = function(f4) {
      return this.clone().iushrn(f4);
    }, o2.prototype.testn = function(f4) {
      i3(typeof f4 == "number" && f4 >= 0);
      var a3 = f4 % 26, c4 = (f4 - a3) / 26, d3 = 1 << a3;
      if (this.length <= c4) return false;
      var g3 = this.words[c4];
      return !!(g3 & d3);
    }, o2.prototype.imaskn = function(f4) {
      i3(typeof f4 == "number" && f4 >= 0);
      var a3 = f4 % 26, c4 = (f4 - a3) / 26;
      if (i3(this.negative === 0, "imaskn works only with positive numbers"), this.length <= c4) return this;
      if (a3 !== 0 && c4++, this.length = Math.min(c4, this.length), a3 !== 0) {
        var d3 = 67108863 ^ 67108863 >>> a3 << a3;
        this.words[this.length - 1] &= d3;
      }
      return this._strip();
    }, o2.prototype.maskn = function(f4) {
      return this.clone().imaskn(f4);
    }, o2.prototype.iaddn = function(f4) {
      return i3(typeof f4 == "number"), i3(f4 < 67108864), f4 < 0 ? this.isubn(-f4) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= f4 ? (this.words[0] = f4 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(f4), this.negative = 1, this) : this._iaddn(f4);
    }, o2.prototype._iaddn = function(f4) {
      this.words[0] += f4;
      for (var a3 = 0; a3 < this.length && this.words[a3] >= 67108864; a3++) this.words[a3] -= 67108864, a3 === this.length - 1 ? this.words[a3 + 1] = 1 : this.words[a3 + 1]++;
      return this.length = Math.max(this.length, a3 + 1), this;
    }, o2.prototype.isubn = function(f4) {
      if (i3(typeof f4 == "number"), i3(f4 < 67108864), f4 < 0) return this.iaddn(-f4);
      if (this.negative !== 0) return this.negative = 0, this.iaddn(f4), this.negative = 1, this;
      if (this.words[0] -= f4, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
      else for (var a3 = 0; a3 < this.length && this.words[a3] < 0; a3++) this.words[a3] += 67108864, this.words[a3 + 1] -= 1;
      return this._strip();
    }, o2.prototype.addn = function(f4) {
      return this.clone().iaddn(f4);
    }, o2.prototype.subn = function(f4) {
      return this.clone().isubn(f4);
    }, o2.prototype.iabs = function() {
      return this.negative = 0, this;
    }, o2.prototype.abs = function() {
      return this.clone().iabs();
    }, o2.prototype._ishlnsubmul = function(f4, a3, c4) {
      var d3 = f4.length + c4, g3;
      this._expand(d3);
      var x4, M2 = 0;
      for (g3 = 0; g3 < f4.length; g3++) {
        x4 = (this.words[g3 + c4] | 0) + M2;
        var l3 = (f4.words[g3] | 0) * a3;
        x4 -= l3 & 67108863, M2 = (x4 >> 26) - (l3 / 67108864 | 0), this.words[g3 + c4] = x4 & 67108863;
      }
      for (; g3 < this.length - c4; g3++) x4 = (this.words[g3 + c4] | 0) + M2, M2 = x4 >> 26, this.words[g3 + c4] = x4 & 67108863;
      if (M2 === 0) return this._strip();
      for (i3(M2 === -1), M2 = 0, g3 = 0; g3 < this.length; g3++) x4 = -(this.words[g3] | 0) + M2, M2 = x4 >> 26, this.words[g3] = x4 & 67108863;
      return this.negative = 1, this._strip();
    }, o2.prototype._wordDiv = function(f4, a3) {
      var c4 = this.length - f4.length, d3 = this.clone(), g3 = f4, x4 = g3.words[g3.length - 1] | 0, M2 = this._countBits(x4);
      c4 = 26 - M2, c4 !== 0 && (g3 = g3.ushln(c4), d3.iushln(c4), x4 = g3.words[g3.length - 1] | 0);
      var l3 = d3.length - g3.length, s2;
      if (a3 !== "mod") {
        s2 = new o2(null), s2.length = l3 + 1, s2.words = new Array(s2.length);
        for (var v4 = 0; v4 < s2.length; v4++) s2.words[v4] = 0;
      }
      var k5 = d3.clone()._ishlnsubmul(g3, 1, l3);
      k5.negative === 0 && (d3 = k5, s2 && (s2.words[l3] = 1));
      for (var u3 = l3 - 1; u3 >= 0; u3--) {
        var E4 = (d3.words[g3.length + u3] | 0) * 67108864 + (d3.words[g3.length + u3 - 1] | 0);
        for (E4 = Math.min(E4 / x4 | 0, 67108863), d3._ishlnsubmul(g3, E4, u3); d3.negative !== 0; ) E4--, d3.negative = 0, d3._ishlnsubmul(g3, 1, u3), d3.isZero() || (d3.negative ^= 1);
        s2 && (s2.words[u3] = E4);
      }
      return s2 && s2._strip(), d3._strip(), a3 !== "div" && c4 !== 0 && d3.iushrn(c4), { div: s2 || null, mod: d3 };
    }, o2.prototype.divmod = function(f4, a3, c4) {
      if (i3(!f4.isZero()), this.isZero()) return { div: new o2(0), mod: new o2(0) };
      var d3, g3, x4;
      return this.negative !== 0 && f4.negative === 0 ? (x4 = this.neg().divmod(f4, a3), a3 !== "mod" && (d3 = x4.div.neg()), a3 !== "div" && (g3 = x4.mod.neg(), c4 && g3.negative !== 0 && g3.iadd(f4)), { div: d3, mod: g3 }) : this.negative === 0 && f4.negative !== 0 ? (x4 = this.divmod(f4.neg(), a3), a3 !== "mod" && (d3 = x4.div.neg()), { div: d3, mod: x4.mod }) : this.negative & f4.negative ? (x4 = this.neg().divmod(f4.neg(), a3), a3 !== "div" && (g3 = x4.mod.neg(), c4 && g3.negative !== 0 && g3.isub(f4)), { div: x4.div, mod: g3 }) : f4.length > this.length || this.cmp(f4) < 0 ? { div: new o2(0), mod: this } : f4.length === 1 ? a3 === "div" ? { div: this.divn(f4.words[0]), mod: null } : a3 === "mod" ? { div: null, mod: new o2(this.modrn(f4.words[0])) } : { div: this.divn(f4.words[0]), mod: new o2(this.modrn(f4.words[0])) } : this._wordDiv(f4, a3);
    }, o2.prototype.div = function(f4) {
      return this.divmod(f4, "div", false).div;
    }, o2.prototype.mod = function(f4) {
      return this.divmod(f4, "mod", false).mod;
    }, o2.prototype.umod = function(f4) {
      return this.divmod(f4, "mod", true).mod;
    }, o2.prototype.divRound = function(f4) {
      var a3 = this.divmod(f4);
      if (a3.mod.isZero()) return a3.div;
      var c4 = a3.div.negative !== 0 ? a3.mod.isub(f4) : a3.mod, d3 = f4.ushrn(1), g3 = f4.andln(1), x4 = c4.cmp(d3);
      return x4 < 0 || g3 === 1 && x4 === 0 ? a3.div : a3.div.negative !== 0 ? a3.div.isubn(1) : a3.div.iaddn(1);
    }, o2.prototype.modrn = function(f4) {
      var a3 = f4 < 0;
      a3 && (f4 = -f4), i3(f4 <= 67108863);
      for (var c4 = (1 << 26) % f4, d3 = 0, g3 = this.length - 1; g3 >= 0; g3--) d3 = (c4 * d3 + (this.words[g3] | 0)) % f4;
      return a3 ? -d3 : d3;
    }, o2.prototype.modn = function(f4) {
      return this.modrn(f4);
    }, o2.prototype.idivn = function(f4) {
      var a3 = f4 < 0;
      a3 && (f4 = -f4), i3(f4 <= 67108863);
      for (var c4 = 0, d3 = this.length - 1; d3 >= 0; d3--) {
        var g3 = (this.words[d3] | 0) + c4 * 67108864;
        this.words[d3] = g3 / f4 | 0, c4 = g3 % f4;
      }
      return this._strip(), a3 ? this.ineg() : this;
    }, o2.prototype.divn = function(f4) {
      return this.clone().idivn(f4);
    }, o2.prototype.egcd = function(f4) {
      i3(f4.negative === 0), i3(!f4.isZero());
      var a3 = this, c4 = f4.clone();
      a3.negative !== 0 ? a3 = a3.umod(f4) : a3 = a3.clone();
      for (var d3 = new o2(1), g3 = new o2(0), x4 = new o2(0), M2 = new o2(1), l3 = 0; a3.isEven() && c4.isEven(); ) a3.iushrn(1), c4.iushrn(1), ++l3;
      for (var s2 = c4.clone(), v4 = a3.clone(); !a3.isZero(); ) {
        for (var k5 = 0, u3 = 1; !(a3.words[0] & u3) && k5 < 26; ++k5, u3 <<= 1) ;
        if (k5 > 0) for (a3.iushrn(k5); k5-- > 0; ) (d3.isOdd() || g3.isOdd()) && (d3.iadd(s2), g3.isub(v4)), d3.iushrn(1), g3.iushrn(1);
        for (var E4 = 0, _3 = 1; !(c4.words[0] & _3) && E4 < 26; ++E4, _3 <<= 1) ;
        if (E4 > 0) for (c4.iushrn(E4); E4-- > 0; ) (x4.isOdd() || M2.isOdd()) && (x4.iadd(s2), M2.isub(v4)), x4.iushrn(1), M2.iushrn(1);
        a3.cmp(c4) >= 0 ? (a3.isub(c4), d3.isub(x4), g3.isub(M2)) : (c4.isub(a3), x4.isub(d3), M2.isub(g3));
      }
      return { a: x4, b: M2, gcd: c4.iushln(l3) };
    }, o2.prototype._invmp = function(f4) {
      i3(f4.negative === 0), i3(!f4.isZero());
      var a3 = this, c4 = f4.clone();
      a3.negative !== 0 ? a3 = a3.umod(f4) : a3 = a3.clone();
      for (var d3 = new o2(1), g3 = new o2(0), x4 = c4.clone(); a3.cmpn(1) > 0 && c4.cmpn(1) > 0; ) {
        for (var M2 = 0, l3 = 1; !(a3.words[0] & l3) && M2 < 26; ++M2, l3 <<= 1) ;
        if (M2 > 0) for (a3.iushrn(M2); M2-- > 0; ) d3.isOdd() && d3.iadd(x4), d3.iushrn(1);
        for (var s2 = 0, v4 = 1; !(c4.words[0] & v4) && s2 < 26; ++s2, v4 <<= 1) ;
        if (s2 > 0) for (c4.iushrn(s2); s2-- > 0; ) g3.isOdd() && g3.iadd(x4), g3.iushrn(1);
        a3.cmp(c4) >= 0 ? (a3.isub(c4), d3.isub(g3)) : (c4.isub(a3), g3.isub(d3));
      }
      var k5;
      return a3.cmpn(1) === 0 ? k5 = d3 : k5 = g3, k5.cmpn(0) < 0 && k5.iadd(f4), k5;
    }, o2.prototype.gcd = function(f4) {
      if (this.isZero()) return f4.abs();
      if (f4.isZero()) return this.abs();
      var a3 = this.clone(), c4 = f4.clone();
      a3.negative = 0, c4.negative = 0;
      for (var d3 = 0; a3.isEven() && c4.isEven(); d3++) a3.iushrn(1), c4.iushrn(1);
      do {
        for (; a3.isEven(); ) a3.iushrn(1);
        for (; c4.isEven(); ) c4.iushrn(1);
        var g3 = a3.cmp(c4);
        if (g3 < 0) {
          var x4 = a3;
          a3 = c4, c4 = x4;
        } else if (g3 === 0 || c4.cmpn(1) === 0) break;
        a3.isub(c4);
      } while (true);
      return c4.iushln(d3);
    }, o2.prototype.invm = function(f4) {
      return this.egcd(f4).a.umod(f4);
    }, o2.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, o2.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, o2.prototype.andln = function(f4) {
      return this.words[0] & f4;
    }, o2.prototype.bincn = function(f4) {
      i3(typeof f4 == "number");
      var a3 = f4 % 26, c4 = (f4 - a3) / 26, d3 = 1 << a3;
      if (this.length <= c4) return this._expand(c4 + 1), this.words[c4] |= d3, this;
      for (var g3 = d3, x4 = c4; g3 !== 0 && x4 < this.length; x4++) {
        var M2 = this.words[x4] | 0;
        M2 += g3, g3 = M2 >>> 26, M2 &= 67108863, this.words[x4] = M2;
      }
      return g3 !== 0 && (this.words[x4] = g3, this.length++), this;
    }, o2.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, o2.prototype.cmpn = function(f4) {
      var a3 = f4 < 0;
      if (this.negative !== 0 && !a3) return -1;
      if (this.negative === 0 && a3) return 1;
      this._strip();
      var c4;
      if (this.length > 1) c4 = 1;
      else {
        a3 && (f4 = -f4), i3(f4 <= 67108863, "Number is too big");
        var d3 = this.words[0] | 0;
        c4 = d3 === f4 ? 0 : d3 < f4 ? -1 : 1;
      }
      return this.negative !== 0 ? -c4 | 0 : c4;
    }, o2.prototype.cmp = function(f4) {
      if (this.negative !== 0 && f4.negative === 0) return -1;
      if (this.negative === 0 && f4.negative !== 0) return 1;
      var a3 = this.ucmp(f4);
      return this.negative !== 0 ? -a3 | 0 : a3;
    }, o2.prototype.ucmp = function(f4) {
      if (this.length > f4.length) return 1;
      if (this.length < f4.length) return -1;
      for (var a3 = 0, c4 = this.length - 1; c4 >= 0; c4--) {
        var d3 = this.words[c4] | 0, g3 = f4.words[c4] | 0;
        if (d3 !== g3) {
          d3 < g3 ? a3 = -1 : d3 > g3 && (a3 = 1);
          break;
        }
      }
      return a3;
    }, o2.prototype.gtn = function(f4) {
      return this.cmpn(f4) === 1;
    }, o2.prototype.gt = function(f4) {
      return this.cmp(f4) === 1;
    }, o2.prototype.gten = function(f4) {
      return this.cmpn(f4) >= 0;
    }, o2.prototype.gte = function(f4) {
      return this.cmp(f4) >= 0;
    }, o2.prototype.ltn = function(f4) {
      return this.cmpn(f4) === -1;
    }, o2.prototype.lt = function(f4) {
      return this.cmp(f4) === -1;
    }, o2.prototype.lten = function(f4) {
      return this.cmpn(f4) <= 0;
    }, o2.prototype.lte = function(f4) {
      return this.cmp(f4) <= 0;
    }, o2.prototype.eqn = function(f4) {
      return this.cmpn(f4) === 0;
    }, o2.prototype.eq = function(f4) {
      return this.cmp(f4) === 0;
    }, o2.red = function(f4) {
      return new Y(f4);
    }, o2.prototype.toRed = function(f4) {
      return i3(!this.red, "Already a number in reduction context"), i3(this.negative === 0, "red works only with positives"), f4.convertTo(this)._forceRed(f4);
    }, o2.prototype.fromRed = function() {
      return i3(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, o2.prototype._forceRed = function(f4) {
      return this.red = f4, this;
    }, o2.prototype.forceRed = function(f4) {
      return i3(!this.red, "Already a number in reduction context"), this._forceRed(f4);
    }, o2.prototype.redAdd = function(f4) {
      return i3(this.red, "redAdd works only with red numbers"), this.red.add(this, f4);
    }, o2.prototype.redIAdd = function(f4) {
      return i3(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, f4);
    }, o2.prototype.redSub = function(f4) {
      return i3(this.red, "redSub works only with red numbers"), this.red.sub(this, f4);
    }, o2.prototype.redISub = function(f4) {
      return i3(this.red, "redISub works only with red numbers"), this.red.isub(this, f4);
    }, o2.prototype.redShl = function(f4) {
      return i3(this.red, "redShl works only with red numbers"), this.red.shl(this, f4);
    }, o2.prototype.redMul = function(f4) {
      return i3(this.red, "redMul works only with red numbers"), this.red._verify2(this, f4), this.red.mul(this, f4);
    }, o2.prototype.redIMul = function(f4) {
      return i3(this.red, "redMul works only with red numbers"), this.red._verify2(this, f4), this.red.imul(this, f4);
    }, o2.prototype.redSqr = function() {
      return i3(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, o2.prototype.redISqr = function() {
      return i3(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, o2.prototype.redSqrt = function() {
      return i3(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, o2.prototype.redInvm = function() {
      return i3(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, o2.prototype.redNeg = function() {
      return i3(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, o2.prototype.redPow = function(f4) {
      return i3(this.red && !f4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, f4);
    };
    var H2 = { k256: null, p224: null, p192: null, p25519: null };
    function z4(A2, f4) {
      this.name = A2, this.p = new o2(f4, 16), this.n = this.p.bitLength(), this.k = new o2(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    z4.prototype._tmp = function() {
      var f4 = new o2(null);
      return f4.words = new Array(Math.ceil(this.n / 13)), f4;
    }, z4.prototype.ireduce = function(f4) {
      var a3 = f4, c4;
      do
        this.split(a3, this.tmp), a3 = this.imulK(a3), a3 = a3.iadd(this.tmp), c4 = a3.bitLength();
      while (c4 > this.n);
      var d3 = c4 < this.n ? -1 : a3.ucmp(this.p);
      return d3 === 0 ? (a3.words[0] = 0, a3.length = 1) : d3 > 0 ? a3.isub(this.p) : a3.strip !== void 0 ? a3.strip() : a3._strip(), a3;
    }, z4.prototype.split = function(f4, a3) {
      f4.iushrn(this.n, 0, a3);
    }, z4.prototype.imulK = function(f4) {
      return f4.imul(this.k);
    };
    function Pt3() {
      z4.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    n4(Pt3, z4), Pt3.prototype.split = function(f4, a3) {
      for (var c4 = 4194303, d3 = Math.min(f4.length, 9), g3 = 0; g3 < d3; g3++) a3.words[g3] = f4.words[g3];
      if (a3.length = d3, f4.length <= 9) {
        f4.words[0] = 0, f4.length = 1;
        return;
      }
      var x4 = f4.words[9];
      for (a3.words[a3.length++] = x4 & c4, g3 = 10; g3 < f4.length; g3++) {
        var M2 = f4.words[g3] | 0;
        f4.words[g3 - 10] = (M2 & c4) << 4 | x4 >>> 22, x4 = M2;
      }
      x4 >>>= 22, f4.words[g3 - 10] = x4, x4 === 0 && f4.length > 10 ? f4.length -= 10 : f4.length -= 9;
    }, Pt3.prototype.imulK = function(f4) {
      f4.words[f4.length] = 0, f4.words[f4.length + 1] = 0, f4.length += 2;
      for (var a3 = 0, c4 = 0; c4 < f4.length; c4++) {
        var d3 = f4.words[c4] | 0;
        a3 += d3 * 977, f4.words[c4] = a3 & 67108863, a3 = d3 * 64 + (a3 / 67108864 | 0);
      }
      return f4.words[f4.length - 1] === 0 && (f4.length--, f4.words[f4.length - 1] === 0 && f4.length--), f4;
    };
    function W3() {
      z4.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    n4(W3, z4);
    function Rt3() {
      z4.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    n4(Rt3, z4);
    function Yt3() {
      z4.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    n4(Yt3, z4), Yt3.prototype.imulK = function(f4) {
      for (var a3 = 0, c4 = 0; c4 < f4.length; c4++) {
        var d3 = (f4.words[c4] | 0) * 19 + a3, g3 = d3 & 67108863;
        d3 >>>= 26, f4.words[c4] = g3, a3 = d3;
      }
      return a3 !== 0 && (f4.words[f4.length++] = a3), f4;
    }, o2._prime = function(f4) {
      if (H2[f4]) return H2[f4];
      var a3;
      if (f4 === "k256") a3 = new Pt3();
      else if (f4 === "p224") a3 = new W3();
      else if (f4 === "p192") a3 = new Rt3();
      else if (f4 === "p25519") a3 = new Yt3();
      else throw new Error("Unknown prime " + f4);
      return H2[f4] = a3, a3;
    };
    function Y(A2) {
      if (typeof A2 == "string") {
        var f4 = o2._prime(A2);
        this.m = f4.p, this.prime = f4;
      } else i3(A2.gtn(1), "modulus must be greater than 1"), this.m = A2, this.prime = null;
    }
    Y.prototype._verify1 = function(f4) {
      i3(f4.negative === 0, "red works only with positives"), i3(f4.red, "red works only with red numbers");
    }, Y.prototype._verify2 = function(f4, a3) {
      i3((f4.negative | a3.negative) === 0, "red works only with positives"), i3(f4.red && f4.red === a3.red, "red works only with red numbers");
    }, Y.prototype.imod = function(f4) {
      return this.prime ? this.prime.ireduce(f4)._forceRed(this) : (w4(f4, f4.umod(this.m)._forceRed(this)), f4);
    }, Y.prototype.neg = function(f4) {
      return f4.isZero() ? f4.clone() : this.m.sub(f4)._forceRed(this);
    }, Y.prototype.add = function(f4, a3) {
      this._verify2(f4, a3);
      var c4 = f4.add(a3);
      return c4.cmp(this.m) >= 0 && c4.isub(this.m), c4._forceRed(this);
    }, Y.prototype.iadd = function(f4, a3) {
      this._verify2(f4, a3);
      var c4 = f4.iadd(a3);
      return c4.cmp(this.m) >= 0 && c4.isub(this.m), c4;
    }, Y.prototype.sub = function(f4, a3) {
      this._verify2(f4, a3);
      var c4 = f4.sub(a3);
      return c4.cmpn(0) < 0 && c4.iadd(this.m), c4._forceRed(this);
    }, Y.prototype.isub = function(f4, a3) {
      this._verify2(f4, a3);
      var c4 = f4.isub(a3);
      return c4.cmpn(0) < 0 && c4.iadd(this.m), c4;
    }, Y.prototype.shl = function(f4, a3) {
      return this._verify1(f4), this.imod(f4.ushln(a3));
    }, Y.prototype.imul = function(f4, a3) {
      return this._verify2(f4, a3), this.imod(f4.imul(a3));
    }, Y.prototype.mul = function(f4, a3) {
      return this._verify2(f4, a3), this.imod(f4.mul(a3));
    }, Y.prototype.isqr = function(f4) {
      return this.imul(f4, f4.clone());
    }, Y.prototype.sqr = function(f4) {
      return this.mul(f4, f4);
    }, Y.prototype.sqrt = function(f4) {
      if (f4.isZero()) return f4.clone();
      var a3 = this.m.andln(3);
      if (i3(a3 % 2 === 1), a3 === 3) {
        var c4 = this.m.add(new o2(1)).iushrn(2);
        return this.pow(f4, c4);
      }
      for (var d3 = this.m.subn(1), g3 = 0; !d3.isZero() && d3.andln(1) === 0; ) g3++, d3.iushrn(1);
      i3(!d3.isZero());
      var x4 = new o2(1).toRed(this), M2 = x4.redNeg(), l3 = this.m.subn(1).iushrn(1), s2 = this.m.bitLength();
      for (s2 = new o2(2 * s2 * s2).toRed(this); this.pow(s2, l3).cmp(M2) !== 0; ) s2.redIAdd(M2);
      for (var v4 = this.pow(s2, d3), k5 = this.pow(f4, d3.addn(1).iushrn(1)), u3 = this.pow(f4, d3), E4 = g3; u3.cmp(x4) !== 0; ) {
        for (var _3 = u3, B2 = 0; _3.cmp(x4) !== 0; B2++) _3 = _3.redSqr();
        i3(B2 < E4);
        var R = this.pow(v4, new o2(1).iushln(E4 - B2 - 1));
        k5 = k5.redMul(R), v4 = R.redSqr(), u3 = u3.redMul(v4), E4 = B2;
      }
      return k5;
    }, Y.prototype.invm = function(f4) {
      var a3 = f4._invmp(this.m);
      return a3.negative !== 0 ? (a3.negative = 0, this.imod(a3).redNeg()) : this.imod(a3);
    }, Y.prototype.pow = function(f4, a3) {
      if (a3.isZero()) return new o2(1).toRed(this);
      if (a3.cmpn(1) === 0) return f4.clone();
      var c4 = 4, d3 = new Array(1 << c4);
      d3[0] = new o2(1).toRed(this), d3[1] = f4;
      for (var g3 = 2; g3 < d3.length; g3++) d3[g3] = this.mul(d3[g3 - 1], f4);
      var x4 = d3[0], M2 = 0, l3 = 0, s2 = a3.bitLength() % 26;
      for (s2 === 0 && (s2 = 26), g3 = a3.length - 1; g3 >= 0; g3--) {
        for (var v4 = a3.words[g3], k5 = s2 - 1; k5 >= 0; k5--) {
          var u3 = v4 >> k5 & 1;
          if (x4 !== d3[0] && (x4 = this.sqr(x4)), u3 === 0 && M2 === 0) {
            l3 = 0;
            continue;
          }
          M2 <<= 1, M2 |= u3, l3++, !(l3 !== c4 && (g3 !== 0 || k5 !== 0)) && (x4 = this.mul(x4, d3[M2]), l3 = 0, M2 = 0);
        }
        s2 = 26;
      }
      return x4;
    }, Y.prototype.convertTo = function(f4) {
      var a3 = f4.umod(this.m);
      return a3 === f4 ? a3.clone() : a3;
    }, Y.prototype.convertFrom = function(f4) {
      var a3 = f4.clone();
      return a3.red = null, a3;
    }, o2.mont = function(f4) {
      return new Vt3(f4);
    };
    function Vt3(A2) {
      Y.call(this, A2), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o2(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    n4(Vt3, Y), Vt3.prototype.convertTo = function(f4) {
      return this.imod(f4.ushln(this.shift));
    }, Vt3.prototype.convertFrom = function(f4) {
      var a3 = this.imod(f4.mul(this.rinv));
      return a3.red = null, a3;
    }, Vt3.prototype.imul = function(f4, a3) {
      if (f4.isZero() || a3.isZero()) return f4.words[0] = 0, f4.length = 1, f4;
      var c4 = f4.imul(a3), d3 = c4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), g3 = c4.isub(d3).iushrn(this.shift), x4 = g3;
      return g3.cmp(this.m) >= 0 ? x4 = g3.isub(this.m) : g3.cmpn(0) < 0 && (x4 = g3.iadd(this.m)), x4._forceRed(this);
    }, Vt3.prototype.mul = function(f4, a3) {
      if (f4.isZero() || a3.isZero()) return new o2(0)._forceRed(this);
      var c4 = f4.mul(a3), d3 = c4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), g3 = c4.isub(d3).iushrn(this.shift), x4 = g3;
      return g3.cmp(this.m) >= 0 ? x4 = g3.isub(this.m) : g3.cmpn(0) < 0 && (x4 = g3.iadd(this.m)), x4._forceRed(this);
    }, Vt3.prototype.invm = function(f4) {
      var a3 = this.imod(f4._invmp(this.m).mul(this.r2));
      return a3._forceRed(this);
    };
  })(e2, On);
})(Ln);
var K = Ln.exports;
var jn = "bignumber/5.7.0";
var Rr = K.BN;
var Ae = new L(jn);
var wi = {};
var Qn = 9007199254740991;
function C0(e2) {
  return e2 != null && (V.isBigNumber(e2) || typeof e2 == "number" && e2 % 1 === 0 || typeof e2 == "string" && !!e2.match(/^-?[0-9]+$/) || Qt(e2) || typeof e2 == "bigint" || ir(e2));
}
var Jn = false;
var V = class _V {
  constructor(t, r2) {
    t !== wi && Ae.throwError("cannot call constructor directly; use BigNumber.from", L.errors.UNSUPPORTED_OPERATION, { operation: "new (BigNumber)" }), this._hex = r2, this._isBigNumber = true, Object.freeze(this);
  }
  fromTwos(t) {
    return Lt(j(this).fromTwos(t));
  }
  toTwos(t) {
    return Lt(j(this).toTwos(t));
  }
  abs() {
    return this._hex[0] === "-" ? _V.from(this._hex.substring(1)) : this;
  }
  add(t) {
    return Lt(j(this).add(j(t)));
  }
  sub(t) {
    return Lt(j(this).sub(j(t)));
  }
  div(t) {
    return _V.from(t).isZero() && Wt("division-by-zero", "div"), Lt(j(this).div(j(t)));
  }
  mul(t) {
    return Lt(j(this).mul(j(t)));
  }
  mod(t) {
    const r2 = j(t);
    return r2.isNeg() && Wt("division-by-zero", "mod"), Lt(j(this).umod(r2));
  }
  pow(t) {
    const r2 = j(t);
    return r2.isNeg() && Wt("negative-power", "pow"), Lt(j(this).pow(r2));
  }
  and(t) {
    const r2 = j(t);
    return (this.isNegative() || r2.isNeg()) && Wt("unbound-bitwise-result", "and"), Lt(j(this).and(r2));
  }
  or(t) {
    const r2 = j(t);
    return (this.isNegative() || r2.isNeg()) && Wt("unbound-bitwise-result", "or"), Lt(j(this).or(r2));
  }
  xor(t) {
    const r2 = j(t);
    return (this.isNegative() || r2.isNeg()) && Wt("unbound-bitwise-result", "xor"), Lt(j(this).xor(r2));
  }
  mask(t) {
    return (this.isNegative() || t < 0) && Wt("negative-width", "mask"), Lt(j(this).maskn(t));
  }
  shl(t) {
    return (this.isNegative() || t < 0) && Wt("negative-width", "shl"), Lt(j(this).shln(t));
  }
  shr(t) {
    return (this.isNegative() || t < 0) && Wt("negative-width", "shr"), Lt(j(this).shrn(t));
  }
  eq(t) {
    return j(this).eq(j(t));
  }
  lt(t) {
    return j(this).lt(j(t));
  }
  lte(t) {
    return j(this).lte(j(t));
  }
  gt(t) {
    return j(this).gt(j(t));
  }
  gte(t) {
    return j(this).gte(j(t));
  }
  isNegative() {
    return this._hex[0] === "-";
  }
  isZero() {
    return j(this).isZero();
  }
  toNumber() {
    try {
      return j(this).toNumber();
    } catch {
      Wt("overflow", "toNumber", this.toString());
    }
    return null;
  }
  toBigInt() {
    try {
      return BigInt(this.toString());
    } catch {
    }
    return Ae.throwError("this platform does not support BigInt", L.errors.UNSUPPORTED_OPERATION, { value: this.toString() });
  }
  toString() {
    return arguments.length > 0 && (arguments[0] === 10 ? Jn || (Jn = true, Ae.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : arguments[0] === 16 ? Ae.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", L.errors.UNEXPECTED_ARGUMENT, {}) : Ae.throwError("BigNumber.toString does not accept parameters", L.errors.UNEXPECTED_ARGUMENT, {})), j(this).toString(10);
  }
  toHexString() {
    return this._hex;
  }
  toJSON(t) {
    return { type: "BigNumber", hex: this.toHexString() };
  }
  static from(t) {
    if (t instanceof _V) return t;
    if (typeof t == "string") return t.match(/^-?0x[0-9a-f]+$/i) ? new _V(wi, vr(t)) : t.match(/^-?[0-9]+$/) ? new _V(wi, vr(new Rr(t))) : Ae.throwArgumentError("invalid BigNumber string", "value", t);
    if (typeof t == "number") return t % 1 && Wt("underflow", "BigNumber.from", t), (t >= Qn || t <= -Qn) && Wt("overflow", "BigNumber.from", t), _V.from(String(t));
    const r2 = t;
    if (typeof r2 == "bigint") return _V.from(r2.toString());
    if (ir(r2)) return _V.from(Kt(r2));
    if (r2) if (r2.toHexString) {
      const i3 = r2.toHexString();
      if (typeof i3 == "string") return _V.from(i3);
    } else {
      let i3 = r2._hex;
      if (i3 == null && r2.type === "BigNumber" && (i3 = r2.hex), typeof i3 == "string" && (Qt(i3) || i3[0] === "-" && Qt(i3.substring(1)))) return _V.from(i3);
    }
    return Ae.throwArgumentError("invalid BigNumber value", "value", t);
  }
  static isBigNumber(t) {
    return !!(t && t._isBigNumber);
  }
};
function vr(e2) {
  if (typeof e2 != "string") return vr(e2.toString(16));
  if (e2[0] === "-") return e2 = e2.substring(1), e2[0] === "-" && Ae.throwArgumentError("invalid hex", "value", e2), e2 = vr(e2), e2 === "0x00" ? e2 : "-" + e2;
  if (e2.substring(0, 2) !== "0x" && (e2 = "0x" + e2), e2 === "0x") return "0x00";
  for (e2.length % 2 && (e2 = "0x0" + e2.substring(2)); e2.length > 4 && e2.substring(0, 4) === "0x00"; ) e2 = "0x" + e2.substring(4);
  return e2;
}
function Lt(e2) {
  return V.from(vr(e2));
}
function j(e2) {
  const t = V.from(e2).toHexString();
  return t[0] === "-" ? new Rr("-" + t.substring(3), 16) : new Rr(t.substring(2), 16);
}
function Wt(e2, t, r2) {
  const i3 = { fault: e2, operation: t };
  return r2 != null && (i3.value = r2), Ae.throwError(e2, L.errors.NUMERIC_FAULT, i3);
}
function R0(e2) {
  return new Rr(e2, 36).toString(16);
}
var Ht = new L(jn);
var mr = {};
var Gn = V.from(0);
var Yn = V.from(-1);
function Vn(e2, t, r2, i3) {
  const n4 = { fault: t, operation: r2 };
  return i3 !== void 0 && (n4.value = i3), Ht.throwError(e2, L.errors.NUMERIC_FAULT, n4);
}
var gr = "0";
for (; gr.length < 256; ) gr += gr;
function xi(e2) {
  if (typeof e2 != "number") try {
    e2 = V.from(e2).toNumber();
  } catch {
  }
  return typeof e2 == "number" && e2 >= 0 && e2 <= 256 && !(e2 % 1) ? "1" + gr.substring(0, e2) : Ht.throwArgumentError("invalid decimal size", "decimals", e2);
}
function Mi(e2, t) {
  t == null && (t = 0);
  const r2 = xi(t);
  e2 = V.from(e2);
  const i3 = e2.lt(Gn);
  i3 && (e2 = e2.mul(Yn));
  let n4 = e2.mod(r2).toString();
  for (; n4.length < r2.length - 1; ) n4 = "0" + n4;
  n4 = n4.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  const o2 = e2.div(r2).toString();
  return r2.length === 1 ? e2 = o2 : e2 = o2 + "." + n4, i3 && (e2 = "-" + e2), e2;
}
function be(e2, t) {
  t == null && (t = 0);
  const r2 = xi(t);
  (typeof e2 != "string" || !e2.match(/^-?[0-9.]+$/)) && Ht.throwArgumentError("invalid decimal value", "value", e2);
  const i3 = e2.substring(0, 1) === "-";
  i3 && (e2 = e2.substring(1)), e2 === "." && Ht.throwArgumentError("missing value", "value", e2);
  const n4 = e2.split(".");
  n4.length > 2 && Ht.throwArgumentError("too many decimal points", "value", e2);
  let o2 = n4[0], h5 = n4[1];
  for (o2 || (o2 = "0"), h5 || (h5 = "0"); h5[h5.length - 1] === "0"; ) h5 = h5.substring(0, h5.length - 1);
  for (h5.length > r2.length - 1 && Vn("fractional component exceeds decimals", "underflow", "parseFixed"), h5 === "" && (h5 = "0"); h5.length < r2.length - 1; ) h5 += "0";
  const p3 = V.from(o2), b4 = V.from(h5);
  let m2 = p3.mul(r2).add(b4);
  return i3 && (m2 = m2.mul(Yn)), m2;
}
var dr = class _dr {
  constructor(t, r2, i3, n4) {
    t !== mr && Ht.throwError("cannot use FixedFormat constructor; use FixedFormat.from", L.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.signed = r2, this.width = i3, this.decimals = n4, this.name = (r2 ? "" : "u") + "fixed" + String(i3) + "x" + String(n4), this._multiplier = xi(n4), Object.freeze(this);
  }
  static from(t) {
    if (t instanceof _dr) return t;
    typeof t == "number" && (t = `fixed128x${t}`);
    let r2 = true, i3 = 128, n4 = 18;
    if (typeof t == "string") {
      if (t !== "fixed") if (t === "ufixed") r2 = false;
      else {
        const o2 = t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
        o2 || Ht.throwArgumentError("invalid fixed format", "format", t), r2 = o2[1] !== "u", i3 = parseInt(o2[2]), n4 = parseInt(o2[3]);
      }
    } else if (t) {
      const o2 = (h5, p3, b4) => t[h5] == null ? b4 : (typeof t[h5] !== p3 && Ht.throwArgumentError("invalid fixed format (" + h5 + " not " + p3 + ")", "format." + h5, t[h5]), t[h5]);
      r2 = o2("signed", "boolean", r2), i3 = o2("width", "number", i3), n4 = o2("decimals", "number", n4);
    }
    return i3 % 8 && Ht.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", i3), n4 > 80 && Ht.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", n4), new _dr(mr, r2, i3, n4);
  }
};
var Ut = class _Ut {
  constructor(t, r2, i3, n4) {
    t !== mr && Ht.throwError("cannot use FixedNumber constructor; use FixedNumber.from", L.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.format = n4, this._hex = r2, this._value = i3, this._isFixedNumber = true, Object.freeze(this);
  }
  _checkFormat(t) {
    this.format.name !== t.format.name && Ht.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", t);
  }
  addUnsafe(t) {
    this._checkFormat(t);
    const r2 = be(this._value, this.format.decimals), i3 = be(t._value, t.format.decimals);
    return _Ut.fromValue(r2.add(i3), this.format.decimals, this.format);
  }
  subUnsafe(t) {
    this._checkFormat(t);
    const r2 = be(this._value, this.format.decimals), i3 = be(t._value, t.format.decimals);
    return _Ut.fromValue(r2.sub(i3), this.format.decimals, this.format);
  }
  mulUnsafe(t) {
    this._checkFormat(t);
    const r2 = be(this._value, this.format.decimals), i3 = be(t._value, t.format.decimals);
    return _Ut.fromValue(r2.mul(i3).div(this.format._multiplier), this.format.decimals, this.format);
  }
  divUnsafe(t) {
    this._checkFormat(t);
    const r2 = be(this._value, this.format.decimals), i3 = be(t._value, t.format.decimals);
    return _Ut.fromValue(r2.mul(this.format._multiplier).div(i3), this.format.decimals, this.format);
  }
  floor() {
    const t = this.toString().split(".");
    t.length === 1 && t.push("0");
    let r2 = _Ut.from(t[0], this.format);
    const i3 = !t[1].match(/^(0*)$/);
    return this.isNegative() && i3 && (r2 = r2.subUnsafe(Wn.toFormat(r2.format))), r2;
  }
  ceiling() {
    const t = this.toString().split(".");
    t.length === 1 && t.push("0");
    let r2 = _Ut.from(t[0], this.format);
    const i3 = !t[1].match(/^(0*)$/);
    return !this.isNegative() && i3 && (r2 = r2.addUnsafe(Wn.toFormat(r2.format))), r2;
  }
  round(t) {
    t == null && (t = 0);
    const r2 = this.toString().split(".");
    if (r2.length === 1 && r2.push("0"), (t < 0 || t > 80 || t % 1) && Ht.throwArgumentError("invalid decimal count", "decimals", t), r2[1].length <= t) return this;
    const i3 = _Ut.from("1" + gr.substring(0, t), this.format), n4 = O0.toFormat(this.format);
    return this.mulUnsafe(i3).addUnsafe(n4).floor().divUnsafe(i3);
  }
  isZero() {
    return this._value === "0.0" || this._value === "0";
  }
  isNegative() {
    return this._value[0] === "-";
  }
  toString() {
    return this._value;
  }
  toHexString(t) {
    if (t == null) return this._hex;
    t % 8 && Ht.throwArgumentError("invalid byte width", "width", t);
    const r2 = V.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();
    return oe(r2, t / 8);
  }
  toUnsafeFloat() {
    return parseFloat(this.toString());
  }
  toFormat(t) {
    return _Ut.fromString(this._value, t);
  }
  static fromValue(t, r2, i3) {
    return i3 == null && r2 != null && !C0(r2) && (i3 = r2, r2 = null), r2 == null && (r2 = 0), i3 == null && (i3 = "fixed"), _Ut.fromString(Mi(t, r2), dr.from(i3));
  }
  static fromString(t, r2) {
    r2 == null && (r2 = "fixed");
    const i3 = dr.from(r2), n4 = be(t, i3.decimals);
    !i3.signed && n4.lt(Gn) && Vn("unsigned value cannot be negative", "overflow", "value", t);
    let o2 = null;
    i3.signed ? o2 = n4.toTwos(i3.width).toHexString() : (o2 = n4.toHexString(), o2 = oe(o2, i3.width / 8));
    const h5 = Mi(n4, i3.decimals);
    return new _Ut(mr, o2, h5, i3);
  }
  static fromBytes(t, r2) {
    r2 == null && (r2 = "fixed");
    const i3 = dr.from(r2);
    if (Ot(t).length > i3.width / 8) throw new Error("overflow");
    let n4 = V.from(t);
    i3.signed && (n4 = n4.fromTwos(i3.width));
    const o2 = n4.toTwos((i3.signed ? 0 : 1) + i3.width).toHexString(), h5 = Mi(n4, i3.decimals);
    return new _Ut(mr, o2, h5, i3);
  }
  static from(t, r2) {
    if (typeof t == "string") return _Ut.fromString(t, r2);
    if (ir(t)) return _Ut.fromBytes(t, r2);
    try {
      return _Ut.fromValue(t, 0, r2);
    } catch (i3) {
      if (i3.code !== L.errors.INVALID_ARGUMENT) throw i3;
    }
    return Ht.throwArgumentError("invalid FixedNumber value", "value", t);
  }
  static isFixedNumber(t) {
    return !!(t && t._isFixedNumber);
  }
};
var Wn = Ut.from(1);
var O0 = Ut.from("0.5");
var P0 = "strings/5.7.0";
var Xn = new L(P0);
var Or;
(function(e2) {
  e2.current = "", e2.NFC = "NFC", e2.NFD = "NFD", e2.NFKC = "NFKC", e2.NFKD = "NFKD";
})(Or || (Or = {}));
var nr;
(function(e2) {
  e2.UNEXPECTED_CONTINUE = "unexpected continuation byte", e2.BAD_PREFIX = "bad codepoint prefix", e2.OVERRUN = "string overrun", e2.MISSING_CONTINUE = "missing continuation byte", e2.OUT_OF_RANGE = "out of UTF-8 range", e2.UTF16_SURROGATE = "UTF-16 surrogate", e2.OVERLONG = "overlong representation";
})(nr || (nr = {}));
function D0(e2, t, r2, i3, n4) {
  return Xn.throwArgumentError(`invalid codepoint at offset ${t}; ${e2}`, "bytes", r2);
}
function Zn(e2, t, r2, i3, n4) {
  if (e2 === nr.BAD_PREFIX || e2 === nr.UNEXPECTED_CONTINUE) {
    let o2 = 0;
    for (let h5 = t + 1; h5 < r2.length && r2[h5] >> 6 === 2; h5++) o2++;
    return o2;
  }
  return e2 === nr.OVERRUN ? r2.length - t - 1 : 0;
}
function F0(e2, t, r2, i3, n4) {
  return e2 === nr.OVERLONG ? (i3.push(n4), 0) : (i3.push(65533), Zn(e2, t, r2));
}
Object.freeze({ error: D0, ignore: Zn, replace: F0 });
function Ei(e2, t = Or.current) {
  t != Or.current && (Xn.checkNormalize(), e2 = e2.normalize(t));
  let r2 = [];
  for (let i3 = 0; i3 < e2.length; i3++) {
    const n4 = e2.charCodeAt(i3);
    if (n4 < 128) r2.push(n4);
    else if (n4 < 2048) r2.push(n4 >> 6 | 192), r2.push(n4 & 63 | 128);
    else if ((n4 & 64512) == 55296) {
      i3++;
      const o2 = e2.charCodeAt(i3);
      if (i3 >= e2.length || (o2 & 64512) !== 56320) throw new Error("invalid utf-8 string");
      const h5 = 65536 + ((n4 & 1023) << 10) + (o2 & 1023);
      r2.push(h5 >> 18 | 240), r2.push(h5 >> 12 & 63 | 128), r2.push(h5 >> 6 & 63 | 128), r2.push(h5 & 63 | 128);
    } else r2.push(n4 >> 12 | 224), r2.push(n4 >> 6 & 63 | 128), r2.push(n4 & 63 | 128);
  }
  return Ot(r2);
}
function T0(e2) {
  if (e2.length % 4 !== 0) throw new Error("bad data");
  let t = [];
  for (let r2 = 0; r2 < e2.length; r2 += 4) t.push(parseInt(e2.substring(r2, r2 + 4), 16));
  return t;
}
function Si(e2, t) {
  t || (t = function(n4) {
    return [parseInt(n4, 16)];
  });
  let r2 = 0, i3 = {};
  return e2.split(",").forEach((n4) => {
    let o2 = n4.split(":");
    r2 += parseInt(o2[0], 16), i3[r2] = t(o2[1]);
  }), i3;
}
function $n(e2) {
  let t = 0;
  return e2.split(",").map((r2) => {
    let i3 = r2.split("-");
    i3.length === 1 ? i3[1] = "0" : i3[1] === "" && (i3[1] = "1");
    let n4 = t + parseInt(i3[0], 16);
    return t = parseInt(i3[1], 16), { l: n4, h: t };
  });
}
$n("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"), "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((e2) => parseInt(e2, 16)), Si("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"), Si("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"), Si("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", T0), $n("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
var tf = "hash/5.7.0";
function U0(e2) {
  e2 = atob(e2);
  const t = [];
  for (let r2 = 0; r2 < e2.length; r2++) t.push(e2.charCodeAt(r2));
  return Ot(t);
}
function ef(e2, t) {
  t == null && (t = 1);
  const r2 = [], i3 = r2.forEach, n4 = function(o2, h5) {
    i3.call(o2, function(p3) {
      h5 > 0 && Array.isArray(p3) ? n4(p3, h5 - 1) : r2.push(p3);
    });
  };
  return n4(e2, t), r2;
}
function k0(e2) {
  const t = {};
  for (let r2 = 0; r2 < e2.length; r2++) {
    const i3 = e2[r2];
    t[i3[0]] = i3[1];
  }
  return t;
}
function q0(e2) {
  let t = 0;
  function r2() {
    return e2[t++] << 8 | e2[t++];
  }
  let i3 = r2(), n4 = 1, o2 = [0, 1];
  for (let H2 = 1; H2 < i3; H2++) o2.push(n4 += r2());
  let h5 = r2(), p3 = t;
  t += h5;
  let b4 = 0, m2 = 0;
  function w4() {
    return b4 == 0 && (m2 = m2 << 8 | e2[t++], b4 = 8), m2 >> --b4 & 1;
  }
  const y6 = 31, S4 = Math.pow(2, y6), I3 = S4 >>> 1, N3 = I3 >> 1, C4 = S4 - 1;
  let F2 = 0;
  for (let H2 = 0; H2 < y6; H2++) F2 = F2 << 1 | w4();
  let U3 = [], J2 = 0, Bt3 = S4;
  for (; ; ) {
    let H2 = Math.floor(((F2 - J2 + 1) * n4 - 1) / Bt3), z4 = 0, Pt3 = i3;
    for (; Pt3 - z4 > 1; ) {
      let Yt3 = z4 + Pt3 >>> 1;
      H2 < o2[Yt3] ? Pt3 = Yt3 : z4 = Yt3;
    }
    if (z4 == 0) break;
    U3.push(z4);
    let W3 = J2 + Math.floor(Bt3 * o2[z4] / n4), Rt3 = J2 + Math.floor(Bt3 * o2[z4 + 1] / n4) - 1;
    for (; !((W3 ^ Rt3) & I3); ) F2 = F2 << 1 & C4 | w4(), W3 = W3 << 1 & C4, Rt3 = Rt3 << 1 & C4 | 1;
    for (; W3 & ~Rt3 & N3; ) F2 = F2 & I3 | F2 << 1 & C4 >>> 1 | w4(), W3 = W3 << 1 ^ I3, Rt3 = (Rt3 ^ I3) << 1 | I3 | 1;
    J2 = W3, Bt3 = 1 + Rt3 - W3;
  }
  let G3 = i3 - 4;
  return U3.map((H2) => {
    switch (H2 - G3) {
      case 3:
        return G3 + 65792 + (e2[p3++] << 16 | e2[p3++] << 8 | e2[p3++]);
      case 2:
        return G3 + 256 + (e2[p3++] << 8 | e2[p3++]);
      case 1:
        return G3 + e2[p3++];
      default:
        return H2 - 1;
    }
  });
}
function K0(e2) {
  let t = 0;
  return () => e2[t++];
}
function H0(e2) {
  return K0(q0(e2));
}
function z0(e2) {
  return e2 & 1 ? ~e2 >> 1 : e2 >> 1;
}
function L0(e2, t) {
  let r2 = Array(e2);
  for (let i3 = 0; i3 < e2; i3++) r2[i3] = 1 + t();
  return r2;
}
function rf(e2, t) {
  let r2 = Array(e2);
  for (let i3 = 0, n4 = -1; i3 < e2; i3++) r2[i3] = n4 += 1 + t();
  return r2;
}
function j0(e2, t) {
  let r2 = Array(e2);
  for (let i3 = 0, n4 = 0; i3 < e2; i3++) r2[i3] = n4 += z0(t());
  return r2;
}
function Pr(e2, t) {
  let r2 = rf(e2(), e2), i3 = e2(), n4 = rf(i3, e2), o2 = L0(i3, e2);
  for (let h5 = 0; h5 < i3; h5++) for (let p3 = 0; p3 < o2[h5]; p3++) r2.push(n4[h5] + p3);
  return t ? r2.map((h5) => t[h5]) : r2;
}
function Q0(e2) {
  let t = [];
  for (; ; ) {
    let r2 = e2();
    if (r2 == 0) break;
    t.push(G0(r2, e2));
  }
  for (; ; ) {
    let r2 = e2() - 1;
    if (r2 < 0) break;
    t.push(Y0(r2, e2));
  }
  return k0(ef(t));
}
function J0(e2) {
  let t = [];
  for (; ; ) {
    let r2 = e2();
    if (r2 == 0) break;
    t.push(r2);
  }
  return t;
}
function nf(e2, t, r2) {
  let i3 = Array(e2).fill(void 0).map(() => []);
  for (let n4 = 0; n4 < t; n4++) j0(e2, r2).forEach((o2, h5) => i3[h5].push(o2));
  return i3;
}
function G0(e2, t) {
  let r2 = 1 + t(), i3 = t(), n4 = J0(t), o2 = nf(n4.length, 1 + e2, t);
  return ef(o2.map((h5, p3) => {
    const b4 = h5[0], m2 = h5.slice(1);
    return Array(n4[p3]).fill(void 0).map((w4, y6) => {
      let S4 = y6 * i3;
      return [b4 + y6 * r2, m2.map((I3) => I3 + S4)];
    });
  }));
}
function Y0(e2, t) {
  let r2 = 1 + t();
  return nf(r2, 1 + e2, t).map((n4) => [n4[0], n4.slice(1)]);
}
function V0(e2) {
  let t = Pr(e2).sort((i3, n4) => i3 - n4);
  return r2();
  function r2() {
    let i3 = [];
    for (; ; ) {
      let m2 = Pr(e2, t);
      if (m2.length == 0) break;
      i3.push({ set: new Set(m2), node: r2() });
    }
    i3.sort((m2, w4) => w4.set.size - m2.set.size);
    let n4 = e2(), o2 = n4 % 3;
    n4 = n4 / 3 | 0;
    let h5 = !!(n4 & 1);
    n4 >>= 1;
    let p3 = n4 == 1, b4 = n4 == 2;
    return { branches: i3, valid: o2, fe0f: h5, save: p3, check: b4 };
  }
}
function W0() {
  return H0(U0(""));
}
var Dr = W0();
new Set(Pr(Dr)), new Set(Pr(Dr)), Q0(Dr), V0(Dr), new L(tf);
var X0 = new Uint8Array(32);
X0.fill(0);
var Z0 = `Ethereum Signed Message:
`;
function ff(e2) {
  return typeof e2 == "string" && (e2 = Ei(e2)), yi(E0([Ei(Z0), Ei(String(e2.length)), e2]));
}
var $0 = "rlp/5.7.0";
new L($0);
var ts = "address/5.7.0";
var Ar = new L(ts);
function of(e2) {
  Qt(e2, 20) || Ar.throwArgumentError("invalid address", "address", e2), e2 = e2.toLowerCase();
  const t = e2.substring(2).split(""), r2 = new Uint8Array(40);
  for (let n4 = 0; n4 < 40; n4++) r2[n4] = t[n4].charCodeAt(0);
  const i3 = Ot(yi(r2));
  for (let n4 = 0; n4 < 40; n4 += 2) i3[n4 >> 1] >> 4 >= 8 && (t[n4] = t[n4].toUpperCase()), (i3[n4 >> 1] & 15) >= 8 && (t[n4 + 1] = t[n4 + 1].toUpperCase());
  return "0x" + t.join("");
}
var es = 9007199254740991;
function rs(e2) {
  return Math.log10 ? Math.log10(e2) : Math.log(e2) / Math.LN10;
}
var Ni = {};
for (let e2 = 0; e2 < 10; e2++) Ni[String(e2)] = String(e2);
for (let e2 = 0; e2 < 26; e2++) Ni[String.fromCharCode(65 + e2)] = String(10 + e2);
var sf = Math.floor(rs(es));
function is(e2) {
  e2 = e2.toUpperCase(), e2 = e2.substring(4) + e2.substring(0, 2) + "00";
  let t = e2.split("").map((i3) => Ni[i3]).join("");
  for (; t.length >= sf; ) {
    let i3 = t.substring(0, sf);
    t = parseInt(i3, 10) % 97 + t.substring(i3.length);
  }
  let r2 = String(98 - parseInt(t, 10) % 97);
  for (; r2.length < 2; ) r2 = "0" + r2;
  return r2;
}
function ns(e2) {
  let t = null;
  if (typeof e2 != "string" && Ar.throwArgumentError("invalid address", "address", e2), e2.match(/^(0x)?[0-9a-fA-F]{40}$/)) e2.substring(0, 2) !== "0x" && (e2 = "0x" + e2), t = of(e2), e2.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e2 && Ar.throwArgumentError("bad address checksum", "address", e2);
  else if (e2.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    for (e2.substring(2, 4) !== is(e2) && Ar.throwArgumentError("bad icap checksum", "address", e2), t = R0(e2.substring(4)); t.length < 40; ) t = "0" + t;
    t = of("0x" + t);
  } else Ar.throwArgumentError("invalid address", "address", e2);
  return t;
}
var fs = "properties/5.7.0";
new L(fs);
function br(e2, t, r2) {
  Object.defineProperty(e2, t, { enumerable: true, value: r2, writable: false });
}
new L(tf);
var os = new Uint8Array(32);
os.fill(0), V.from(-1);
var ss = V.from(0);
var as = V.from(1);
V.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), oe(as.toHexString(), 32), oe(ss.toHexString(), 32);
var se = {};
var Q = {};
var yr = af;
function af(e2, t) {
  if (!e2) throw new Error(t || "Assertion failed");
}
af.equal = function(t, r2, i3) {
  if (t != r2) throw new Error(i3 || "Assertion failed: " + t + " != " + r2);
};
var Ii = { exports: {} };
typeof Object.create == "function" ? Ii.exports = function(t, r2) {
  r2 && (t.super_ = r2, t.prototype = Object.create(r2.prototype, { constructor: { value: t, enumerable: false, writable: true, configurable: true } }));
} : Ii.exports = function(t, r2) {
  if (r2) {
    t.super_ = r2;
    var i3 = function() {
    };
    i3.prototype = r2.prototype, t.prototype = new i3(), t.prototype.constructor = t;
  }
};
var us = yr;
var hs = Ii.exports;
Q.inherits = hs;
function cs(e2, t) {
  return (e2.charCodeAt(t) & 64512) !== 55296 || t < 0 || t + 1 >= e2.length ? false : (e2.charCodeAt(t + 1) & 64512) === 56320;
}
function ls(e2, t) {
  if (Array.isArray(e2)) return e2.slice();
  if (!e2) return [];
  var r2 = [];
  if (typeof e2 == "string") if (t) {
    if (t === "hex") for (e2 = e2.replace(/[^a-z0-9]+/ig, ""), e2.length % 2 !== 0 && (e2 = "0" + e2), n4 = 0; n4 < e2.length; n4 += 2) r2.push(parseInt(e2[n4] + e2[n4 + 1], 16));
  } else for (var i3 = 0, n4 = 0; n4 < e2.length; n4++) {
    var o2 = e2.charCodeAt(n4);
    o2 < 128 ? r2[i3++] = o2 : o2 < 2048 ? (r2[i3++] = o2 >> 6 | 192, r2[i3++] = o2 & 63 | 128) : cs(e2, n4) ? (o2 = 65536 + ((o2 & 1023) << 10) + (e2.charCodeAt(++n4) & 1023), r2[i3++] = o2 >> 18 | 240, r2[i3++] = o2 >> 12 & 63 | 128, r2[i3++] = o2 >> 6 & 63 | 128, r2[i3++] = o2 & 63 | 128) : (r2[i3++] = o2 >> 12 | 224, r2[i3++] = o2 >> 6 & 63 | 128, r2[i3++] = o2 & 63 | 128);
  }
  else for (n4 = 0; n4 < e2.length; n4++) r2[n4] = e2[n4] | 0;
  return r2;
}
Q.toArray = ls;
function ds(e2) {
  for (var t = "", r2 = 0; r2 < e2.length; r2++) t += hf(e2[r2].toString(16));
  return t;
}
Q.toHex = ds;
function uf(e2) {
  var t = e2 >>> 24 | e2 >>> 8 & 65280 | e2 << 8 & 16711680 | (e2 & 255) << 24;
  return t >>> 0;
}
Q.htonl = uf;
function ps(e2, t) {
  for (var r2 = "", i3 = 0; i3 < e2.length; i3++) {
    var n4 = e2[i3];
    t === "little" && (n4 = uf(n4)), r2 += cf(n4.toString(16));
  }
  return r2;
}
Q.toHex32 = ps;
function hf(e2) {
  return e2.length === 1 ? "0" + e2 : e2;
}
Q.zero2 = hf;
function cf(e2) {
  return e2.length === 7 ? "0" + e2 : e2.length === 6 ? "00" + e2 : e2.length === 5 ? "000" + e2 : e2.length === 4 ? "0000" + e2 : e2.length === 3 ? "00000" + e2 : e2.length === 2 ? "000000" + e2 : e2.length === 1 ? "0000000" + e2 : e2;
}
Q.zero8 = cf;
function vs(e2, t, r2, i3) {
  var n4 = r2 - t;
  us(n4 % 4 === 0);
  for (var o2 = new Array(n4 / 4), h5 = 0, p3 = t; h5 < o2.length; h5++, p3 += 4) {
    var b4;
    i3 === "big" ? b4 = e2[p3] << 24 | e2[p3 + 1] << 16 | e2[p3 + 2] << 8 | e2[p3 + 3] : b4 = e2[p3 + 3] << 24 | e2[p3 + 2] << 16 | e2[p3 + 1] << 8 | e2[p3], o2[h5] = b4 >>> 0;
  }
  return o2;
}
Q.join32 = vs;
function ms(e2, t) {
  for (var r2 = new Array(e2.length * 4), i3 = 0, n4 = 0; i3 < e2.length; i3++, n4 += 4) {
    var o2 = e2[i3];
    t === "big" ? (r2[n4] = o2 >>> 24, r2[n4 + 1] = o2 >>> 16 & 255, r2[n4 + 2] = o2 >>> 8 & 255, r2[n4 + 3] = o2 & 255) : (r2[n4 + 3] = o2 >>> 24, r2[n4 + 2] = o2 >>> 16 & 255, r2[n4 + 1] = o2 >>> 8 & 255, r2[n4] = o2 & 255);
  }
  return r2;
}
Q.split32 = ms;
function gs(e2, t) {
  return e2 >>> t | e2 << 32 - t;
}
Q.rotr32 = gs;
function As(e2, t) {
  return e2 << t | e2 >>> 32 - t;
}
Q.rotl32 = As;
function bs(e2, t) {
  return e2 + t >>> 0;
}
Q.sum32 = bs;
function ys(e2, t, r2) {
  return e2 + t + r2 >>> 0;
}
Q.sum32_3 = ys;
function ws(e2, t, r2, i3) {
  return e2 + t + r2 + i3 >>> 0;
}
Q.sum32_4 = ws;
function xs(e2, t, r2, i3, n4) {
  return e2 + t + r2 + i3 + n4 >>> 0;
}
Q.sum32_5 = xs;
function Ms(e2, t, r2, i3) {
  var n4 = e2[t], o2 = e2[t + 1], h5 = i3 + o2 >>> 0, p3 = (h5 < i3 ? 1 : 0) + r2 + n4;
  e2[t] = p3 >>> 0, e2[t + 1] = h5;
}
Q.sum64 = Ms;
function Es(e2, t, r2, i3) {
  var n4 = t + i3 >>> 0, o2 = (n4 < t ? 1 : 0) + e2 + r2;
  return o2 >>> 0;
}
Q.sum64_hi = Es;
function Ss(e2, t, r2, i3) {
  var n4 = t + i3;
  return n4 >>> 0;
}
Q.sum64_lo = Ss;
function Ns(e2, t, r2, i3, n4, o2, h5, p3) {
  var b4 = 0, m2 = t;
  m2 = m2 + i3 >>> 0, b4 += m2 < t ? 1 : 0, m2 = m2 + o2 >>> 0, b4 += m2 < o2 ? 1 : 0, m2 = m2 + p3 >>> 0, b4 += m2 < p3 ? 1 : 0;
  var w4 = e2 + r2 + n4 + h5 + b4;
  return w4 >>> 0;
}
Q.sum64_4_hi = Ns;
function Is(e2, t, r2, i3, n4, o2, h5, p3) {
  var b4 = t + i3 + o2 + p3;
  return b4 >>> 0;
}
Q.sum64_4_lo = Is;
function _s(e2, t, r2, i3, n4, o2, h5, p3, b4, m2) {
  var w4 = 0, y6 = t;
  y6 = y6 + i3 >>> 0, w4 += y6 < t ? 1 : 0, y6 = y6 + o2 >>> 0, w4 += y6 < o2 ? 1 : 0, y6 = y6 + p3 >>> 0, w4 += y6 < p3 ? 1 : 0, y6 = y6 + m2 >>> 0, w4 += y6 < m2 ? 1 : 0;
  var S4 = e2 + r2 + n4 + h5 + b4 + w4;
  return S4 >>> 0;
}
Q.sum64_5_hi = _s;
function Bs(e2, t, r2, i3, n4, o2, h5, p3, b4, m2) {
  var w4 = t + i3 + o2 + p3 + m2;
  return w4 >>> 0;
}
Q.sum64_5_lo = Bs;
function Cs(e2, t, r2) {
  var i3 = t << 32 - r2 | e2 >>> r2;
  return i3 >>> 0;
}
Q.rotr64_hi = Cs;
function Rs(e2, t, r2) {
  var i3 = e2 << 32 - r2 | t >>> r2;
  return i3 >>> 0;
}
Q.rotr64_lo = Rs;
function Os(e2, t, r2) {
  return e2 >>> r2;
}
Q.shr64_hi = Os;
function Ps(e2, t, r2) {
  var i3 = e2 << 32 - r2 | t >>> r2;
  return i3 >>> 0;
}
Q.shr64_lo = Ps;
var fr = {};
var lf = Q;
var Ds = yr;
function Fr() {
  this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
}
fr.BlockHash = Fr, Fr.prototype.update = function(t, r2) {
  if (t = lf.toArray(t, r2), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {
    t = this.pending;
    var i3 = t.length % this._delta8;
    this.pending = t.slice(t.length - i3, t.length), this.pending.length === 0 && (this.pending = null), t = lf.join32(t, 0, t.length - i3, this.endian);
    for (var n4 = 0; n4 < t.length; n4 += this._delta32) this._update(t, n4, n4 + this._delta32);
  }
  return this;
}, Fr.prototype.digest = function(t) {
  return this.update(this._pad()), Ds(this.pending === null), this._digest(t);
}, Fr.prototype._pad = function() {
  var t = this.pendingTotal, r2 = this._delta8, i3 = r2 - (t + this.padLength) % r2, n4 = new Array(i3 + this.padLength);
  n4[0] = 128;
  for (var o2 = 1; o2 < i3; o2++) n4[o2] = 0;
  if (t <<= 3, this.endian === "big") {
    for (var h5 = 8; h5 < this.padLength; h5++) n4[o2++] = 0;
    n4[o2++] = 0, n4[o2++] = 0, n4[o2++] = 0, n4[o2++] = 0, n4[o2++] = t >>> 24 & 255, n4[o2++] = t >>> 16 & 255, n4[o2++] = t >>> 8 & 255, n4[o2++] = t & 255;
  } else for (n4[o2++] = t & 255, n4[o2++] = t >>> 8 & 255, n4[o2++] = t >>> 16 & 255, n4[o2++] = t >>> 24 & 255, n4[o2++] = 0, n4[o2++] = 0, n4[o2++] = 0, n4[o2++] = 0, h5 = 8; h5 < this.padLength; h5++) n4[o2++] = 0;
  return n4;
};
var or = {};
var ae = {};
var Fs = Q;
var ue = Fs.rotr32;
function Ts(e2, t, r2, i3) {
  if (e2 === 0) return df(t, r2, i3);
  if (e2 === 1 || e2 === 3) return vf(t, r2, i3);
  if (e2 === 2) return pf(t, r2, i3);
}
ae.ft_1 = Ts;
function df(e2, t, r2) {
  return e2 & t ^ ~e2 & r2;
}
ae.ch32 = df;
function pf(e2, t, r2) {
  return e2 & t ^ e2 & r2 ^ t & r2;
}
ae.maj32 = pf;
function vf(e2, t, r2) {
  return e2 ^ t ^ r2;
}
ae.p32 = vf;
function Us(e2) {
  return ue(e2, 2) ^ ue(e2, 13) ^ ue(e2, 22);
}
ae.s0_256 = Us;
function ks(e2) {
  return ue(e2, 6) ^ ue(e2, 11) ^ ue(e2, 25);
}
ae.s1_256 = ks;
function qs(e2) {
  return ue(e2, 7) ^ ue(e2, 18) ^ e2 >>> 3;
}
ae.g0_256 = qs;
function Ks(e2) {
  return ue(e2, 17) ^ ue(e2, 19) ^ e2 >>> 10;
}
ae.g1_256 = Ks;
var sr = Q;
var Hs = fr;
var zs = ae;
var _i = sr.rotl32;
var wr = sr.sum32;
var Ls = sr.sum32_5;
var js = zs.ft_1;
var mf = Hs.BlockHash;
var Qs = [1518500249, 1859775393, 2400959708, 3395469782];
function he() {
  if (!(this instanceof he)) return new he();
  mf.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
}
sr.inherits(he, mf);
var Js = he;
he.blockSize = 512, he.outSize = 160, he.hmacStrength = 80, he.padLength = 64, he.prototype._update = function(t, r2) {
  for (var i3 = this.W, n4 = 0; n4 < 16; n4++) i3[n4] = t[r2 + n4];
  for (; n4 < i3.length; n4++) i3[n4] = _i(i3[n4 - 3] ^ i3[n4 - 8] ^ i3[n4 - 14] ^ i3[n4 - 16], 1);
  var o2 = this.h[0], h5 = this.h[1], p3 = this.h[2], b4 = this.h[3], m2 = this.h[4];
  for (n4 = 0; n4 < i3.length; n4++) {
    var w4 = ~~(n4 / 20), y6 = Ls(_i(o2, 5), js(w4, h5, p3, b4), m2, i3[n4], Qs[w4]);
    m2 = b4, b4 = p3, p3 = _i(h5, 30), h5 = o2, o2 = y6;
  }
  this.h[0] = wr(this.h[0], o2), this.h[1] = wr(this.h[1], h5), this.h[2] = wr(this.h[2], p3), this.h[3] = wr(this.h[3], b4), this.h[4] = wr(this.h[4], m2);
}, he.prototype._digest = function(t) {
  return t === "hex" ? sr.toHex32(this.h, "big") : sr.split32(this.h, "big");
};
var ar = Q;
var Gs = fr;
var ur = ae;
var Ys = yr;
var ie = ar.sum32;
var Vs = ar.sum32_4;
var Ws = ar.sum32_5;
var Xs = ur.ch32;
var Zs = ur.maj32;
var $s = ur.s0_256;
var ta = ur.s1_256;
var ea = ur.g0_256;
var ra = ur.g1_256;
var gf = Gs.BlockHash;
var ia = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
function ce() {
  if (!(this instanceof ce)) return new ce();
  gf.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = ia, this.W = new Array(64);
}
ar.inherits(ce, gf);
var Af = ce;
ce.blockSize = 512, ce.outSize = 256, ce.hmacStrength = 192, ce.padLength = 64, ce.prototype._update = function(t, r2) {
  for (var i3 = this.W, n4 = 0; n4 < 16; n4++) i3[n4] = t[r2 + n4];
  for (; n4 < i3.length; n4++) i3[n4] = Vs(ra(i3[n4 - 2]), i3[n4 - 7], ea(i3[n4 - 15]), i3[n4 - 16]);
  var o2 = this.h[0], h5 = this.h[1], p3 = this.h[2], b4 = this.h[3], m2 = this.h[4], w4 = this.h[5], y6 = this.h[6], S4 = this.h[7];
  for (Ys(this.k.length === i3.length), n4 = 0; n4 < i3.length; n4++) {
    var I3 = Ws(S4, ta(m2), Xs(m2, w4, y6), this.k[n4], i3[n4]), N3 = ie($s(o2), Zs(o2, h5, p3));
    S4 = y6, y6 = w4, w4 = m2, m2 = ie(b4, I3), b4 = p3, p3 = h5, h5 = o2, o2 = ie(I3, N3);
  }
  this.h[0] = ie(this.h[0], o2), this.h[1] = ie(this.h[1], h5), this.h[2] = ie(this.h[2], p3), this.h[3] = ie(this.h[3], b4), this.h[4] = ie(this.h[4], m2), this.h[5] = ie(this.h[5], w4), this.h[6] = ie(this.h[6], y6), this.h[7] = ie(this.h[7], S4);
}, ce.prototype._digest = function(t) {
  return t === "hex" ? ar.toHex32(this.h, "big") : ar.split32(this.h, "big");
};
var Bi = Q;
var bf = Af;
function ye() {
  if (!(this instanceof ye)) return new ye();
  bf.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
}
Bi.inherits(ye, bf);
var na = ye;
ye.blockSize = 512, ye.outSize = 224, ye.hmacStrength = 192, ye.padLength = 64, ye.prototype._digest = function(t) {
  return t === "hex" ? Bi.toHex32(this.h.slice(0, 7), "big") : Bi.split32(this.h.slice(0, 7), "big");
};
var jt = Q;
var fa = fr;
var oa = yr;
var le = jt.rotr64_hi;
var de = jt.rotr64_lo;
var yf = jt.shr64_hi;
var wf = jt.shr64_lo;
var Be = jt.sum64;
var Ci = jt.sum64_hi;
var Ri = jt.sum64_lo;
var sa = jt.sum64_4_hi;
var aa = jt.sum64_4_lo;
var ua = jt.sum64_5_hi;
var ha = jt.sum64_5_lo;
var xf = fa.BlockHash;
var ca = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
function ne() {
  if (!(this instanceof ne)) return new ne();
  xf.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = ca, this.W = new Array(160);
}
jt.inherits(ne, xf);
var Mf = ne;
ne.blockSize = 1024, ne.outSize = 512, ne.hmacStrength = 192, ne.padLength = 128, ne.prototype._prepareBlock = function(t, r2) {
  for (var i3 = this.W, n4 = 0; n4 < 32; n4++) i3[n4] = t[r2 + n4];
  for (; n4 < i3.length; n4 += 2) {
    var o2 = xa(i3[n4 - 4], i3[n4 - 3]), h5 = Ma(i3[n4 - 4], i3[n4 - 3]), p3 = i3[n4 - 14], b4 = i3[n4 - 13], m2 = ya(i3[n4 - 30], i3[n4 - 29]), w4 = wa(i3[n4 - 30], i3[n4 - 29]), y6 = i3[n4 - 32], S4 = i3[n4 - 31];
    i3[n4] = sa(o2, h5, p3, b4, m2, w4, y6, S4), i3[n4 + 1] = aa(o2, h5, p3, b4, m2, w4, y6, S4);
  }
}, ne.prototype._update = function(t, r2) {
  this._prepareBlock(t, r2);
  var i3 = this.W, n4 = this.h[0], o2 = this.h[1], h5 = this.h[2], p3 = this.h[3], b4 = this.h[4], m2 = this.h[5], w4 = this.h[6], y6 = this.h[7], S4 = this.h[8], I3 = this.h[9], N3 = this.h[10], C4 = this.h[11], F2 = this.h[12], U3 = this.h[13], J2 = this.h[14], Bt3 = this.h[15];
  oa(this.k.length === i3.length);
  for (var G3 = 0; G3 < i3.length; G3 += 2) {
    var H2 = J2, z4 = Bt3, Pt3 = Aa(S4, I3), W3 = ba(S4, I3), Rt3 = la(S4, I3, N3, C4, F2), Yt3 = da(S4, I3, N3, C4, F2, U3), Y = this.k[G3], Vt3 = this.k[G3 + 1], A2 = i3[G3], f4 = i3[G3 + 1], a3 = ua(H2, z4, Pt3, W3, Rt3, Yt3, Y, Vt3, A2, f4), c4 = ha(H2, z4, Pt3, W3, Rt3, Yt3, Y, Vt3, A2, f4);
    H2 = ma(n4, o2), z4 = ga(n4, o2), Pt3 = pa(n4, o2, h5, p3, b4), W3 = va(n4, o2, h5, p3, b4, m2);
    var d3 = Ci(H2, z4, Pt3, W3), g3 = Ri(H2, z4, Pt3, W3);
    J2 = F2, Bt3 = U3, F2 = N3, U3 = C4, N3 = S4, C4 = I3, S4 = Ci(w4, y6, a3, c4), I3 = Ri(y6, y6, a3, c4), w4 = b4, y6 = m2, b4 = h5, m2 = p3, h5 = n4, p3 = o2, n4 = Ci(a3, c4, d3, g3), o2 = Ri(a3, c4, d3, g3);
  }
  Be(this.h, 0, n4, o2), Be(this.h, 2, h5, p3), Be(this.h, 4, b4, m2), Be(this.h, 6, w4, y6), Be(this.h, 8, S4, I3), Be(this.h, 10, N3, C4), Be(this.h, 12, F2, U3), Be(this.h, 14, J2, Bt3);
}, ne.prototype._digest = function(t) {
  return t === "hex" ? jt.toHex32(this.h, "big") : jt.split32(this.h, "big");
};
function la(e2, t, r2, i3, n4) {
  var o2 = e2 & r2 ^ ~e2 & n4;
  return o2 < 0 && (o2 += 4294967296), o2;
}
function da(e2, t, r2, i3, n4, o2) {
  var h5 = t & i3 ^ ~t & o2;
  return h5 < 0 && (h5 += 4294967296), h5;
}
function pa(e2, t, r2, i3, n4) {
  var o2 = e2 & r2 ^ e2 & n4 ^ r2 & n4;
  return o2 < 0 && (o2 += 4294967296), o2;
}
function va(e2, t, r2, i3, n4, o2) {
  var h5 = t & i3 ^ t & o2 ^ i3 & o2;
  return h5 < 0 && (h5 += 4294967296), h5;
}
function ma(e2, t) {
  var r2 = le(e2, t, 28), i3 = le(t, e2, 2), n4 = le(t, e2, 7), o2 = r2 ^ i3 ^ n4;
  return o2 < 0 && (o2 += 4294967296), o2;
}
function ga(e2, t) {
  var r2 = de(e2, t, 28), i3 = de(t, e2, 2), n4 = de(t, e2, 7), o2 = r2 ^ i3 ^ n4;
  return o2 < 0 && (o2 += 4294967296), o2;
}
function Aa(e2, t) {
  var r2 = le(e2, t, 14), i3 = le(e2, t, 18), n4 = le(t, e2, 9), o2 = r2 ^ i3 ^ n4;
  return o2 < 0 && (o2 += 4294967296), o2;
}
function ba(e2, t) {
  var r2 = de(e2, t, 14), i3 = de(e2, t, 18), n4 = de(t, e2, 9), o2 = r2 ^ i3 ^ n4;
  return o2 < 0 && (o2 += 4294967296), o2;
}
function ya(e2, t) {
  var r2 = le(e2, t, 1), i3 = le(e2, t, 8), n4 = yf(e2, t, 7), o2 = r2 ^ i3 ^ n4;
  return o2 < 0 && (o2 += 4294967296), o2;
}
function wa(e2, t) {
  var r2 = de(e2, t, 1), i3 = de(e2, t, 8), n4 = wf(e2, t, 7), o2 = r2 ^ i3 ^ n4;
  return o2 < 0 && (o2 += 4294967296), o2;
}
function xa(e2, t) {
  var r2 = le(e2, t, 19), i3 = le(t, e2, 29), n4 = yf(e2, t, 6), o2 = r2 ^ i3 ^ n4;
  return o2 < 0 && (o2 += 4294967296), o2;
}
function Ma(e2, t) {
  var r2 = de(e2, t, 19), i3 = de(t, e2, 29), n4 = wf(e2, t, 6), o2 = r2 ^ i3 ^ n4;
  return o2 < 0 && (o2 += 4294967296), o2;
}
var Oi = Q;
var Ef = Mf;
function we() {
  if (!(this instanceof we)) return new we();
  Ef.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
}
Oi.inherits(we, Ef);
var Ea = we;
we.blockSize = 1024, we.outSize = 384, we.hmacStrength = 192, we.padLength = 128, we.prototype._digest = function(t) {
  return t === "hex" ? Oi.toHex32(this.h.slice(0, 12), "big") : Oi.split32(this.h.slice(0, 12), "big");
}, or.sha1 = Js, or.sha224 = na, or.sha256 = Af, or.sha384 = Ea, or.sha512 = Mf;
var Sf = {};
var Xe = Q;
var Sa = fr;
var Tr = Xe.rotl32;
var Nf = Xe.sum32;
var xr = Xe.sum32_3;
var If = Xe.sum32_4;
var _f = Sa.BlockHash;
function pe() {
  if (!(this instanceof pe)) return new pe();
  _f.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
}
Xe.inherits(pe, _f), Sf.ripemd160 = pe, pe.blockSize = 512, pe.outSize = 160, pe.hmacStrength = 192, pe.padLength = 64, pe.prototype._update = function(t, r2) {
  for (var i3 = this.h[0], n4 = this.h[1], o2 = this.h[2], h5 = this.h[3], p3 = this.h[4], b4 = i3, m2 = n4, w4 = o2, y6 = h5, S4 = p3, I3 = 0; I3 < 80; I3++) {
    var N3 = Nf(Tr(If(i3, Bf(I3, n4, o2, h5), t[_a[I3] + r2], Na(I3)), Ca[I3]), p3);
    i3 = p3, p3 = h5, h5 = Tr(o2, 10), o2 = n4, n4 = N3, N3 = Nf(Tr(If(b4, Bf(79 - I3, m2, w4, y6), t[Ba[I3] + r2], Ia(I3)), Ra[I3]), S4), b4 = S4, S4 = y6, y6 = Tr(w4, 10), w4 = m2, m2 = N3;
  }
  N3 = xr(this.h[1], o2, y6), this.h[1] = xr(this.h[2], h5, S4), this.h[2] = xr(this.h[3], p3, b4), this.h[3] = xr(this.h[4], i3, m2), this.h[4] = xr(this.h[0], n4, w4), this.h[0] = N3;
}, pe.prototype._digest = function(t) {
  return t === "hex" ? Xe.toHex32(this.h, "little") : Xe.split32(this.h, "little");
};
function Bf(e2, t, r2, i3) {
  return e2 <= 15 ? t ^ r2 ^ i3 : e2 <= 31 ? t & r2 | ~t & i3 : e2 <= 47 ? (t | ~r2) ^ i3 : e2 <= 63 ? t & i3 | r2 & ~i3 : t ^ (r2 | ~i3);
}
function Na(e2) {
  return e2 <= 15 ? 0 : e2 <= 31 ? 1518500249 : e2 <= 47 ? 1859775393 : e2 <= 63 ? 2400959708 : 2840853838;
}
function Ia(e2) {
  return e2 <= 15 ? 1352829926 : e2 <= 31 ? 1548603684 : e2 <= 47 ? 1836072691 : e2 <= 63 ? 2053994217 : 0;
}
var _a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];
var Ba = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];
var Ca = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];
var Ra = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
var Oa = Q;
var Pa = yr;
function hr(e2, t, r2) {
  if (!(this instanceof hr)) return new hr(e2, t, r2);
  this.Hash = e2, this.blockSize = e2.blockSize / 8, this.outSize = e2.outSize / 8, this.inner = null, this.outer = null, this._init(Oa.toArray(t, r2));
}
var Da = hr;
hr.prototype._init = function(t) {
  t.length > this.blockSize && (t = new this.Hash().update(t).digest()), Pa(t.length <= this.blockSize);
  for (var r2 = t.length; r2 < this.blockSize; r2++) t.push(0);
  for (r2 = 0; r2 < t.length; r2++) t[r2] ^= 54;
  for (this.inner = new this.Hash().update(t), r2 = 0; r2 < t.length; r2++) t[r2] ^= 106;
  this.outer = new this.Hash().update(t);
}, hr.prototype.update = function(t, r2) {
  return this.inner.update(t, r2), this;
}, hr.prototype.digest = function(t) {
  return this.outer.update(this.inner.digest()), this.outer.digest(t);
}, function(e2) {
  var t = e2;
  t.utils = Q, t.common = fr, t.sha = or, t.ripemd = Sf, t.hmac = Da, t.sha1 = t.sha.sha1, t.sha256 = t.sha.sha256, t.sha224 = t.sha.sha224, t.sha384 = t.sha.sha384, t.sha512 = t.sha.sha512, t.ripemd160 = t.ripemd.ripemd160;
}(se);
function cr(e2, t, r2) {
  return r2 = { path: t, exports: {}, require: function(i3, n4) {
    return Fa(i3, n4 ?? r2.path);
  } }, e2(r2, r2.exports), r2.exports;
}
function Fa() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var Pi = Cf;
function Cf(e2, t) {
  if (!e2) throw new Error(t || "Assertion failed");
}
Cf.equal = function(t, r2, i3) {
  if (t != r2) throw new Error(i3 || "Assertion failed: " + t + " != " + r2);
};
var fe = cr(function(e2, t) {
  var r2 = t;
  function i3(h5, p3) {
    if (Array.isArray(h5)) return h5.slice();
    if (!h5) return [];
    var b4 = [];
    if (typeof h5 != "string") {
      for (var m2 = 0; m2 < h5.length; m2++) b4[m2] = h5[m2] | 0;
      return b4;
    }
    if (p3 === "hex") {
      h5 = h5.replace(/[^a-z0-9]+/ig, ""), h5.length % 2 !== 0 && (h5 = "0" + h5);
      for (var m2 = 0; m2 < h5.length; m2 += 2) b4.push(parseInt(h5[m2] + h5[m2 + 1], 16));
    } else for (var m2 = 0; m2 < h5.length; m2++) {
      var w4 = h5.charCodeAt(m2), y6 = w4 >> 8, S4 = w4 & 255;
      y6 ? b4.push(y6, S4) : b4.push(S4);
    }
    return b4;
  }
  r2.toArray = i3;
  function n4(h5) {
    return h5.length === 1 ? "0" + h5 : h5;
  }
  r2.zero2 = n4;
  function o2(h5) {
    for (var p3 = "", b4 = 0; b4 < h5.length; b4++) p3 += n4(h5[b4].toString(16));
    return p3;
  }
  r2.toHex = o2, r2.encode = function(p3, b4) {
    return b4 === "hex" ? o2(p3) : p3;
  };
});
var Jt = cr(function(e2, t) {
  var r2 = t;
  r2.assert = Pi, r2.toArray = fe.toArray, r2.zero2 = fe.zero2, r2.toHex = fe.toHex, r2.encode = fe.encode;
  function i3(b4, m2, w4) {
    var y6 = new Array(Math.max(b4.bitLength(), w4) + 1);
    y6.fill(0);
    for (var S4 = 1 << m2 + 1, I3 = b4.clone(), N3 = 0; N3 < y6.length; N3++) {
      var C4, F2 = I3.andln(S4 - 1);
      I3.isOdd() ? (F2 > (S4 >> 1) - 1 ? C4 = (S4 >> 1) - F2 : C4 = F2, I3.isubn(C4)) : C4 = 0, y6[N3] = C4, I3.iushrn(1);
    }
    return y6;
  }
  r2.getNAF = i3;
  function n4(b4, m2) {
    var w4 = [[], []];
    b4 = b4.clone(), m2 = m2.clone();
    for (var y6 = 0, S4 = 0, I3; b4.cmpn(-y6) > 0 || m2.cmpn(-S4) > 0; ) {
      var N3 = b4.andln(3) + y6 & 3, C4 = m2.andln(3) + S4 & 3;
      N3 === 3 && (N3 = -1), C4 === 3 && (C4 = -1);
      var F2;
      N3 & 1 ? (I3 = b4.andln(7) + y6 & 7, (I3 === 3 || I3 === 5) && C4 === 2 ? F2 = -N3 : F2 = N3) : F2 = 0, w4[0].push(F2);
      var U3;
      C4 & 1 ? (I3 = m2.andln(7) + S4 & 7, (I3 === 3 || I3 === 5) && N3 === 2 ? U3 = -C4 : U3 = C4) : U3 = 0, w4[1].push(U3), 2 * y6 === F2 + 1 && (y6 = 1 - y6), 2 * S4 === U3 + 1 && (S4 = 1 - S4), b4.iushrn(1), m2.iushrn(1);
    }
    return w4;
  }
  r2.getJSF = n4;
  function o2(b4, m2, w4) {
    var y6 = "_" + m2;
    b4.prototype[m2] = function() {
      return this[y6] !== void 0 ? this[y6] : this[y6] = w4.call(this);
    };
  }
  r2.cachedProperty = o2;
  function h5(b4) {
    return typeof b4 == "string" ? r2.toArray(b4, "hex") : b4;
  }
  r2.parseBytes = h5;
  function p3(b4) {
    return new K(b4, "hex", "le");
  }
  r2.intFromLE = p3;
});
var Ur = Jt.getNAF;
var Ta = Jt.getJSF;
var kr = Jt.assert;
function Ce(e2, t) {
  this.type = e2, this.p = new K(t.p, 16), this.red = t.prime ? K.red(t.prime) : K.mont(this.p), this.zero = new K(0).toRed(this.red), this.one = new K(1).toRed(this.red), this.two = new K(2).toRed(this.red), this.n = t.n && new K(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
  var r2 = this.n && this.p.div(this.n);
  !r2 || r2.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
}
var Ze = Ce;
Ce.prototype.point = function() {
  throw new Error("Not implemented");
}, Ce.prototype.validate = function() {
  throw new Error("Not implemented");
}, Ce.prototype._fixedNafMul = function(t, r2) {
  kr(t.precomputed);
  var i3 = t._getDoubles(), n4 = Ur(r2, 1, this._bitLength), o2 = (1 << i3.step + 1) - (i3.step % 2 === 0 ? 2 : 1);
  o2 /= 3;
  var h5 = [], p3, b4;
  for (p3 = 0; p3 < n4.length; p3 += i3.step) {
    b4 = 0;
    for (var m2 = p3 + i3.step - 1; m2 >= p3; m2--) b4 = (b4 << 1) + n4[m2];
    h5.push(b4);
  }
  for (var w4 = this.jpoint(null, null, null), y6 = this.jpoint(null, null, null), S4 = o2; S4 > 0; S4--) {
    for (p3 = 0; p3 < h5.length; p3++) b4 = h5[p3], b4 === S4 ? y6 = y6.mixedAdd(i3.points[p3]) : b4 === -S4 && (y6 = y6.mixedAdd(i3.points[p3].neg()));
    w4 = w4.add(y6);
  }
  return w4.toP();
}, Ce.prototype._wnafMul = function(t, r2) {
  var i3 = 4, n4 = t._getNAFPoints(i3);
  i3 = n4.wnd;
  for (var o2 = n4.points, h5 = Ur(r2, i3, this._bitLength), p3 = this.jpoint(null, null, null), b4 = h5.length - 1; b4 >= 0; b4--) {
    for (var m2 = 0; b4 >= 0 && h5[b4] === 0; b4--) m2++;
    if (b4 >= 0 && m2++, p3 = p3.dblp(m2), b4 < 0) break;
    var w4 = h5[b4];
    kr(w4 !== 0), t.type === "affine" ? w4 > 0 ? p3 = p3.mixedAdd(o2[w4 - 1 >> 1]) : p3 = p3.mixedAdd(o2[-w4 - 1 >> 1].neg()) : w4 > 0 ? p3 = p3.add(o2[w4 - 1 >> 1]) : p3 = p3.add(o2[-w4 - 1 >> 1].neg());
  }
  return t.type === "affine" ? p3.toP() : p3;
}, Ce.prototype._wnafMulAdd = function(t, r2, i3, n4, o2) {
  var h5 = this._wnafT1, p3 = this._wnafT2, b4 = this._wnafT3, m2 = 0, w4, y6, S4;
  for (w4 = 0; w4 < n4; w4++) {
    S4 = r2[w4];
    var I3 = S4._getNAFPoints(t);
    h5[w4] = I3.wnd, p3[w4] = I3.points;
  }
  for (w4 = n4 - 1; w4 >= 1; w4 -= 2) {
    var N3 = w4 - 1, C4 = w4;
    if (h5[N3] !== 1 || h5[C4] !== 1) {
      b4[N3] = Ur(i3[N3], h5[N3], this._bitLength), b4[C4] = Ur(i3[C4], h5[C4], this._bitLength), m2 = Math.max(b4[N3].length, m2), m2 = Math.max(b4[C4].length, m2);
      continue;
    }
    var F2 = [r2[N3], null, null, r2[C4]];
    r2[N3].y.cmp(r2[C4].y) === 0 ? (F2[1] = r2[N3].add(r2[C4]), F2[2] = r2[N3].toJ().mixedAdd(r2[C4].neg())) : r2[N3].y.cmp(r2[C4].y.redNeg()) === 0 ? (F2[1] = r2[N3].toJ().mixedAdd(r2[C4]), F2[2] = r2[N3].add(r2[C4].neg())) : (F2[1] = r2[N3].toJ().mixedAdd(r2[C4]), F2[2] = r2[N3].toJ().mixedAdd(r2[C4].neg()));
    var U3 = [-3, -1, -5, -7, 0, 7, 5, 1, 3], J2 = Ta(i3[N3], i3[C4]);
    for (m2 = Math.max(J2[0].length, m2), b4[N3] = new Array(m2), b4[C4] = new Array(m2), y6 = 0; y6 < m2; y6++) {
      var Bt3 = J2[0][y6] | 0, G3 = J2[1][y6] | 0;
      b4[N3][y6] = U3[(Bt3 + 1) * 3 + (G3 + 1)], b4[C4][y6] = 0, p3[N3] = F2;
    }
  }
  var H2 = this.jpoint(null, null, null), z4 = this._wnafT4;
  for (w4 = m2; w4 >= 0; w4--) {
    for (var Pt3 = 0; w4 >= 0; ) {
      var W3 = true;
      for (y6 = 0; y6 < n4; y6++) z4[y6] = b4[y6][w4] | 0, z4[y6] !== 0 && (W3 = false);
      if (!W3) break;
      Pt3++, w4--;
    }
    if (w4 >= 0 && Pt3++, H2 = H2.dblp(Pt3), w4 < 0) break;
    for (y6 = 0; y6 < n4; y6++) {
      var Rt3 = z4[y6];
      Rt3 !== 0 && (Rt3 > 0 ? S4 = p3[y6][Rt3 - 1 >> 1] : Rt3 < 0 && (S4 = p3[y6][-Rt3 - 1 >> 1].neg()), S4.type === "affine" ? H2 = H2.mixedAdd(S4) : H2 = H2.add(S4));
    }
  }
  for (w4 = 0; w4 < n4; w4++) p3[w4] = null;
  return o2 ? H2 : H2.toP();
};
function Xt(e2, t) {
  this.curve = e2, this.type = t, this.precomputed = null;
}
Ce.BasePoint = Xt, Xt.prototype.eq = function() {
  throw new Error("Not implemented");
}, Xt.prototype.validate = function() {
  return this.curve.validate(this);
}, Ce.prototype.decodePoint = function(t, r2) {
  t = Jt.toArray(t, r2);
  var i3 = this.p.byteLength();
  if ((t[0] === 4 || t[0] === 6 || t[0] === 7) && t.length - 1 === 2 * i3) {
    t[0] === 6 ? kr(t[t.length - 1] % 2 === 0) : t[0] === 7 && kr(t[t.length - 1] % 2 === 1);
    var n4 = this.point(t.slice(1, 1 + i3), t.slice(1 + i3, 1 + 2 * i3));
    return n4;
  } else if ((t[0] === 2 || t[0] === 3) && t.length - 1 === i3) return this.pointFromX(t.slice(1, 1 + i3), t[0] === 3);
  throw new Error("Unknown point format");
}, Xt.prototype.encodeCompressed = function(t) {
  return this.encode(t, true);
}, Xt.prototype._encode = function(t) {
  var r2 = this.curve.p.byteLength(), i3 = this.getX().toArray("be", r2);
  return t ? [this.getY().isEven() ? 2 : 3].concat(i3) : [4].concat(i3, this.getY().toArray("be", r2));
}, Xt.prototype.encode = function(t, r2) {
  return Jt.encode(this._encode(r2), t);
}, Xt.prototype.precompute = function(t) {
  if (this.precomputed) return this;
  var r2 = { doubles: null, naf: null, beta: null };
  return r2.naf = this._getNAFPoints(8), r2.doubles = this._getDoubles(4, t), r2.beta = this._getBeta(), this.precomputed = r2, this;
}, Xt.prototype._hasDoubles = function(t) {
  if (!this.precomputed) return false;
  var r2 = this.precomputed.doubles;
  return r2 ? r2.points.length >= Math.ceil((t.bitLength() + 1) / r2.step) : false;
}, Xt.prototype._getDoubles = function(t, r2) {
  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
  for (var i3 = [this], n4 = this, o2 = 0; o2 < r2; o2 += t) {
    for (var h5 = 0; h5 < t; h5++) n4 = n4.dbl();
    i3.push(n4);
  }
  return { step: t, points: i3 };
}, Xt.prototype._getNAFPoints = function(t) {
  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
  for (var r2 = [this], i3 = (1 << t) - 1, n4 = i3 === 1 ? null : this.dbl(), o2 = 1; o2 < i3; o2++) r2[o2] = r2[o2 - 1].add(n4);
  return { wnd: t, points: r2 };
}, Xt.prototype._getBeta = function() {
  return null;
}, Xt.prototype.dblp = function(t) {
  for (var r2 = this, i3 = 0; i3 < t; i3++) r2 = r2.dbl();
  return r2;
};
var Di = cr(function(e2) {
  typeof Object.create == "function" ? e2.exports = function(r2, i3) {
    i3 && (r2.super_ = i3, r2.prototype = Object.create(i3.prototype, { constructor: { value: r2, enumerable: false, writable: true, configurable: true } }));
  } : e2.exports = function(r2, i3) {
    if (i3) {
      r2.super_ = i3;
      var n4 = function() {
      };
      n4.prototype = i3.prototype, r2.prototype = new n4(), r2.prototype.constructor = r2;
    }
  };
});
var Ua = Jt.assert;
function Zt(e2) {
  Ze.call(this, "short", e2), this.a = new K(e2.a, 16).toRed(this.red), this.b = new K(e2.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e2), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
}
Di(Zt, Ze);
var ka = Zt;
Zt.prototype._getEndomorphism = function(t) {
  if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
    var r2, i3;
    if (t.beta) r2 = new K(t.beta, 16).toRed(this.red);
    else {
      var n4 = this._getEndoRoots(this.p);
      r2 = n4[0].cmp(n4[1]) < 0 ? n4[0] : n4[1], r2 = r2.toRed(this.red);
    }
    if (t.lambda) i3 = new K(t.lambda, 16);
    else {
      var o2 = this._getEndoRoots(this.n);
      this.g.mul(o2[0]).x.cmp(this.g.x.redMul(r2)) === 0 ? i3 = o2[0] : (i3 = o2[1], Ua(this.g.mul(i3).x.cmp(this.g.x.redMul(r2)) === 0));
    }
    var h5;
    return t.basis ? h5 = t.basis.map(function(p3) {
      return { a: new K(p3.a, 16), b: new K(p3.b, 16) };
    }) : h5 = this._getEndoBasis(i3), { beta: r2, lambda: i3, basis: h5 };
  }
}, Zt.prototype._getEndoRoots = function(t) {
  var r2 = t === this.p ? this.red : K.mont(t), i3 = new K(2).toRed(r2).redInvm(), n4 = i3.redNeg(), o2 = new K(3).toRed(r2).redNeg().redSqrt().redMul(i3), h5 = n4.redAdd(o2).fromRed(), p3 = n4.redSub(o2).fromRed();
  return [h5, p3];
}, Zt.prototype._getEndoBasis = function(t) {
  for (var r2 = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), i3 = t, n4 = this.n.clone(), o2 = new K(1), h5 = new K(0), p3 = new K(0), b4 = new K(1), m2, w4, y6, S4, I3, N3, C4, F2 = 0, U3, J2; i3.cmpn(0) !== 0; ) {
    var Bt3 = n4.div(i3);
    U3 = n4.sub(Bt3.mul(i3)), J2 = p3.sub(Bt3.mul(o2));
    var G3 = b4.sub(Bt3.mul(h5));
    if (!y6 && U3.cmp(r2) < 0) m2 = C4.neg(), w4 = o2, y6 = U3.neg(), S4 = J2;
    else if (y6 && ++F2 === 2) break;
    C4 = U3, n4 = i3, i3 = U3, p3 = o2, o2 = J2, b4 = h5, h5 = G3;
  }
  I3 = U3.neg(), N3 = J2;
  var H2 = y6.sqr().add(S4.sqr()), z4 = I3.sqr().add(N3.sqr());
  return z4.cmp(H2) >= 0 && (I3 = m2, N3 = w4), y6.negative && (y6 = y6.neg(), S4 = S4.neg()), I3.negative && (I3 = I3.neg(), N3 = N3.neg()), [{ a: y6, b: S4 }, { a: I3, b: N3 }];
}, Zt.prototype._endoSplit = function(t) {
  var r2 = this.endo.basis, i3 = r2[0], n4 = r2[1], o2 = n4.b.mul(t).divRound(this.n), h5 = i3.b.neg().mul(t).divRound(this.n), p3 = o2.mul(i3.a), b4 = h5.mul(n4.a), m2 = o2.mul(i3.b), w4 = h5.mul(n4.b), y6 = t.sub(p3).sub(b4), S4 = m2.add(w4).neg();
  return { k1: y6, k2: S4 };
}, Zt.prototype.pointFromX = function(t, r2) {
  t = new K(t, 16), t.red || (t = t.toRed(this.red));
  var i3 = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), n4 = i3.redSqrt();
  if (n4.redSqr().redSub(i3).cmp(this.zero) !== 0) throw new Error("invalid point");
  var o2 = n4.fromRed().isOdd();
  return (r2 && !o2 || !r2 && o2) && (n4 = n4.redNeg()), this.point(t, n4);
}, Zt.prototype.validate = function(t) {
  if (t.inf) return true;
  var r2 = t.x, i3 = t.y, n4 = this.a.redMul(r2), o2 = r2.redSqr().redMul(r2).redIAdd(n4).redIAdd(this.b);
  return i3.redSqr().redISub(o2).cmpn(0) === 0;
}, Zt.prototype._endoWnafMulAdd = function(t, r2, i3) {
  for (var n4 = this._endoWnafT1, o2 = this._endoWnafT2, h5 = 0; h5 < t.length; h5++) {
    var p3 = this._endoSplit(r2[h5]), b4 = t[h5], m2 = b4._getBeta();
    p3.k1.negative && (p3.k1.ineg(), b4 = b4.neg(true)), p3.k2.negative && (p3.k2.ineg(), m2 = m2.neg(true)), n4[h5 * 2] = b4, n4[h5 * 2 + 1] = m2, o2[h5 * 2] = p3.k1, o2[h5 * 2 + 1] = p3.k2;
  }
  for (var w4 = this._wnafMulAdd(1, n4, o2, h5 * 2, i3), y6 = 0; y6 < h5 * 2; y6++) n4[y6] = null, o2[y6] = null;
  return w4;
};
function Ft(e2, t, r2, i3) {
  Ze.BasePoint.call(this, e2, "affine"), t === null && r2 === null ? (this.x = null, this.y = null, this.inf = true) : (this.x = new K(t, 16), this.y = new K(r2, 16), i3 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
}
Di(Ft, Ze.BasePoint), Zt.prototype.point = function(t, r2, i3) {
  return new Ft(this, t, r2, i3);
}, Zt.prototype.pointFromJSON = function(t, r2) {
  return Ft.fromJSON(this, t, r2);
}, Ft.prototype._getBeta = function() {
  if (this.curve.endo) {
    var t = this.precomputed;
    if (t && t.beta) return t.beta;
    var r2 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (t) {
      var i3 = this.curve, n4 = function(o2) {
        return i3.point(o2.x.redMul(i3.endo.beta), o2.y);
      };
      t.beta = r2, r2.precomputed = { beta: null, naf: t.naf && { wnd: t.naf.wnd, points: t.naf.points.map(n4) }, doubles: t.doubles && { step: t.doubles.step, points: t.doubles.points.map(n4) } };
    }
    return r2;
  }
}, Ft.prototype.toJSON = function() {
  return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
}, Ft.fromJSON = function(t, r2, i3) {
  typeof r2 == "string" && (r2 = JSON.parse(r2));
  var n4 = t.point(r2[0], r2[1], i3);
  if (!r2[2]) return n4;
  function o2(p3) {
    return t.point(p3[0], p3[1], i3);
  }
  var h5 = r2[2];
  return n4.precomputed = { beta: null, doubles: h5.doubles && { step: h5.doubles.step, points: [n4].concat(h5.doubles.points.map(o2)) }, naf: h5.naf && { wnd: h5.naf.wnd, points: [n4].concat(h5.naf.points.map(o2)) } }, n4;
}, Ft.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
}, Ft.prototype.isInfinity = function() {
  return this.inf;
}, Ft.prototype.add = function(t) {
  if (this.inf) return t;
  if (t.inf) return this;
  if (this.eq(t)) return this.dbl();
  if (this.neg().eq(t)) return this.curve.point(null, null);
  if (this.x.cmp(t.x) === 0) return this.curve.point(null, null);
  var r2 = this.y.redSub(t.y);
  r2.cmpn(0) !== 0 && (r2 = r2.redMul(this.x.redSub(t.x).redInvm()));
  var i3 = r2.redSqr().redISub(this.x).redISub(t.x), n4 = r2.redMul(this.x.redSub(i3)).redISub(this.y);
  return this.curve.point(i3, n4);
}, Ft.prototype.dbl = function() {
  if (this.inf) return this;
  var t = this.y.redAdd(this.y);
  if (t.cmpn(0) === 0) return this.curve.point(null, null);
  var r2 = this.curve.a, i3 = this.x.redSqr(), n4 = t.redInvm(), o2 = i3.redAdd(i3).redIAdd(i3).redIAdd(r2).redMul(n4), h5 = o2.redSqr().redISub(this.x.redAdd(this.x)), p3 = o2.redMul(this.x.redSub(h5)).redISub(this.y);
  return this.curve.point(h5, p3);
}, Ft.prototype.getX = function() {
  return this.x.fromRed();
}, Ft.prototype.getY = function() {
  return this.y.fromRed();
}, Ft.prototype.mul = function(t) {
  return t = new K(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t);
}, Ft.prototype.mulAdd = function(t, r2, i3) {
  var n4 = [this, r2], o2 = [t, i3];
  return this.curve.endo ? this.curve._endoWnafMulAdd(n4, o2) : this.curve._wnafMulAdd(1, n4, o2, 2);
}, Ft.prototype.jmulAdd = function(t, r2, i3) {
  var n4 = [this, r2], o2 = [t, i3];
  return this.curve.endo ? this.curve._endoWnafMulAdd(n4, o2, true) : this.curve._wnafMulAdd(1, n4, o2, 2, true);
}, Ft.prototype.eq = function(t) {
  return this === t || this.inf === t.inf && (this.inf || this.x.cmp(t.x) === 0 && this.y.cmp(t.y) === 0);
}, Ft.prototype.neg = function(t) {
  if (this.inf) return this;
  var r2 = this.curve.point(this.x, this.y.redNeg());
  if (t && this.precomputed) {
    var i3 = this.precomputed, n4 = function(o2) {
      return o2.neg();
    };
    r2.precomputed = { naf: i3.naf && { wnd: i3.naf.wnd, points: i3.naf.points.map(n4) }, doubles: i3.doubles && { step: i3.doubles.step, points: i3.doubles.points.map(n4) } };
  }
  return r2;
}, Ft.prototype.toJ = function() {
  if (this.inf) return this.curve.jpoint(null, null, null);
  var t = this.curve.jpoint(this.x, this.y, this.curve.one);
  return t;
};
function Tt(e2, t, r2, i3) {
  Ze.BasePoint.call(this, e2, "jacobian"), t === null && r2 === null && i3 === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new K(0)) : (this.x = new K(t, 16), this.y = new K(r2, 16), this.z = new K(i3, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
}
Di(Tt, Ze.BasePoint), Zt.prototype.jpoint = function(t, r2, i3) {
  return new Tt(this, t, r2, i3);
}, Tt.prototype.toP = function() {
  if (this.isInfinity()) return this.curve.point(null, null);
  var t = this.z.redInvm(), r2 = t.redSqr(), i3 = this.x.redMul(r2), n4 = this.y.redMul(r2).redMul(t);
  return this.curve.point(i3, n4);
}, Tt.prototype.neg = function() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
}, Tt.prototype.add = function(t) {
  if (this.isInfinity()) return t;
  if (t.isInfinity()) return this;
  var r2 = t.z.redSqr(), i3 = this.z.redSqr(), n4 = this.x.redMul(r2), o2 = t.x.redMul(i3), h5 = this.y.redMul(r2.redMul(t.z)), p3 = t.y.redMul(i3.redMul(this.z)), b4 = n4.redSub(o2), m2 = h5.redSub(p3);
  if (b4.cmpn(0) === 0) return m2.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var w4 = b4.redSqr(), y6 = w4.redMul(b4), S4 = n4.redMul(w4), I3 = m2.redSqr().redIAdd(y6).redISub(S4).redISub(S4), N3 = m2.redMul(S4.redISub(I3)).redISub(h5.redMul(y6)), C4 = this.z.redMul(t.z).redMul(b4);
  return this.curve.jpoint(I3, N3, C4);
}, Tt.prototype.mixedAdd = function(t) {
  if (this.isInfinity()) return t.toJ();
  if (t.isInfinity()) return this;
  var r2 = this.z.redSqr(), i3 = this.x, n4 = t.x.redMul(r2), o2 = this.y, h5 = t.y.redMul(r2).redMul(this.z), p3 = i3.redSub(n4), b4 = o2.redSub(h5);
  if (p3.cmpn(0) === 0) return b4.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var m2 = p3.redSqr(), w4 = m2.redMul(p3), y6 = i3.redMul(m2), S4 = b4.redSqr().redIAdd(w4).redISub(y6).redISub(y6), I3 = b4.redMul(y6.redISub(S4)).redISub(o2.redMul(w4)), N3 = this.z.redMul(p3);
  return this.curve.jpoint(S4, I3, N3);
}, Tt.prototype.dblp = function(t) {
  if (t === 0) return this;
  if (this.isInfinity()) return this;
  if (!t) return this.dbl();
  var r2;
  if (this.curve.zeroA || this.curve.threeA) {
    var i3 = this;
    for (r2 = 0; r2 < t; r2++) i3 = i3.dbl();
    return i3;
  }
  var n4 = this.curve.a, o2 = this.curve.tinv, h5 = this.x, p3 = this.y, b4 = this.z, m2 = b4.redSqr().redSqr(), w4 = p3.redAdd(p3);
  for (r2 = 0; r2 < t; r2++) {
    var y6 = h5.redSqr(), S4 = w4.redSqr(), I3 = S4.redSqr(), N3 = y6.redAdd(y6).redIAdd(y6).redIAdd(n4.redMul(m2)), C4 = h5.redMul(S4), F2 = N3.redSqr().redISub(C4.redAdd(C4)), U3 = C4.redISub(F2), J2 = N3.redMul(U3);
    J2 = J2.redIAdd(J2).redISub(I3);
    var Bt3 = w4.redMul(b4);
    r2 + 1 < t && (m2 = m2.redMul(I3)), h5 = F2, b4 = Bt3, w4 = J2;
  }
  return this.curve.jpoint(h5, w4.redMul(o2), b4);
}, Tt.prototype.dbl = function() {
  return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
}, Tt.prototype._zeroDbl = function() {
  var t, r2, i3;
  if (this.zOne) {
    var n4 = this.x.redSqr(), o2 = this.y.redSqr(), h5 = o2.redSqr(), p3 = this.x.redAdd(o2).redSqr().redISub(n4).redISub(h5);
    p3 = p3.redIAdd(p3);
    var b4 = n4.redAdd(n4).redIAdd(n4), m2 = b4.redSqr().redISub(p3).redISub(p3), w4 = h5.redIAdd(h5);
    w4 = w4.redIAdd(w4), w4 = w4.redIAdd(w4), t = m2, r2 = b4.redMul(p3.redISub(m2)).redISub(w4), i3 = this.y.redAdd(this.y);
  } else {
    var y6 = this.x.redSqr(), S4 = this.y.redSqr(), I3 = S4.redSqr(), N3 = this.x.redAdd(S4).redSqr().redISub(y6).redISub(I3);
    N3 = N3.redIAdd(N3);
    var C4 = y6.redAdd(y6).redIAdd(y6), F2 = C4.redSqr(), U3 = I3.redIAdd(I3);
    U3 = U3.redIAdd(U3), U3 = U3.redIAdd(U3), t = F2.redISub(N3).redISub(N3), r2 = C4.redMul(N3.redISub(t)).redISub(U3), i3 = this.y.redMul(this.z), i3 = i3.redIAdd(i3);
  }
  return this.curve.jpoint(t, r2, i3);
}, Tt.prototype._threeDbl = function() {
  var t, r2, i3;
  if (this.zOne) {
    var n4 = this.x.redSqr(), o2 = this.y.redSqr(), h5 = o2.redSqr(), p3 = this.x.redAdd(o2).redSqr().redISub(n4).redISub(h5);
    p3 = p3.redIAdd(p3);
    var b4 = n4.redAdd(n4).redIAdd(n4).redIAdd(this.curve.a), m2 = b4.redSqr().redISub(p3).redISub(p3);
    t = m2;
    var w4 = h5.redIAdd(h5);
    w4 = w4.redIAdd(w4), w4 = w4.redIAdd(w4), r2 = b4.redMul(p3.redISub(m2)).redISub(w4), i3 = this.y.redAdd(this.y);
  } else {
    var y6 = this.z.redSqr(), S4 = this.y.redSqr(), I3 = this.x.redMul(S4), N3 = this.x.redSub(y6).redMul(this.x.redAdd(y6));
    N3 = N3.redAdd(N3).redIAdd(N3);
    var C4 = I3.redIAdd(I3);
    C4 = C4.redIAdd(C4);
    var F2 = C4.redAdd(C4);
    t = N3.redSqr().redISub(F2), i3 = this.y.redAdd(this.z).redSqr().redISub(S4).redISub(y6);
    var U3 = S4.redSqr();
    U3 = U3.redIAdd(U3), U3 = U3.redIAdd(U3), U3 = U3.redIAdd(U3), r2 = N3.redMul(C4.redISub(t)).redISub(U3);
  }
  return this.curve.jpoint(t, r2, i3);
}, Tt.prototype._dbl = function() {
  var t = this.curve.a, r2 = this.x, i3 = this.y, n4 = this.z, o2 = n4.redSqr().redSqr(), h5 = r2.redSqr(), p3 = i3.redSqr(), b4 = h5.redAdd(h5).redIAdd(h5).redIAdd(t.redMul(o2)), m2 = r2.redAdd(r2);
  m2 = m2.redIAdd(m2);
  var w4 = m2.redMul(p3), y6 = b4.redSqr().redISub(w4.redAdd(w4)), S4 = w4.redISub(y6), I3 = p3.redSqr();
  I3 = I3.redIAdd(I3), I3 = I3.redIAdd(I3), I3 = I3.redIAdd(I3);
  var N3 = b4.redMul(S4).redISub(I3), C4 = i3.redAdd(i3).redMul(n4);
  return this.curve.jpoint(y6, N3, C4);
}, Tt.prototype.trpl = function() {
  if (!this.curve.zeroA) return this.dbl().add(this);
  var t = this.x.redSqr(), r2 = this.y.redSqr(), i3 = this.z.redSqr(), n4 = r2.redSqr(), o2 = t.redAdd(t).redIAdd(t), h5 = o2.redSqr(), p3 = this.x.redAdd(r2).redSqr().redISub(t).redISub(n4);
  p3 = p3.redIAdd(p3), p3 = p3.redAdd(p3).redIAdd(p3), p3 = p3.redISub(h5);
  var b4 = p3.redSqr(), m2 = n4.redIAdd(n4);
  m2 = m2.redIAdd(m2), m2 = m2.redIAdd(m2), m2 = m2.redIAdd(m2);
  var w4 = o2.redIAdd(p3).redSqr().redISub(h5).redISub(b4).redISub(m2), y6 = r2.redMul(w4);
  y6 = y6.redIAdd(y6), y6 = y6.redIAdd(y6);
  var S4 = this.x.redMul(b4).redISub(y6);
  S4 = S4.redIAdd(S4), S4 = S4.redIAdd(S4);
  var I3 = this.y.redMul(w4.redMul(m2.redISub(w4)).redISub(p3.redMul(b4)));
  I3 = I3.redIAdd(I3), I3 = I3.redIAdd(I3), I3 = I3.redIAdd(I3);
  var N3 = this.z.redAdd(p3).redSqr().redISub(i3).redISub(b4);
  return this.curve.jpoint(S4, I3, N3);
}, Tt.prototype.mul = function(t, r2) {
  return t = new K(t, r2), this.curve._wnafMul(this, t);
}, Tt.prototype.eq = function(t) {
  if (t.type === "affine") return this.eq(t.toJ());
  if (this === t) return true;
  var r2 = this.z.redSqr(), i3 = t.z.redSqr();
  if (this.x.redMul(i3).redISub(t.x.redMul(r2)).cmpn(0) !== 0) return false;
  var n4 = r2.redMul(this.z), o2 = i3.redMul(t.z);
  return this.y.redMul(o2).redISub(t.y.redMul(n4)).cmpn(0) === 0;
}, Tt.prototype.eqXToP = function(t) {
  var r2 = this.z.redSqr(), i3 = t.toRed(this.curve.red).redMul(r2);
  if (this.x.cmp(i3) === 0) return true;
  for (var n4 = t.clone(), o2 = this.curve.redN.redMul(r2); ; ) {
    if (n4.iadd(this.curve.n), n4.cmp(this.curve.p) >= 0) return false;
    if (i3.redIAdd(o2), this.x.cmp(i3) === 0) return true;
  }
}, Tt.prototype.inspect = function() {
  return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
}, Tt.prototype.isInfinity = function() {
  return this.z.cmpn(0) === 0;
};
var qr = cr(function(e2, t) {
  var r2 = t;
  r2.base = Ze, r2.short = ka, r2.mont = null, r2.edwards = null;
});
var Kr = cr(function(e2, t) {
  var r2 = t, i3 = Jt.assert;
  function n4(p3) {
    p3.type === "short" ? this.curve = new qr.short(p3) : p3.type === "edwards" ? this.curve = new qr.edwards(p3) : this.curve = new qr.mont(p3), this.g = this.curve.g, this.n = this.curve.n, this.hash = p3.hash, i3(this.g.validate(), "Invalid curve"), i3(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  r2.PresetCurve = n4;
  function o2(p3, b4) {
    Object.defineProperty(r2, p3, { configurable: true, enumerable: true, get: function() {
      var m2 = new n4(b4);
      return Object.defineProperty(r2, p3, { configurable: true, enumerable: true, value: m2 }), m2;
    } });
  }
  o2("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: se.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), o2("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: se.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), o2("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: se.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), o2("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: se.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }), o2("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: se.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] }), o2("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: se.sha256, gRed: false, g: ["9"] }), o2("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: se.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
  var h5;
  try {
    h5 = null.crash();
  } catch {
    h5 = void 0;
  }
  o2("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: se.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", h5] });
});
function Re(e2) {
  if (!(this instanceof Re)) return new Re(e2);
  this.hash = e2.hash, this.predResist = !!e2.predResist, this.outLen = this.hash.outSize, this.minEntropy = e2.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
  var t = fe.toArray(e2.entropy, e2.entropyEnc || "hex"), r2 = fe.toArray(e2.nonce, e2.nonceEnc || "hex"), i3 = fe.toArray(e2.pers, e2.persEnc || "hex");
  Pi(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t, r2, i3);
}
var Rf = Re;
Re.prototype._init = function(t, r2, i3) {
  var n4 = t.concat(r2).concat(i3);
  this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
  for (var o2 = 0; o2 < this.V.length; o2++) this.K[o2] = 0, this.V[o2] = 1;
  this._update(n4), this._reseed = 1, this.reseedInterval = 281474976710656;
}, Re.prototype._hmac = function() {
  return new se.hmac(this.hash, this.K);
}, Re.prototype._update = function(t) {
  var r2 = this._hmac().update(this.V).update([0]);
  t && (r2 = r2.update(t)), this.K = r2.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest());
}, Re.prototype.reseed = function(t, r2, i3, n4) {
  typeof r2 != "string" && (n4 = i3, i3 = r2, r2 = null), t = fe.toArray(t, r2), i3 = fe.toArray(i3, n4), Pi(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(i3 || [])), this._reseed = 1;
}, Re.prototype.generate = function(t, r2, i3, n4) {
  if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
  typeof r2 != "string" && (n4 = i3, i3 = r2, r2 = null), i3 && (i3 = fe.toArray(i3, n4 || "hex"), this._update(i3));
  for (var o2 = []; o2.length < t; ) this.V = this._hmac().update(this.V).digest(), o2 = o2.concat(this.V);
  var h5 = o2.slice(0, t);
  return this._update(i3), this._reseed++, fe.encode(h5, r2);
};
var Fi = Jt.assert;
function kt(e2, t) {
  this.ec = e2, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);
}
var Ti = kt;
kt.fromPublic = function(t, r2, i3) {
  return r2 instanceof kt ? r2 : new kt(t, { pub: r2, pubEnc: i3 });
}, kt.fromPrivate = function(t, r2, i3) {
  return r2 instanceof kt ? r2 : new kt(t, { priv: r2, privEnc: i3 });
}, kt.prototype.validate = function() {
  var t = this.getPublic();
  return t.isInfinity() ? { result: false, reason: "Invalid public key" } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
}, kt.prototype.getPublic = function(t, r2) {
  return typeof t == "string" && (r2 = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r2 ? this.pub.encode(r2, t) : this.pub;
}, kt.prototype.getPrivate = function(t) {
  return t === "hex" ? this.priv.toString(16, 2) : this.priv;
}, kt.prototype._importPrivate = function(t, r2) {
  this.priv = new K(t, r2 || 16), this.priv = this.priv.umod(this.ec.curve.n);
}, kt.prototype._importPublic = function(t, r2) {
  if (t.x || t.y) {
    this.ec.curve.type === "mont" ? Fi(t.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && Fi(t.x && t.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(t.x, t.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(t, r2);
}, kt.prototype.derive = function(t) {
  return t.validate() || Fi(t.validate(), "public point not validated"), t.mul(this.priv).getX();
}, kt.prototype.sign = function(t, r2, i3) {
  return this.ec.sign(t, this, r2, i3);
}, kt.prototype.verify = function(t, r2) {
  return this.ec.verify(t, r2, this);
}, kt.prototype.inspect = function() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var qa = Jt.assert;
function Hr(e2, t) {
  if (e2 instanceof Hr) return e2;
  this._importDER(e2, t) || (qa(e2.r && e2.s, "Signature without r or s"), this.r = new K(e2.r, 16), this.s = new K(e2.s, 16), e2.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e2.recoveryParam);
}
var zr = Hr;
function Ka() {
  this.place = 0;
}
function Ui(e2, t) {
  var r2 = e2[t.place++];
  if (!(r2 & 128)) return r2;
  var i3 = r2 & 15;
  if (i3 === 0 || i3 > 4) return false;
  for (var n4 = 0, o2 = 0, h5 = t.place; o2 < i3; o2++, h5++) n4 <<= 8, n4 |= e2[h5], n4 >>>= 0;
  return n4 <= 127 ? false : (t.place = h5, n4);
}
function Of(e2) {
  for (var t = 0, r2 = e2.length - 1; !e2[t] && !(e2[t + 1] & 128) && t < r2; ) t++;
  return t === 0 ? e2 : e2.slice(t);
}
Hr.prototype._importDER = function(t, r2) {
  t = Jt.toArray(t, r2);
  var i3 = new Ka();
  if (t[i3.place++] !== 48) return false;
  var n4 = Ui(t, i3);
  if (n4 === false || n4 + i3.place !== t.length || t[i3.place++] !== 2) return false;
  var o2 = Ui(t, i3);
  if (o2 === false) return false;
  var h5 = t.slice(i3.place, o2 + i3.place);
  if (i3.place += o2, t[i3.place++] !== 2) return false;
  var p3 = Ui(t, i3);
  if (p3 === false || t.length !== p3 + i3.place) return false;
  var b4 = t.slice(i3.place, p3 + i3.place);
  if (h5[0] === 0) if (h5[1] & 128) h5 = h5.slice(1);
  else return false;
  if (b4[0] === 0) if (b4[1] & 128) b4 = b4.slice(1);
  else return false;
  return this.r = new K(h5), this.s = new K(b4), this.recoveryParam = null, true;
};
function ki(e2, t) {
  if (t < 128) {
    e2.push(t);
    return;
  }
  var r2 = 1 + (Math.log(t) / Math.LN2 >>> 3);
  for (e2.push(r2 | 128); --r2; ) e2.push(t >>> (r2 << 3) & 255);
  e2.push(t);
}
Hr.prototype.toDER = function(t) {
  var r2 = this.r.toArray(), i3 = this.s.toArray();
  for (r2[0] & 128 && (r2 = [0].concat(r2)), i3[0] & 128 && (i3 = [0].concat(i3)), r2 = Of(r2), i3 = Of(i3); !i3[0] && !(i3[1] & 128); ) i3 = i3.slice(1);
  var n4 = [2];
  ki(n4, r2.length), n4 = n4.concat(r2), n4.push(2), ki(n4, i3.length);
  var o2 = n4.concat(i3), h5 = [48];
  return ki(h5, o2.length), h5 = h5.concat(o2), Jt.encode(h5, t);
};
var Ha = function() {
  throw new Error("unsupported");
};
var Pf = Jt.assert;
function $t(e2) {
  if (!(this instanceof $t)) return new $t(e2);
  typeof e2 == "string" && (Pf(Object.prototype.hasOwnProperty.call(Kr, e2), "Unknown curve " + e2), e2 = Kr[e2]), e2 instanceof Kr.PresetCurve && (e2 = { curve: e2 }), this.curve = e2.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e2.curve.g, this.g.precompute(e2.curve.n.bitLength() + 1), this.hash = e2.hash || e2.curve.hash;
}
var za = $t;
$t.prototype.keyPair = function(t) {
  return new Ti(this, t);
}, $t.prototype.keyFromPrivate = function(t, r2) {
  return Ti.fromPrivate(this, t, r2);
}, $t.prototype.keyFromPublic = function(t, r2) {
  return Ti.fromPublic(this, t, r2);
}, $t.prototype.genKeyPair = function(t) {
  t || (t = {});
  for (var r2 = new Rf({ hash: this.hash, pers: t.pers, persEnc: t.persEnc || "utf8", entropy: t.entropy || Ha(this.hash.hmacStrength), entropyEnc: t.entropy && t.entropyEnc || "utf8", nonce: this.n.toArray() }), i3 = this.n.byteLength(), n4 = this.n.sub(new K(2)); ; ) {
    var o2 = new K(r2.generate(i3));
    if (!(o2.cmp(n4) > 0)) return o2.iaddn(1), this.keyFromPrivate(o2);
  }
}, $t.prototype._truncateToN = function(t, r2) {
  var i3 = t.byteLength() * 8 - this.n.bitLength();
  return i3 > 0 && (t = t.ushrn(i3)), !r2 && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;
}, $t.prototype.sign = function(t, r2, i3, n4) {
  typeof i3 == "object" && (n4 = i3, i3 = null), n4 || (n4 = {}), r2 = this.keyFromPrivate(r2, i3), t = this._truncateToN(new K(t, 16));
  for (var o2 = this.n.byteLength(), h5 = r2.getPrivate().toArray("be", o2), p3 = t.toArray("be", o2), b4 = new Rf({ hash: this.hash, entropy: h5, nonce: p3, pers: n4.pers, persEnc: n4.persEnc || "utf8" }), m2 = this.n.sub(new K(1)), w4 = 0; ; w4++) {
    var y6 = n4.k ? n4.k(w4) : new K(b4.generate(this.n.byteLength()));
    if (y6 = this._truncateToN(y6, true), !(y6.cmpn(1) <= 0 || y6.cmp(m2) >= 0)) {
      var S4 = this.g.mul(y6);
      if (!S4.isInfinity()) {
        var I3 = S4.getX(), N3 = I3.umod(this.n);
        if (N3.cmpn(0) !== 0) {
          var C4 = y6.invm(this.n).mul(N3.mul(r2.getPrivate()).iadd(t));
          if (C4 = C4.umod(this.n), C4.cmpn(0) !== 0) {
            var F2 = (S4.getY().isOdd() ? 1 : 0) | (I3.cmp(N3) !== 0 ? 2 : 0);
            return n4.canonical && C4.cmp(this.nh) > 0 && (C4 = this.n.sub(C4), F2 ^= 1), new zr({ r: N3, s: C4, recoveryParam: F2 });
          }
        }
      }
    }
  }
}, $t.prototype.verify = function(t, r2, i3, n4) {
  t = this._truncateToN(new K(t, 16)), i3 = this.keyFromPublic(i3, n4), r2 = new zr(r2, "hex");
  var o2 = r2.r, h5 = r2.s;
  if (o2.cmpn(1) < 0 || o2.cmp(this.n) >= 0 || h5.cmpn(1) < 0 || h5.cmp(this.n) >= 0) return false;
  var p3 = h5.invm(this.n), b4 = p3.mul(t).umod(this.n), m2 = p3.mul(o2).umod(this.n), w4;
  return this.curve._maxwellTrick ? (w4 = this.g.jmulAdd(b4, i3.getPublic(), m2), w4.isInfinity() ? false : w4.eqXToP(o2)) : (w4 = this.g.mulAdd(b4, i3.getPublic(), m2), w4.isInfinity() ? false : w4.getX().umod(this.n).cmp(o2) === 0);
}, $t.prototype.recoverPubKey = function(e2, t, r2, i3) {
  Pf((3 & r2) === r2, "The recovery param is more than two bits"), t = new zr(t, i3);
  var n4 = this.n, o2 = new K(e2), h5 = t.r, p3 = t.s, b4 = r2 & 1, m2 = r2 >> 1;
  if (h5.cmp(this.curve.p.umod(this.curve.n)) >= 0 && m2) throw new Error("Unable to find sencond key candinate");
  m2 ? h5 = this.curve.pointFromX(h5.add(this.curve.n), b4) : h5 = this.curve.pointFromX(h5, b4);
  var w4 = t.r.invm(n4), y6 = n4.sub(o2).mul(w4).umod(n4), S4 = p3.mul(w4).umod(n4);
  return this.g.mulAdd(y6, h5, S4);
}, $t.prototype.getKeyRecoveryParam = function(e2, t, r2, i3) {
  if (t = new zr(t, i3), t.recoveryParam !== null) return t.recoveryParam;
  for (var n4 = 0; n4 < 4; n4++) {
    var o2;
    try {
      o2 = this.recoverPubKey(e2, t, n4);
    } catch {
      continue;
    }
    if (o2.eq(r2)) return n4;
  }
  throw new Error("Unable to find valid recovery factor");
};
var La = cr(function(e2, t) {
  var r2 = t;
  r2.version = "6.5.4", r2.utils = Jt, r2.rand = function() {
    throw new Error("unsupported");
  }, r2.curve = qr, r2.curves = Kr, r2.ec = za, r2.eddsa = null;
});
var ja = La.ec;
var Qa = "signing-key/5.7.0";
var qi = new L(Qa);
var Ki = null;
function ve() {
  return Ki || (Ki = new ja("secp256k1")), Ki;
}
var Ja = class {
  constructor(t) {
    br(this, "curve", "secp256k1"), br(this, "privateKey", Kt(t)), N0(this.privateKey) !== 32 && qi.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
    const r2 = ve().keyFromPrivate(Ot(this.privateKey));
    br(this, "publicKey", "0x" + r2.getPublic(false, "hex")), br(this, "compressedPublicKey", "0x" + r2.getPublic(true, "hex")), br(this, "_isSigningKey", true);
  }
  _addPoint(t) {
    const r2 = ve().keyFromPublic(Ot(this.publicKey)), i3 = ve().keyFromPublic(Ot(t));
    return "0x" + r2.pub.add(i3.pub).encodeCompressed("hex");
  }
  signDigest(t) {
    const r2 = ve().keyFromPrivate(Ot(this.privateKey)), i3 = Ot(t);
    i3.length !== 32 && qi.throwArgumentError("bad digest length", "digest", t);
    const n4 = r2.sign(i3, { canonical: true });
    return zn({ recoveryParam: n4.recoveryParam, r: oe("0x" + n4.r.toString(16), 32), s: oe("0x" + n4.s.toString(16), 32) });
  }
  computeSharedSecret(t) {
    const r2 = ve().keyFromPrivate(Ot(this.privateKey)), i3 = ve().keyFromPublic(Ot(Df(t)));
    return oe("0x" + r2.derive(i3.getPublic()).toString(16), 32);
  }
  static isSigningKey(t) {
    return !!(t && t._isSigningKey);
  }
};
function Ga(e2, t) {
  const r2 = zn(t), i3 = { r: Ot(r2.r), s: Ot(r2.s) };
  return "0x" + ve().recoverPubKey(Ot(e2), i3, r2.recoveryParam).encode("hex", false);
}
function Df(e2, t) {
  const r2 = Ot(e2);
  if (r2.length === 32) {
    const i3 = new Ja(r2);
    return t ? "0x" + ve().keyFromPrivate(r2).getPublic(true, "hex") : i3.publicKey;
  } else {
    if (r2.length === 33) return t ? Kt(r2) : "0x" + ve().keyFromPublic(r2).getPublic(false, "hex");
    if (r2.length === 65) return t ? "0x" + ve().keyFromPublic(r2).getPublic(true, "hex") : Kt(r2);
  }
  return qi.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}
var Ya = "transactions/5.7.0";
new L(Ya);
var Ff;
(function(e2) {
  e2[e2.legacy = 0] = "legacy", e2[e2.eip2930 = 1] = "eip2930", e2[e2.eip1559 = 2] = "eip1559";
})(Ff || (Ff = {}));
function Va(e2) {
  const t = Df(e2);
  return ns(Hn(yi(Hn(t, 1)), 12));
}
function Wa(e2, t) {
  return Va(Ga(Ot(e2), t));
}
var Xa = "https://rpc.walletconnect.com/v1";
async function Tf(e2, t, r2, i3, n4, o2) {
  switch (r2.t) {
    case "eip191":
      return Uf(e2, t, r2.s);
    case "eip1271":
      return await kf(e2, t, r2.s, i3, n4, o2);
    default:
      throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${r2.t}`);
  }
}
function Uf(e2, t, r2) {
  return Wa(ff(t), r2).toLowerCase() === e2.toLowerCase();
}
async function kf(e2, t, r2, i3, n4, o2) {
  try {
    const h5 = "0x1626ba7e", p3 = "0000000000000000000000000000000000000000000000000000000000000040", b4 = "0000000000000000000000000000000000000000000000000000000000000041", m2 = r2.substring(2), w4 = ff(t).substring(2), y6 = h5 + w4 + p3 + b4 + m2, S4 = await fetch(`${o2 || Xa}/?chainId=${i3}&projectId=${n4}`, { method: "POST", body: JSON.stringify({ id: Za(), jsonrpc: "2.0", method: "eth_call", params: [{ to: e2, data: y6 }, "latest"] }) }), { result: I3 } = await S4.json();
    return I3 ? I3.slice(0, h5.length).toLowerCase() === h5.toLowerCase() : false;
  } catch (h5) {
    return console.error("isValidEip1271Signature: ", h5), false;
  }
}
function Za() {
  return Date.now() + Math.floor(Math.random() * 1e3);
}
var $a = Object.defineProperty;
var tu = Object.defineProperties;
var eu = Object.getOwnPropertyDescriptors;
var qf = Object.getOwnPropertySymbols;
var ru = Object.prototype.hasOwnProperty;
var iu = Object.prototype.propertyIsEnumerable;
var Kf = (e2, t, r2) => t in e2 ? $a(e2, t, { enumerable: true, configurable: true, writable: true, value: r2 }) : e2[t] = r2;
var Hi = (e2, t) => {
  for (var r2 in t || (t = {})) ru.call(t, r2) && Kf(e2, r2, t[r2]);
  if (qf) for (var r2 of qf(t)) iu.call(t, r2) && Kf(e2, r2, t[r2]);
  return e2;
};
var Hf = (e2, t) => tu(e2, eu(t));
var nu = "did:pkh:";
var Lr = (e2) => e2 == null ? void 0 : e2.split(":");
var zi = (e2) => {
  const t = e2 && Lr(e2);
  if (t) return e2.includes(nu) ? t[3] : t[1];
};
var fu = (e2) => {
  const t = e2 && Lr(e2);
  if (t) return t[2] + ":" + t[3];
};
var Li = (e2) => {
  const t = e2 && Lr(e2);
  if (t) return t.pop();
};
async function ou(e2) {
  const { cacao: t, projectId: r2 } = e2, { s: i3, p: n4 } = t, o2 = zf(n4, n4.iss), h5 = Li(n4.iss);
  return await Tf(h5, o2, i3, zi(n4.iss), r2);
}
var zf = (e2, t) => {
  const r2 = `${e2.domain} wants you to sign in with your Ethereum account:`, i3 = Li(t);
  if (!e2.aud && !e2.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
  let n4 = e2.statement || void 0;
  const o2 = `URI: ${e2.aud || e2.uri}`, h5 = `Version: ${e2.version}`, p3 = `Chain ID: ${zi(t)}`, b4 = `Nonce: ${e2.nonce}`, m2 = `Issued At: ${e2.iat}`, w4 = e2.resources ? `Resources:${e2.resources.map((S4) => `
- ${S4}`).join("")}` : void 0, y6 = Qr(e2.resources);
  if (y6) {
    const S4 = Oe(y6);
    n4 = Ji(n4, S4);
  }
  return [r2, i3, "", n4, "", o2, h5, p3, b4, m2, w4].filter((S4) => S4 != null).join(`
`);
};
function Jf(e2) {
  return Buffer.from(JSON.stringify(e2)).toString("base64");
}
function Gf(e2) {
  return JSON.parse(Buffer.from(e2, "base64").toString("utf-8"));
}
function me(e2) {
  if (!e2) throw new Error("No recap provided, value is undefined");
  if (!e2.att) throw new Error("No `att` property found");
  const t = Object.keys(e2.att);
  if (!(t != null && t.length)) throw new Error("No resources found in `att` property");
  t.forEach((r2) => {
    const i3 = e2.att[r2];
    if (Array.isArray(i3)) throw new Error(`Resource must be an object: ${r2}`);
    if (typeof i3 != "object") throw new Error(`Resource must be an object: ${r2}`);
    if (!Object.keys(i3).length) throw new Error(`Resource object is empty: ${r2}`);
    Object.keys(i3).forEach((n4) => {
      const o2 = i3[n4];
      if (!Array.isArray(o2)) throw new Error(`Ability limits ${n4} must be an array of objects, found: ${o2}`);
      if (!o2.length) throw new Error(`Value of ${n4} is empty array, must be an array with objects`);
      o2.forEach((h5) => {
        if (typeof h5 != "object") throw new Error(`Ability limits (${n4}) must be an array of objects, found: ${h5}`);
      });
    });
  });
}
function Yf(e2, t, r2, i3 = {}) {
  return r2 == null ? void 0 : r2.sort((n4, o2) => n4.localeCompare(o2)), { att: { [e2]: ji(t, r2, i3) } };
}
function ji(e2, t, r2 = {}) {
  t = t == null ? void 0 : t.sort((n4, o2) => n4.localeCompare(o2));
  const i3 = t.map((n4) => ({ [`${e2}/${n4}`]: [r2] }));
  return Object.assign({}, ...i3);
}
function jr(e2) {
  return me(e2), `urn:recap:${Jf(e2).replace(/=/g, "")}`;
}
function Oe(e2) {
  const t = Gf(e2.replace("urn:recap:", ""));
  return me(t), t;
}
function cu(e2, t, r2) {
  const i3 = Yf(e2, t, r2);
  return jr(i3);
}
function Qi(e2) {
  return e2 && e2.includes("urn:recap:");
}
function lu(e2, t) {
  const r2 = Oe(e2), i3 = Oe(t), n4 = Wf(r2, i3);
  return jr(n4);
}
function Wf(e2, t) {
  me(e2), me(t);
  const r2 = Object.keys(e2.att).concat(Object.keys(t.att)).sort((n4, o2) => n4.localeCompare(o2)), i3 = { att: {} };
  return r2.forEach((n4) => {
    var o2, h5;
    Object.keys(((o2 = e2.att) == null ? void 0 : o2[n4]) || {}).concat(Object.keys(((h5 = t.att) == null ? void 0 : h5[n4]) || {})).sort((p3, b4) => p3.localeCompare(b4)).forEach((p3) => {
      var b4, m2;
      i3.att[n4] = Hf(Hi({}, i3.att[n4]), { [p3]: ((b4 = e2.att[n4]) == null ? void 0 : b4[p3]) || ((m2 = t.att[n4]) == null ? void 0 : m2[p3]) });
    });
  }), i3;
}
function Ji(e2 = "", t) {
  me(t);
  const r2 = "I further authorize the stated URI to perform the following actions on my behalf: ";
  if (e2.includes(r2)) return e2;
  const i3 = [];
  let n4 = 0;
  Object.keys(t.att).forEach((p3) => {
    const b4 = Object.keys(t.att[p3]).map((y6) => ({ ability: y6.split("/")[0], action: y6.split("/")[1] }));
    b4.sort((y6, S4) => y6.action.localeCompare(S4.action));
    const m2 = {};
    b4.forEach((y6) => {
      m2[y6.ability] || (m2[y6.ability] = []), m2[y6.ability].push(y6.action);
    });
    const w4 = Object.keys(m2).map((y6) => (n4++, `(${n4}) '${y6}': '${m2[y6].join("', '")}' for '${p3}'.`));
    i3.push(w4.join(", ").replace(".,", "."));
  });
  const o2 = i3.join(" "), h5 = `${r2}${o2}`;
  return `${e2 ? e2 + " " : ""}${h5}`;
}
function du(e2) {
  var t;
  const r2 = Oe(e2);
  me(r2);
  const i3 = (t = r2.att) == null ? void 0 : t.eip155;
  return i3 ? Object.keys(i3).map((n4) => n4.split("/")[1]) : [];
}
function pu(e2) {
  const t = Oe(e2);
  me(t);
  const r2 = [];
  return Object.values(t.att).forEach((i3) => {
    Object.values(i3).forEach((n4) => {
      var o2;
      (o2 = n4 == null ? void 0 : n4[0]) != null && o2.chains && r2.push(n4[0].chains);
    });
  }), [...new Set(r2.flat())];
}
function Qr(e2) {
  if (!e2) return;
  const t = e2 == null ? void 0 : e2[e2.length - 1];
  return Qi(t) ? t : void 0;
}
var Gi = "base10";
var zt = "base16";
var Jr = "base64pad";
var Gr = "utf8";
var Yi = 0;
var lr = 1;
var vu = 0;
var Zf = 1;
var Vi = 12;
var Wi = 32;
function mu() {
  const e2 = cn.generateKeyPair();
  return { privateKey: toString(e2.secretKey, zt), publicKey: toString(e2.publicKey, zt) };
}
function gu() {
  const e2 = (0, import_random.randomBytes)(Wi);
  return toString(e2, zt);
}
function Au(e2, t) {
  const r2 = cn.sharedKey(fromString(e2, zt), fromString(t, zt), true), i3 = new import_hkdf.HKDF(import_sha256.SHA256, r2).expand(Wi);
  return toString(i3, zt);
}
function bu(e2) {
  const t = (0, import_sha256.hash)(fromString(e2, zt));
  return toString(t, zt);
}
function yu(e2) {
  const t = (0, import_sha256.hash)(fromString(e2, Gr));
  return toString(t, zt);
}
function $f(e2) {
  return fromString(`${e2}`, Gi);
}
function Mr(e2) {
  return Number(toString(e2, Gi));
}
function wu(e2) {
  const t = $f(typeof e2.type < "u" ? e2.type : Yi);
  if (Mr(t) === lr && typeof e2.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
  const r2 = typeof e2.senderPublicKey < "u" ? fromString(e2.senderPublicKey, zt) : void 0, i3 = typeof e2.iv < "u" ? fromString(e2.iv, zt) : (0, import_random.randomBytes)(Vi), n4 = new import_chacha20poly1305.ChaCha20Poly1305(fromString(e2.symKey, zt)).seal(i3, fromString(e2.message, Gr));
  return to({ type: t, sealed: n4, iv: i3, senderPublicKey: r2 });
}
function xu(e2) {
  const t = new import_chacha20poly1305.ChaCha20Poly1305(fromString(e2.symKey, zt)), { sealed: r2, iv: i3 } = Xi(e2.encoded), n4 = t.open(i3, r2);
  if (n4 === null) throw new Error("Failed to decrypt");
  return toString(n4, Gr);
}
function to(e2) {
  if (Mr(e2.type) === lr) {
    if (typeof e2.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
    return toString(concat([e2.type, e2.senderPublicKey, e2.iv, e2.sealed]), Jr);
  }
  return toString(concat([e2.type, e2.iv, e2.sealed]), Jr);
}
function Xi(e2) {
  const t = fromString(e2, Jr), r2 = t.slice(vu, Zf), i3 = Zf;
  if (Mr(r2) === lr) {
    const p3 = i3 + Wi, b4 = p3 + Vi, m2 = t.slice(i3, p3), w4 = t.slice(p3, b4), y6 = t.slice(b4);
    return { type: r2, sealed: y6, iv: w4, senderPublicKey: m2 };
  }
  const n4 = i3 + Vi, o2 = t.slice(i3, n4), h5 = t.slice(n4);
  return { type: r2, sealed: h5, iv: o2 };
}
function Mu(e2, t) {
  const r2 = Xi(e2);
  return eo({ type: Mr(r2.type), senderPublicKey: typeof r2.senderPublicKey < "u" ? toString(r2.senderPublicKey, zt) : void 0, receiverPublicKey: t == null ? void 0 : t.receiverPublicKey });
}
function eo(e2) {
  const t = (e2 == null ? void 0 : e2.type) || Yi;
  if (t === lr) {
    if (typeof (e2 == null ? void 0 : e2.senderPublicKey) > "u") throw new Error("missing sender public key");
    if (typeof (e2 == null ? void 0 : e2.receiverPublicKey) > "u") throw new Error("missing receiver public key");
  }
  return { type: t, senderPublicKey: e2 == null ? void 0 : e2.senderPublicKey, receiverPublicKey: e2 == null ? void 0 : e2.receiverPublicKey };
}
function Eu(e2) {
  return e2.type === lr && typeof e2.senderPublicKey == "string" && typeof e2.receiverPublicKey == "string";
}
var ro = "irn";
function Su(e2) {
  return (e2 == null ? void 0 : e2.relay) || { protocol: ro };
}
function Nu(e2) {
  const t = C[e2];
  if (typeof t > "u") throw new Error(`Relay Protocol not supported: ${e2}`);
  return t;
}
var Iu = Object.defineProperty;
var _u = Object.defineProperties;
var Bu = Object.getOwnPropertyDescriptors;
var io = Object.getOwnPropertySymbols;
var Cu = Object.prototype.hasOwnProperty;
var Ru = Object.prototype.propertyIsEnumerable;
var no = (e2, t, r2) => t in e2 ? Iu(e2, t, { enumerable: true, configurable: true, writable: true, value: r2 }) : e2[t] = r2;
var fo = (e2, t) => {
  for (var r2 in t || (t = {})) Cu.call(t, r2) && no(e2, r2, t[r2]);
  if (io) for (var r2 of io(t)) Ru.call(t, r2) && no(e2, r2, t[r2]);
  return e2;
};
var Ou = (e2, t) => _u(e2, Bu(t));
function oo(e2, t = "-") {
  const r2 = {}, i3 = "relay" + t;
  return Object.keys(e2).forEach((n4) => {
    if (n4.startsWith(i3)) {
      const o2 = n4.replace(i3, ""), h5 = e2[n4];
      r2[o2] = h5;
    }
  }), r2;
}
function Pu(e2) {
  e2 = e2.includes("wc://") ? e2.replace("wc://", "") : e2, e2 = e2.includes("wc:") ? e2.replace("wc:", "") : e2;
  const t = e2.indexOf(":"), r2 = e2.indexOf("?") !== -1 ? e2.indexOf("?") : void 0, i3 = e2.substring(0, t), n4 = e2.substring(t + 1, r2).split("@"), o2 = typeof r2 < "u" ? e2.substring(r2) : "", h5 = Nr.parse(o2), p3 = typeof h5.methods == "string" ? h5.methods.split(",") : void 0;
  return { protocol: i3, topic: so(n4[0]), version: parseInt(n4[1], 10), symKey: h5.symKey, relay: oo(h5), methods: p3, expiryTimestamp: h5.expiryTimestamp ? parseInt(h5.expiryTimestamp, 10) : void 0 };
}
function so(e2) {
  return e2.startsWith("//") ? e2.substring(2) : e2;
}
function ao(e2, t = "-") {
  const r2 = "relay", i3 = {};
  return Object.keys(e2).forEach((n4) => {
    const o2 = r2 + t + n4;
    e2[n4] && (i3[o2] = e2[n4]);
  }), i3;
}
function Du(e2) {
  return `${e2.protocol}:${e2.topic}@${e2.version}?` + Nr.stringify(fo(Ou(fo({ symKey: e2.symKey }, ao(e2.relay)), { expiryTimestamp: e2.expiryTimestamp }), e2.methods ? { methods: e2.methods.join(",") } : {}));
}
function $e(e2) {
  const t = [];
  return e2.forEach((r2) => {
    const [i3, n4] = r2.split(":");
    t.push(`${i3}:${n4}`);
  }), t;
}
function co(e2) {
  const t = [];
  return Object.values(e2).forEach((r2) => {
    t.push(...$e(r2.accounts));
  }), t;
}
function lo(e2, t) {
  const r2 = [];
  return Object.values(e2).forEach((i3) => {
    $e(i3.accounts).includes(t) && r2.push(...i3.methods);
  }), r2;
}
function po(e2, t) {
  const r2 = [];
  return Object.values(e2).forEach((i3) => {
    $e(i3.accounts).includes(t) && r2.push(...i3.events);
  }), r2;
}
function Zi(e2) {
  return e2.includes(":");
}
function vo(e2) {
  return Zi(e2) ? e2.split(":")[0] : e2;
}
function mo(e2) {
  const t = {};
  return e2 == null ? void 0 : e2.forEach((r2) => {
    const [i3, n4] = r2.split(":");
    t[i3] || (t[i3] = { accounts: [], chains: [], events: [] }), t[i3].accounts.push(r2), t[i3].chains.push(`${i3}:${n4}`);
  }), t;
}
function ju(e2, t) {
  t = t.map((i3) => i3.replace("did:pkh:", ""));
  const r2 = mo(t);
  for (const [i3, n4] of Object.entries(r2)) n4.methods ? n4.methods = ge(n4.methods, e2) : n4.methods = e2, n4.events = ["chainChanged", "accountsChanged"];
  return r2;
}
var go = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
var Ao = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
function xe(e2, t) {
  const { message: r2, code: i3 } = Ao[e2];
  return { message: t ? `${r2} ${t}` : r2, code: i3 };
}
function tr(e2, t) {
  const { message: r2, code: i3 } = go[e2];
  return { message: t ? `${r2} ${t}` : r2, code: i3 };
}
function Er(e2, t) {
  return Array.isArray(e2) ? typeof t < "u" && e2.length ? e2.every(t) : true : false;
}
function Yr(e2) {
  return Object.getPrototypeOf(e2) === Object.prototype && Object.keys(e2).length;
}
function Pe(e2) {
  return typeof e2 > "u";
}
function Gt(e2, t) {
  return t && Pe(e2) ? true : typeof e2 == "string" && !!e2.trim().length;
}
function Vr(e2, t) {
  return t && Pe(e2) ? true : typeof e2 == "number" && !isNaN(e2);
}
function Qu(e2, t) {
  const { requiredNamespaces: r2 } = t, i3 = Object.keys(e2.namespaces), n4 = Object.keys(r2);
  let o2 = true;
  return _e(n4, i3) ? (i3.forEach((h5) => {
    const { accounts: p3, methods: b4, events: m2 } = e2.namespaces[h5], w4 = $e(p3), y6 = r2[h5];
    (!_e(_r(h5, y6), w4) || !_e(y6.methods, b4) || !_e(y6.events, m2)) && (o2 = false);
  }), o2) : false;
}
function Sr(e2) {
  return Gt(e2, false) && e2.includes(":") ? e2.split(":").length === 2 : false;
}
function bo(e2) {
  if (Gt(e2, false) && e2.includes(":")) {
    const t = e2.split(":");
    if (t.length === 3) {
      const r2 = t[0] + ":" + t[1];
      return !!t[2] && Sr(r2);
    }
  }
  return false;
}
function Ju(e2) {
  if (Gt(e2, false)) try {
    return typeof new URL(e2) < "u";
  } catch {
    return false;
  }
  return false;
}
function Gu(e2) {
  var t;
  return (t = e2 == null ? void 0 : e2.proposer) == null ? void 0 : t.publicKey;
}
function Yu(e2) {
  return e2 == null ? void 0 : e2.topic;
}
function Vu(e2, t) {
  let r2 = null;
  return Gt(e2 == null ? void 0 : e2.publicKey, false) || (r2 = xe("MISSING_OR_INVALID", `${t} controller public key should be a string`)), r2;
}
function tn(e2) {
  let t = true;
  return Er(e2) ? e2.length && (t = e2.every((r2) => Gt(r2, false))) : t = false, t;
}
function yo(e2, t, r2) {
  let i3 = null;
  return Er(t) && t.length ? t.forEach((n4) => {
    i3 || Sr(n4) || (i3 = tr("UNSUPPORTED_CHAINS", `${r2}, chain ${n4} should be a string and conform to "namespace:chainId" format`));
  }) : Sr(e2) || (i3 = tr("UNSUPPORTED_CHAINS", `${r2}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), i3;
}
function wo(e2, t, r2) {
  let i3 = null;
  return Object.entries(e2).forEach(([n4, o2]) => {
    if (i3) return;
    const h5 = yo(n4, _r(n4, o2), `${t} ${r2}`);
    h5 && (i3 = h5);
  }), i3;
}
function xo(e2, t) {
  let r2 = null;
  return Er(e2) ? e2.forEach((i3) => {
    r2 || bo(i3) || (r2 = tr("UNSUPPORTED_ACCOUNTS", `${t}, account ${i3} should be a string and conform to "namespace:chainId:address" format`));
  }) : r2 = tr("UNSUPPORTED_ACCOUNTS", `${t}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), r2;
}
function Mo(e2, t) {
  let r2 = null;
  return Object.values(e2).forEach((i3) => {
    if (r2) return;
    const n4 = xo(i3 == null ? void 0 : i3.accounts, `${t} namespace`);
    n4 && (r2 = n4);
  }), r2;
}
function Eo(e2, t) {
  let r2 = null;
  return tn(e2 == null ? void 0 : e2.methods) ? tn(e2 == null ? void 0 : e2.events) || (r2 = tr("UNSUPPORTED_EVENTS", `${t}, events should be an array of strings or empty array for no events`)) : r2 = tr("UNSUPPORTED_METHODS", `${t}, methods should be an array of strings or empty array for no methods`), r2;
}
function en(e2, t) {
  let r2 = null;
  return Object.values(e2).forEach((i3) => {
    if (r2) return;
    const n4 = Eo(i3, `${t}, namespace`);
    n4 && (r2 = n4);
  }), r2;
}
function Wu(e2, t, r2) {
  let i3 = null;
  if (e2 && Yr(e2)) {
    const n4 = en(e2, t);
    n4 && (i3 = n4);
    const o2 = wo(e2, t, r2);
    o2 && (i3 = o2);
  } else i3 = xe("MISSING_OR_INVALID", `${t}, ${r2} should be an object with data`);
  return i3;
}
function So(e2, t) {
  let r2 = null;
  if (e2 && Yr(e2)) {
    const i3 = en(e2, t);
    i3 && (r2 = i3);
    const n4 = Mo(e2, t);
    n4 && (r2 = n4);
  } else r2 = xe("MISSING_OR_INVALID", `${t}, namespaces should be an object with data`);
  return r2;
}
function No(e2) {
  return Gt(e2.protocol, true);
}
function Xu(e2, t) {
  let r2 = false;
  return t && !e2 ? r2 = true : e2 && Er(e2) && e2.length && e2.forEach((i3) => {
    r2 = No(i3);
  }), r2;
}
function Zu(e2) {
  return typeof e2 == "number";
}
function $u(e2) {
  return typeof e2 < "u" && typeof e2 !== null;
}
function th(e2) {
  return !(!e2 || typeof e2 != "object" || !e2.code || !Vr(e2.code, false) || !e2.message || !Gt(e2.message, false));
}
function eh(e2) {
  return !(Pe(e2) || !Gt(e2.method, false));
}
function rh(e2) {
  return !(Pe(e2) || Pe(e2.result) && Pe(e2.error) || !Vr(e2.id, false) || !Gt(e2.jsonrpc, false));
}
function ih(e2) {
  return !(Pe(e2) || !Gt(e2.name, false));
}
function nh(e2, t) {
  return !(!Sr(t) || !co(e2).includes(t));
}
function fh(e2, t, r2) {
  return Gt(r2, false) ? lo(e2, t).includes(r2) : false;
}
function oh(e2, t, r2) {
  return Gt(r2, false) ? po(e2, t).includes(r2) : false;
}
function Io(e2, t, r2) {
  let i3 = null;
  const n4 = sh(e2), o2 = ah(t), h5 = Object.keys(n4), p3 = Object.keys(o2), b4 = _o(Object.keys(e2)), m2 = _o(Object.keys(t)), w4 = b4.filter((y6) => !m2.includes(y6));
  return w4.length && (i3 = xe("NON_CONFORMING_NAMESPACES", `${r2} namespaces keys don't satisfy requiredNamespaces.
      Required: ${w4.toString()}
      Received: ${Object.keys(t).toString()}`)), _e(h5, p3) || (i3 = xe("NON_CONFORMING_NAMESPACES", `${r2} namespaces chains don't satisfy required namespaces.
      Required: ${h5.toString()}
      Approved: ${p3.toString()}`)), Object.keys(t).forEach((y6) => {
    if (!y6.includes(":") || i3) return;
    const S4 = $e(t[y6].accounts);
    S4.includes(y6) || (i3 = xe("NON_CONFORMING_NAMESPACES", `${r2} namespaces accounts don't satisfy namespace accounts for ${y6}
        Required: ${y6}
        Approved: ${S4.toString()}`));
  }), h5.forEach((y6) => {
    i3 || (_e(n4[y6].methods, o2[y6].methods) ? _e(n4[y6].events, o2[y6].events) || (i3 = xe("NON_CONFORMING_NAMESPACES", `${r2} namespaces events don't satisfy namespace events for ${y6}`)) : i3 = xe("NON_CONFORMING_NAMESPACES", `${r2} namespaces methods don't satisfy namespace methods for ${y6}`));
  }), i3;
}
function sh(e2) {
  const t = {};
  return Object.keys(e2).forEach((r2) => {
    var i3;
    r2.includes(":") ? t[r2] = e2[r2] : (i3 = e2[r2].chains) == null || i3.forEach((n4) => {
      t[n4] = { methods: e2[r2].methods, events: e2[r2].events };
    });
  }), t;
}
function _o(e2) {
  return [...new Set(e2.map((t) => t.includes(":") ? t.split(":")[0] : t))];
}
function ah(e2) {
  const t = {};
  return Object.keys(e2).forEach((r2) => {
    if (r2.includes(":")) t[r2] = e2[r2];
    else {
      const i3 = $e(e2[r2].accounts);
      i3 == null ? void 0 : i3.forEach((n4) => {
        t[n4] = { accounts: e2[r2].accounts.filter((o2) => o2.includes(`${n4}:`)), methods: e2[r2].methods, events: e2[r2].events };
      });
    }
  }), t;
}
function uh(e2, t) {
  return Vr(e2, false) && e2 <= t.max && e2 >= t.min;
}
function hh() {
  const e2 = We();
  return new Promise((t) => {
    switch (e2) {
      case qt.browser:
        t(Bo());
        break;
      case qt.reactNative:
        t(Co());
        break;
      case qt.node:
        t(Ro());
        break;
      default:
        t(true);
    }
  });
}
function Bo() {
  return pr() && (navigator == null ? void 0 : navigator.onLine);
}
async function Co() {
  if (er() && typeof global < "u" && global != null && global.NetInfo) {
    const e2 = await (global == null ? void 0 : global.NetInfo.fetch());
    return e2 == null ? void 0 : e2.isConnected;
  }
  return true;
}
function Ro() {
  return true;
}
function ch(e2) {
  switch (We()) {
    case qt.browser:
      Oo(e2);
      break;
    case qt.reactNative:
      Po(e2);
      break;
    case qt.node:
      break;
  }
}
function Oo(e2) {
  !er() && pr() && (window.addEventListener("online", () => e2(true)), window.addEventListener("offline", () => e2(false)));
}
function Po(e2) {
  er() && typeof global < "u" && global != null && global.NetInfo && (global == null ? void 0 : global.NetInfo.addEventListener((t) => e2(t == null ? void 0 : t.isConnected)));
}
var rn = {};
var lh = class {
  static get(t) {
    return rn[t];
  }
  static set(t, r2) {
    rn[t] = r2;
  }
  static delete(t) {
    delete rn[t];
  }
};

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js
var PARSE_ERROR = "PARSE_ERROR";
var INVALID_REQUEST = "INVALID_REQUEST";
var METHOD_NOT_FOUND = "METHOD_NOT_FOUND";
var INVALID_PARAMS = "INVALID_PARAMS";
var INTERNAL_ERROR = "INTERNAL_ERROR";
var SERVER_ERROR = "SERVER_ERROR";
var RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];
var SERVER_ERROR_CODE_RANGE = [-32e3, -32099];
var STANDARD_ERROR_MAP = {
  [PARSE_ERROR]: { code: -32700, message: "Parse error" },
  [INVALID_REQUEST]: { code: -32600, message: "Invalid Request" },
  [METHOD_NOT_FOUND]: { code: -32601, message: "Method not found" },
  [INVALID_PARAMS]: { code: -32602, message: "Invalid params" },
  [INTERNAL_ERROR]: { code: -32603, message: "Internal error" },
  [SERVER_ERROR]: { code: -32e3, message: "Server error" }
};
var DEFAULT_ERROR = SERVER_ERROR;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js
function isServerErrorCode(code) {
  return code <= SERVER_ERROR_CODE_RANGE[0] && code >= SERVER_ERROR_CODE_RANGE[1];
}
function isReservedErrorCode(code) {
  return RESERVED_ERROR_CODES.includes(code);
}
function isValidErrorCode(code) {
  return typeof code === "number";
}
function getError(type) {
  if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return STANDARD_ERROR_MAP[type];
}
function getErrorByCode(code) {
  const match = Object.values(STANDARD_ERROR_MAP).find((e2) => e2.code === code);
  if (!match) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return match;
}
function validateJsonRpcError(response) {
  if (typeof response.error.code === "undefined") {
    return { valid: false, error: "Missing code for JSON-RPC error" };
  }
  if (typeof response.error.message === "undefined") {
    return { valid: false, error: "Missing message for JSON-RPC error" };
  }
  if (!isValidErrorCode(response.error.code)) {
    return {
      valid: false,
      error: `Invalid error code type for JSON-RPC: ${response.error.code}`
    };
  }
  if (isReservedErrorCode(response.error.code)) {
    const error = getErrorByCode(response.error.code);
    if (error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message && response.error.message === error.message) {
      return {
        valid: false,
        error: `Invalid error code message for JSON-RPC: ${response.error.code}`
      };
    }
  }
  return { valid: true };
}
function parseConnectionError(e2, url, type) {
  return e2.message.includes("getaddrinfo ENOTFOUND") || e2.message.includes("connect ECONNREFUSED") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e2;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js
function payloadId(entropy = 3) {
  const date = Date.now() * Math.pow(10, entropy);
  const extra = Math.floor(Math.random() * Math.pow(10, entropy));
  return date + extra;
}
function getBigIntRpcId(entropy = 6) {
  return BigInt(payloadId(entropy));
}
function formatJsonRpcRequest(method, params, id) {
  return {
    id: id || payloadId(),
    jsonrpc: "2.0",
    method,
    params
  };
}
function formatJsonRpcResult(id, result) {
  return {
    id,
    jsonrpc: "2.0",
    result
  };
}
function formatJsonRpcError(id, error, data) {
  return {
    id,
    jsonrpc: "2.0",
    error: formatErrorMessage(error, data)
  };
}
function formatErrorMessage(error, data) {
  if (typeof error === "undefined") {
    return getError(INTERNAL_ERROR);
  }
  if (typeof error === "string") {
    error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), { message: error });
  }
  if (typeof data !== "undefined") {
    error.data = data;
  }
  if (isReservedErrorCode(error.code)) {
    error = getErrorByCode(error.code);
  }
  return error;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  DEFAULT_ERROR: () => DEFAULT_ERROR,
  IBaseJsonRpcProvider: () => n,
  IEvents: () => e,
  IJsonRpcConnection: () => o,
  IJsonRpcProvider: () => r,
  INTERNAL_ERROR: () => INTERNAL_ERROR,
  INVALID_PARAMS: () => INVALID_PARAMS,
  INVALID_REQUEST: () => INVALID_REQUEST,
  METHOD_NOT_FOUND: () => METHOD_NOT_FOUND,
  PARSE_ERROR: () => PARSE_ERROR,
  RESERVED_ERROR_CODES: () => RESERVED_ERROR_CODES,
  SERVER_ERROR: () => SERVER_ERROR,
  SERVER_ERROR_CODE_RANGE: () => SERVER_ERROR_CODE_RANGE,
  STANDARD_ERROR_MAP: () => STANDARD_ERROR_MAP,
  formatErrorMessage: () => formatErrorMessage,
  formatJsonRpcError: () => formatJsonRpcError,
  formatJsonRpcRequest: () => formatJsonRpcRequest,
  formatJsonRpcResult: () => formatJsonRpcResult,
  getBigIntRpcId: () => getBigIntRpcId,
  getError: () => getError,
  getErrorByCode: () => getErrorByCode,
  isHttpUrl: () => isHttpUrl,
  isJsonRpcError: () => isJsonRpcError,
  isJsonRpcPayload: () => isJsonRpcPayload,
  isJsonRpcRequest: () => isJsonRpcRequest,
  isJsonRpcResponse: () => isJsonRpcResponse,
  isJsonRpcResult: () => isJsonRpcResult,
  isJsonRpcValidationInvalid: () => isJsonRpcValidationInvalid,
  isLocalhostUrl: () => isLocalhostUrl,
  isNodeJs: () => isNodeJs,
  isReservedErrorCode: () => isReservedErrorCode,
  isServerErrorCode: () => isServerErrorCode,
  isValidDefaultRoute: () => isValidDefaultRoute,
  isValidErrorCode: () => isValidErrorCode,
  isValidLeadingWildcardRoute: () => isValidLeadingWildcardRoute,
  isValidRoute: () => isValidRoute,
  isValidTrailingWildcardRoute: () => isValidTrailingWildcardRoute,
  isValidWildcardRoute: () => isValidWildcardRoute,
  isWsUrl: () => isWsUrl,
  parseConnectionError: () => parseConnectionError,
  payloadId: () => payloadId,
  validateJsonRpcError: () => validateJsonRpcError
});

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js
var env_exports = {};
__export(env_exports, {
  isNodeJs: () => isNodeJs
});
var import_environment = __toESM(require_cjs4());
__reExport(env_exports, __toESM(require_cjs4()));
var isNodeJs = import_environment.isNode;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
__reExport(esm_exports, env_exports);

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js
function isValidRoute(route) {
  if (route.includes("*")) {
    return isValidWildcardRoute(route);
  }
  if (/\W/g.test(route)) {
    return false;
  }
  return true;
}
function isValidDefaultRoute(route) {
  return route === "*";
}
function isValidWildcardRoute(route) {
  if (isValidDefaultRoute(route)) {
    return true;
  }
  if (!route.includes("*")) {
    return false;
  }
  if (route.split("*").length !== 2) {
    return false;
  }
  if (route.split("*").filter((x4) => x4.trim() === "").length !== 1) {
    return false;
  }
  return true;
}
function isValidLeadingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[0].trim();
}
function isValidTrailingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[1].trim();
}

// node_modules/@walletconnect/jsonrpc-types/dist/index.es.js
var e = class {
};
var o = class extends e {
  constructor(c4) {
    super();
  }
};
var n = class extends e {
  constructor() {
    super();
  }
};
var r = class extends n {
  constructor(c4) {
    super();
  }
};

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js
var HTTP_REGEX = "^https?:";
var WS_REGEX = "^wss?:";
function getUrlProtocol(url) {
  const matches = url.match(new RegExp(/^\w+:/, "gi"));
  if (!matches || !matches.length)
    return;
  return matches[0];
}
function matchRegexProtocol(url, regex) {
  const protocol = getUrlProtocol(url);
  if (typeof protocol === "undefined")
    return false;
  return new RegExp(regex).test(protocol);
}
function isHttpUrl(url) {
  return matchRegexProtocol(url, HTTP_REGEX);
}
function isWsUrl(url) {
  return matchRegexProtocol(url, WS_REGEX);
}
function isLocalhostUrl(url) {
  return new RegExp("wss?://localhost(:d{2,5})?").test(url);
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js
function isJsonRpcPayload(payload) {
  return typeof payload === "object" && "id" in payload && "jsonrpc" in payload && payload.jsonrpc === "2.0";
}
function isJsonRpcRequest(payload) {
  return isJsonRpcPayload(payload) && "method" in payload;
}
function isJsonRpcResponse(payload) {
  return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));
}
function isJsonRpcResult(payload) {
  return "result" in payload;
}
function isJsonRpcError(payload) {
  return "error" in payload;
}
function isJsonRpcValidationInvalid(validation) {
  return "error" in validation && validation.valid === false;
}

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/core/dist/index.es.js
var import_events5 = __toESM(require_events());

// node_modules/destr/dist/index.mjs
var suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
var suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
var JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`);
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  if (value[0] === '"' && value[value.length - 1] === '"' && value.indexOf("\\") === -1) {
    return value.slice(1, -1);
  }
  const _value = value.trim();
  if (_value.length <= 9) {
    switch (_value.toLowerCase()) {
      case "true": {
        return true;
      }
      case "false": {
        return false;
      }
      case "undefined": {
        return void 0;
      }
      case "null": {
        return null;
      }
      case "nan": {
        return Number.NaN;
      }
      case "infinity": {
        return Number.POSITIVE_INFINITY;
      }
      case "-infinity": {
        return Number.NEGATIVE_INFINITY;
      }
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}

// node_modules/@thirdweb-dev/wallets/node_modules/unstorage/dist/shared/unstorage.mNKHTF5Y.mjs
function wrapToPromise(value) {
  if (!value || typeof value.then !== "function") {
    return Promise.resolve(value);
  }
  return value;
}
function asyncCall(function_, ...arguments_) {
  try {
    return wrapToPromise(function_(...arguments_));
  } catch (error) {
    return Promise.reject(error);
  }
}
function isPrimitive(value) {
  const type = typeof value;
  return value === null || type !== "object" && type !== "function";
}
function isPureObject(value) {
  const proto = Object.getPrototypeOf(value);
  return !proto || proto.isPrototypeOf(Object);
}
function stringify2(value) {
  if (isPrimitive(value)) {
    return String(value);
  }
  if (isPureObject(value) || Array.isArray(value)) {
    return JSON.stringify(value);
  }
  if (typeof value.toJSON === "function") {
    return stringify2(value.toJSON());
  }
  throw new Error("[unstorage] Cannot stringify value!");
}
var BASE64_PREFIX = "base64:";
function serializeRaw(value) {
  if (typeof value === "string") {
    return value;
  }
  return BASE64_PREFIX + base64Encode(value);
}
function deserializeRaw(value) {
  if (typeof value !== "string") {
    return value;
  }
  if (!value.startsWith(BASE64_PREFIX)) {
    return value;
  }
  return base64Decode(value.slice(BASE64_PREFIX.length));
}
function base64Decode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input, "base64");
  }
  return Uint8Array.from(
    globalThis.atob(input),
    (c4) => c4.codePointAt(0)
  );
}
function base64Encode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input).toString("base64");
  }
  return globalThis.btoa(String.fromCodePoint(...input));
}
function normalizeKey(key) {
  var _a2;
  if (!key) {
    return "";
  }
  return ((_a2 = key.split("?")[0]) == null ? void 0 : _a2.replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "")) || "";
}
function joinKeys(...keys2) {
  return normalizeKey(keys2.join(":"));
}
function normalizeBaseKey(base) {
  base = normalizeKey(base);
  return base ? base + ":" : "";
}
function filterKeyByDepth(key, depth) {
  if (depth === void 0) {
    return true;
  }
  let substrCount = 0;
  let index = key.indexOf(":");
  while (index > -1) {
    substrCount++;
    index = key.indexOf(":", index + 1);
  }
  return substrCount <= depth;
}
function filterKeyByBase(key, base) {
  if (base) {
    return key.startsWith(base) && key[key.length - 1] !== "$";
  }
  return key[key.length - 1] !== "$";
}

// node_modules/@thirdweb-dev/wallets/node_modules/unstorage/dist/index.mjs
function defineDriver(factory) {
  return factory;
}
var DRIVER_NAME = "memory";
var memory = defineDriver(() => {
  const data = /* @__PURE__ */ new Map();
  return {
    name: DRIVER_NAME,
    getInstance: () => data,
    hasItem(key) {
      return data.has(key);
    },
    getItem(key) {
      return data.get(key) ?? null;
    },
    getItemRaw(key) {
      return data.get(key) ?? null;
    },
    setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem(key) {
      data.delete(key);
    },
    getKeys() {
      return [...data.keys()];
    },
    clear() {
      data.clear();
    },
    dispose() {
      data.clear();
    }
  };
});
function createStorage(options = {}) {
  const context = {
    mounts: { "": options.driver || memory() },
    mountpoints: [""],
    watching: false,
    watchListeners: [],
    unwatch: {}
  };
  const getMount = (key) => {
    for (const base of context.mountpoints) {
      if (key.startsWith(base)) {
        return {
          base,
          relativeKey: key.slice(base.length),
          driver: context.mounts[base]
        };
      }
    }
    return {
      base: "",
      relativeKey: key,
      driver: context.mounts[""]
    };
  };
  const getMounts = (base, includeParent) => {
    return context.mountpoints.filter(
      (mountpoint) => mountpoint.startsWith(base) || includeParent && base.startsWith(mountpoint)
    ).map((mountpoint) => ({
      relativeBase: base.length > mountpoint.length ? base.slice(mountpoint.length) : void 0,
      mountpoint,
      driver: context.mounts[mountpoint]
    }));
  };
  const onChange = (event, key) => {
    if (!context.watching) {
      return;
    }
    key = normalizeKey(key);
    for (const listener of context.watchListeners) {
      listener(event, key);
    }
  };
  const startWatch = async () => {
    if (context.watching) {
      return;
    }
    context.watching = true;
    for (const mountpoint in context.mounts) {
      context.unwatch[mountpoint] = await watch(
        context.mounts[mountpoint],
        onChange,
        mountpoint
      );
    }
  };
  const stopWatch = async () => {
    if (!context.watching) {
      return;
    }
    for (const mountpoint in context.unwatch) {
      await context.unwatch[mountpoint]();
    }
    context.unwatch = {};
    context.watching = false;
  };
  const runBatch = (items, commonOptions, cb) => {
    const batches = /* @__PURE__ */ new Map();
    const getBatch = (mount) => {
      let batch = batches.get(mount.base);
      if (!batch) {
        batch = {
          driver: mount.driver,
          base: mount.base,
          items: []
        };
        batches.set(mount.base, batch);
      }
      return batch;
    };
    for (const item of items) {
      const isStringItem = typeof item === "string";
      const key = normalizeKey(isStringItem ? item : item.key);
      const value = isStringItem ? void 0 : item.value;
      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };
      const mount = getMount(key);
      getBatch(mount).items.push({
        key,
        value,
        relativeKey: mount.relativeKey,
        options: options2
      });
    }
    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(
      (r2) => r2.flat()
    );
  };
  const storage = {
    // Item
    hasItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.hasItem, relativeKey, opts);
    },
    getItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => destr(value)
      );
    },
    getItems(items, commonOptions = {}) {
      return runBatch(items, commonOptions, (batch) => {
        if (batch.driver.getItems) {
          return asyncCall(
            batch.driver.getItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              options: item.options
            })),
            commonOptions
          ).then(
            (r2) => r2.map((item) => ({
              key: joinKeys(batch.base, item.key),
              value: destr(item.value)
            }))
          );
        }
        return Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.getItem,
              item.relativeKey,
              item.options
            ).then((value) => ({
              key: item.key,
              value: destr(value)
            }));
          })
        );
      });
    },
    getItemRaw(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.getItemRaw) {
        return asyncCall(driver.getItemRaw, relativeKey, opts);
      }
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => deserializeRaw(value)
      );
    },
    async setItem(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.setItem) {
        return;
      }
      await asyncCall(driver.setItem, relativeKey, stringify2(value), opts);
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async setItems(items, commonOptions) {
      await runBatch(items, commonOptions, async (batch) => {
        if (batch.driver.setItems) {
          return asyncCall(
            batch.driver.setItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              value: stringify2(item.value),
              options: item.options
            })),
            commonOptions
          );
        }
        if (!batch.driver.setItem) {
          return;
        }
        await Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.setItem,
              item.relativeKey,
              stringify2(item.value),
              item.options
            );
          })
        );
      });
    },
    async setItemRaw(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key, opts);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.setItemRaw) {
        await asyncCall(driver.setItemRaw, relativeKey, value, opts);
      } else if (driver.setItem) {
        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);
      } else {
        return;
      }
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async removeItem(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { removeMeta: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.removeItem) {
        return;
      }
      await asyncCall(driver.removeItem, relativeKey, opts);
      if (opts.removeMeta || opts.removeMata) {
        await asyncCall(driver.removeItem, relativeKey + "$", opts);
      }
      if (!driver.watch) {
        onChange("remove", key);
      }
    },
    // Meta
    async getMeta(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { nativeOnly: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      const meta = /* @__PURE__ */ Object.create(null);
      if (driver.getMeta) {
        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));
      }
      if (!opts.nativeOnly) {
        const value = await asyncCall(
          driver.getItem,
          relativeKey + "$",
          opts
        ).then((value_) => destr(value_));
        if (value && typeof value === "object") {
          if (typeof value.atime === "string") {
            value.atime = new Date(value.atime);
          }
          if (typeof value.mtime === "string") {
            value.mtime = new Date(value.mtime);
          }
          Object.assign(meta, value);
        }
      }
      return meta;
    },
    setMeta(key, value, opts = {}) {
      return this.setItem(key + "$", value, opts);
    },
    removeMeta(key, opts = {}) {
      return this.removeItem(key + "$", opts);
    },
    // Keys
    async getKeys(base, opts = {}) {
      var _a2;
      base = normalizeBaseKey(base);
      const mounts = getMounts(base, true);
      let maskedMounts = [];
      const allKeys = [];
      let allMountsSupportMaxDepth = true;
      for (const mount of mounts) {
        if (!((_a2 = mount.driver.flags) == null ? void 0 : _a2.maxDepth)) {
          allMountsSupportMaxDepth = false;
        }
        const rawKeys = await asyncCall(
          mount.driver.getKeys,
          mount.relativeBase,
          opts
        );
        for (const key of rawKeys) {
          const fullKey = mount.mountpoint + normalizeKey(key);
          if (!maskedMounts.some((p3) => fullKey.startsWith(p3))) {
            allKeys.push(fullKey);
          }
        }
        maskedMounts = [
          mount.mountpoint,
          ...maskedMounts.filter((p3) => !p3.startsWith(mount.mountpoint))
        ];
      }
      const shouldFilterByDepth = opts.maxDepth !== void 0 && !allMountsSupportMaxDepth;
      return allKeys.filter(
        (key) => (!shouldFilterByDepth || filterKeyByDepth(key, opts.maxDepth)) && filterKeyByBase(key, base)
      );
    },
    // Utils
    async clear(base, opts = {}) {
      base = normalizeBaseKey(base);
      await Promise.all(
        getMounts(base, false).map(async (m2) => {
          if (m2.driver.clear) {
            return asyncCall(m2.driver.clear, m2.relativeBase, opts);
          }
          if (m2.driver.removeItem) {
            const keys2 = await m2.driver.getKeys(m2.relativeBase || "", opts);
            return Promise.all(
              keys2.map((key) => m2.driver.removeItem(key, opts))
            );
          }
        })
      );
    },
    async dispose() {
      await Promise.all(
        Object.values(context.mounts).map((driver) => dispose(driver))
      );
    },
    async watch(callback) {
      await startWatch();
      context.watchListeners.push(callback);
      return async () => {
        context.watchListeners = context.watchListeners.filter(
          (listener) => listener !== callback
        );
        if (context.watchListeners.length === 0) {
          await stopWatch();
        }
      };
    },
    async unwatch() {
      context.watchListeners = [];
      await stopWatch();
    },
    // Mount
    mount(base, driver) {
      base = normalizeBaseKey(base);
      if (base && context.mounts[base]) {
        throw new Error(`already mounted at ${base}`);
      }
      if (base) {
        context.mountpoints.push(base);
        context.mountpoints.sort((a3, b4) => b4.length - a3.length);
      }
      context.mounts[base] = driver;
      if (context.watching) {
        Promise.resolve(watch(driver, onChange, base)).then((unwatcher) => {
          context.unwatch[base] = unwatcher;
        }).catch(console.error);
      }
      return storage;
    },
    async unmount(base, _dispose = true) {
      var _a2, _b;
      base = normalizeBaseKey(base);
      if (!base || !context.mounts[base]) {
        return;
      }
      if (context.watching && base in context.unwatch) {
        (_b = (_a2 = context.unwatch)[base]) == null ? void 0 : _b.call(_a2);
        delete context.unwatch[base];
      }
      if (_dispose) {
        await dispose(context.mounts[base]);
      }
      context.mountpoints = context.mountpoints.filter((key) => key !== base);
      delete context.mounts[base];
    },
    getMount(key = "") {
      key = normalizeKey(key) + ":";
      const m2 = getMount(key);
      return {
        driver: m2.driver,
        base: m2.base
      };
    },
    getMounts(base = "", opts = {}) {
      base = normalizeKey(base);
      const mounts = getMounts(base, opts.parents);
      return mounts.map((m2) => ({
        driver: m2.driver,
        base: m2.mountpoint
      }));
    },
    // Aliases
    keys: (base, opts = {}) => storage.getKeys(base, opts),
    get: (key, opts = {}) => storage.getItem(key, opts),
    set: (key, value, opts = {}) => storage.setItem(key, value, opts),
    has: (key, opts = {}) => storage.hasItem(key, opts),
    del: (key, opts = {}) => storage.removeItem(key, opts),
    remove: (key, opts = {}) => storage.removeItem(key, opts)
  };
  return storage;
}
function watch(driver, onChange, base) {
  return driver.watch ? driver.watch((event, key) => onChange(event, base + key)) : () => {
  };
}
async function dispose(driver) {
  if (typeof driver.dispose === "function") {
    await asyncCall(driver.dispose);
  }
}

// node_modules/idb-keyval/dist/index.js
function promisifyRequest(request) {
  return new Promise((resolve, reject) => {
    request.oncomplete = request.onsuccess = () => resolve(request.result);
    request.onabort = request.onerror = () => reject(request.error);
  });
}
function createStore(dbName, storeName) {
  const request = indexedDB.open(dbName);
  request.onupgradeneeded = () => request.result.createObjectStore(storeName);
  const dbp = promisifyRequest(request);
  return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));
}
var defaultGetStoreFunc;
function defaultGetStore() {
  if (!defaultGetStoreFunc) {
    defaultGetStoreFunc = createStore("keyval-store", "keyval");
  }
  return defaultGetStoreFunc;
}
function get(key, customStore = defaultGetStore()) {
  return customStore("readonly", (store) => promisifyRequest(store.get(key)));
}
function set(key, value, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.put(value, key);
    return promisifyRequest(store.transaction);
  });
}
function del(key, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.delete(key);
    return promisifyRequest(store.transaction);
  });
}
function clear(customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.clear();
    return promisifyRequest(store.transaction);
  });
}
function eachCursor(store, callback) {
  store.openCursor().onsuccess = function() {
    if (!this.result)
      return;
    callback(this.result);
    this.result.continue();
  };
  return promisifyRequest(store.transaction);
}
function keys(customStore = defaultGetStore()) {
  return customStore("readonly", (store) => {
    if (store.getAllKeys) {
      return promisifyRequest(store.getAllKeys());
    }
    const items = [];
    return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);
  });
}

// node_modules/@walletconnect/safe-json/dist/esm/index.js
var JSONStringify = (data) => JSON.stringify(data, (_3, value) => typeof value === "bigint" ? value.toString() + "n" : value);
var JSONParse = (json) => {
  const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  const serializedData = json.replace(numbersBiggerThanMaxInt, '$1"$2n"$3');
  return JSON.parse(serializedData, (_3, value) => {
    const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt)
      return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSONParse(value);
  } catch (_a2) {
    return value;
  }
}
function safeJsonStringify(value) {
  return typeof value === "string" ? value : JSONStringify(value) || "";
}

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/keyvaluestorage/dist/index.es.js
var x = "idb-keyval";
var z = (i3 = {}) => {
  const t = i3.base && i3.base.length > 0 ? `${i3.base}:` : "", e2 = (s2) => t + s2;
  let n4;
  return i3.dbName && i3.storeName && (n4 = createStore(i3.dbName, i3.storeName)), { name: x, options: i3, async hasItem(s2) {
    return !(typeof await get(e2(s2), n4) > "u");
  }, async getItem(s2) {
    return await get(e2(s2), n4) ?? null;
  }, setItem(s2, a3) {
    return set(e2(s2), a3, n4);
  }, removeItem(s2) {
    return del(e2(s2), n4);
  }, getKeys() {
    return keys(n4);
  }, clear() {
    return clear(n4);
  } };
};
var D = "WALLET_CONNECT_V2_INDEXED_DB";
var E = "keyvaluestorage";
var _ = class {
  constructor() {
    this.indexedDb = createStorage({ driver: z({ dbName: D, storeName: E }) });
  }
  async getKeys() {
    return this.indexedDb.getKeys();
  }
  async getEntries() {
    return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t) => [t.key, t.value]);
  }
  async getItem(t) {
    const e2 = await this.indexedDb.getItem(t);
    if (e2 !== null) return e2;
  }
  async setItem(t, e2) {
    await this.indexedDb.setItem(t, safeJsonStringify(e2));
  }
  async removeItem(t) {
    await this.indexedDb.removeItem(t);
  }
};
var l = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var c = { exports: {} };
(function() {
  let i3;
  function t() {
  }
  i3 = t, i3.prototype.getItem = function(e2) {
    return this.hasOwnProperty(e2) ? String(this[e2]) : null;
  }, i3.prototype.setItem = function(e2, n4) {
    this[e2] = String(n4);
  }, i3.prototype.removeItem = function(e2) {
    delete this[e2];
  }, i3.prototype.clear = function() {
    const e2 = this;
    Object.keys(e2).forEach(function(n4) {
      e2[n4] = void 0, delete e2[n4];
    });
  }, i3.prototype.key = function(e2) {
    return e2 = e2 || 0, Object.keys(this)[e2];
  }, i3.prototype.__defineGetter__("length", function() {
    return Object.keys(this).length;
  }), typeof l < "u" && l.localStorage ? c.exports = l.localStorage : typeof window < "u" && window.localStorage ? c.exports = window.localStorage : c.exports = new t();
})();
function k(i3) {
  var t;
  return [i3[0], safeJsonParse((t = i3[1]) != null ? t : "")];
}
var K2 = class {
  constructor() {
    this.localStorage = c.exports;
  }
  async getKeys() {
    return Object.keys(this.localStorage);
  }
  async getEntries() {
    return Object.entries(this.localStorage).map(k);
  }
  async getItem(t) {
    const e2 = this.localStorage.getItem(t);
    if (e2 !== null) return safeJsonParse(e2);
  }
  async setItem(t, e2) {
    this.localStorage.setItem(t, safeJsonStringify(e2));
  }
  async removeItem(t) {
    this.localStorage.removeItem(t);
  }
};
var N = "wc_storage_version";
var y = 1;
var O = async (i3, t, e2) => {
  const n4 = N, s2 = await t.getItem(n4);
  if (s2 && s2 >= y) {
    e2(t);
    return;
  }
  const a3 = await i3.getKeys();
  if (!a3.length) {
    e2(t);
    return;
  }
  const m2 = [];
  for (; a3.length; ) {
    const r2 = a3.shift();
    if (!r2) continue;
    const o2 = r2.toLowerCase();
    if (o2.includes("wc@") || o2.includes("walletconnect") || o2.includes("wc_") || o2.includes("wallet_connect")) {
      const f4 = await i3.getItem(r2);
      await t.setItem(r2, f4), m2.push(r2);
    }
  }
  await t.setItem(n4, y), e2(t), j2(i3, m2);
};
var j2 = async (i3, t) => {
  t.length && t.forEach(async (e2) => {
    await i3.removeItem(e2);
  });
};
var h = class {
  constructor() {
    this.initialized = false, this.setInitialized = (e2) => {
      this.storage = e2, this.initialized = true;
    };
    const t = new K2();
    this.storage = t;
    try {
      const e2 = new _();
      O(t, e2, this.setInitialized);
    } catch {
      this.initialized = true;
    }
  }
  async getKeys() {
    return await this.initialize(), this.storage.getKeys();
  }
  async getEntries() {
    return await this.initialize(), this.storage.getEntries();
  }
  async getItem(t) {
    return await this.initialize(), this.storage.getItem(t);
  }
  async setItem(t, e2) {
    return await this.initialize(), this.storage.setItem(t, e2);
  }
  async removeItem(t) {
    return await this.initialize(), this.storage.removeItem(t);
  }
  async initialize() {
    this.initialized || await new Promise((t) => {
      const e2 = setInterval(() => {
        this.initialized && (clearInterval(e2), t());
      }, 20);
    });
  }
};

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/core/dist/index.es.js
var import_heartbeat = __toESM(require_cjs5());

// node_modules/@walletconnect/logger/dist/index.es.js
var import_pino = __toESM(require_browser2());
var import_pino2 = __toESM(require_browser2());
var c2 = { level: "info" };
var n2 = "custom_context";
var l2 = 1e3 * 1024;
var O2 = class {
  constructor(e2) {
    this.nodeValue = e2, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;
  }
  get value() {
    return this.nodeValue;
  }
  get size() {
    return this.sizeInBytes;
  }
};
var d = class {
  constructor(e2) {
    this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e2, this.sizeInBytes = 0;
  }
  append(e2) {
    const t = new O2(e2);
    if (t.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${e2} with size ${t.size}`);
    for (; this.size + t.size > this.maxSizeInBytes; ) this.shift();
    this.head ? (this.tail && (this.tail.next = t), this.tail = t) : (this.head = t, this.tail = t), this.lengthInNodes++, this.sizeInBytes += t.size;
  }
  shift() {
    if (!this.head) return;
    const e2 = this.head;
    this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e2.size;
  }
  toArray() {
    const e2 = [];
    let t = this.head;
    for (; t !== null; ) e2.push(t.value), t = t.next;
    return e2;
  }
  get length() {
    return this.lengthInNodes;
  }
  get size() {
    return this.sizeInBytes;
  }
  toOrderedArray() {
    return Array.from(this);
  }
  [Symbol.iterator]() {
    let e2 = this.head;
    return { next: () => {
      if (!e2) return { done: true, value: null };
      const t = e2.value;
      return e2 = e2.next, { done: false, value: t };
    } };
  }
};
var L2 = class {
  constructor(e2, t = l2) {
    this.level = e2 ?? "error", this.levelValue = import_pino.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = t, this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);
  }
  forwardToConsole(e2, t) {
    t === import_pino.levels.values.error ? console.error(e2) : t === import_pino.levels.values.warn ? console.warn(e2) : t === import_pino.levels.values.debug ? console.debug(e2) : t === import_pino.levels.values.trace ? console.trace(e2) : console.log(e2);
  }
  appendToLogs(e2) {
    this.logs.append(safeJsonStringify({ timestamp: (/* @__PURE__ */ new Date()).toISOString(), log: e2 }));
    const t = typeof e2 == "string" ? JSON.parse(e2).level : e2.level;
    t >= this.levelValue && this.forwardToConsole(e2, t);
  }
  getLogs() {
    return this.logs;
  }
  clearLogs() {
    this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);
  }
  getLogArray() {
    return Array.from(this.logs);
  }
  logsToBlob(e2) {
    const t = this.getLogArray();
    return t.push(safeJsonStringify({ extraMetadata: e2 })), new Blob(t, { type: "application/json" });
  }
};
var m = class {
  constructor(e2, t = l2) {
    this.baseChunkLogger = new L2(e2, t);
  }
  write(e2) {
    this.baseChunkLogger.appendToLogs(e2);
  }
  getLogs() {
    return this.baseChunkLogger.getLogs();
  }
  clearLogs() {
    this.baseChunkLogger.clearLogs();
  }
  getLogArray() {
    return this.baseChunkLogger.getLogArray();
  }
  logsToBlob(e2) {
    return this.baseChunkLogger.logsToBlob(e2);
  }
  downloadLogsBlobInBrowser(e2) {
    const t = URL.createObjectURL(this.logsToBlob(e2)), o2 = document.createElement("a");
    o2.href = t, o2.download = `walletconnect-logs-${(/* @__PURE__ */ new Date()).toISOString()}.txt`, document.body.appendChild(o2), o2.click(), document.body.removeChild(o2), URL.revokeObjectURL(t);
  }
};
var B = class {
  constructor(e2, t = l2) {
    this.baseChunkLogger = new L2(e2, t);
  }
  write(e2) {
    this.baseChunkLogger.appendToLogs(e2);
  }
  getLogs() {
    return this.baseChunkLogger.getLogs();
  }
  clearLogs() {
    this.baseChunkLogger.clearLogs();
  }
  getLogArray() {
    return this.baseChunkLogger.getLogArray();
  }
  logsToBlob(e2) {
    return this.baseChunkLogger.logsToBlob(e2);
  }
};
var x2 = Object.defineProperty;
var S = Object.defineProperties;
var _2 = Object.getOwnPropertyDescriptors;
var p = Object.getOwnPropertySymbols;
var T = Object.prototype.hasOwnProperty;
var z2 = Object.prototype.propertyIsEnumerable;
var f = (r2, e2, t) => e2 in r2 ? x2(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var i = (r2, e2) => {
  for (var t in e2 || (e2 = {})) T.call(e2, t) && f(r2, t, e2[t]);
  if (p) for (var t of p(e2)) z2.call(e2, t) && f(r2, t, e2[t]);
  return r2;
};
var g = (r2, e2) => S(r2, _2(e2));
function k2(r2) {
  return g(i({}, r2), { level: (r2 == null ? void 0 : r2.level) || c2.level });
}
function v(r2, e2 = n2) {
  return r2[e2] || "";
}
function b(r2, e2, t = n2) {
  return r2[t] = e2, r2;
}
function y2(r2, e2 = n2) {
  let t = "";
  return typeof r2.bindings > "u" ? t = v(r2, e2) : t = r2.bindings().context || "", t;
}
function w(r2, e2, t = n2) {
  const o2 = y2(r2, t);
  return o2.trim() ? `${o2}/${e2}` : e2;
}
function E2(r2, e2, t = n2) {
  const o2 = w(r2, e2, t), a3 = r2.child({ context: o2 });
  return b(a3, o2, t);
}
function C2(r2) {
  var e2, t;
  const o2 = new m((e2 = r2.opts) == null ? void 0 : e2.level, r2.maxSizeInBytes);
  return { logger: (0, import_pino.default)(g(i({}, r2.opts), { level: "trace", browser: g(i({}, (t = r2.opts) == null ? void 0 : t.browser), { write: (a3) => o2.write(a3) }) })), chunkLoggerController: o2 };
}
function I(r2) {
  var e2;
  const t = new B((e2 = r2.opts) == null ? void 0 : e2.level, r2.maxSizeInBytes);
  return { logger: (0, import_pino.default)(g(i({}, r2.opts), { level: "trace" }), t), chunkLoggerController: t };
}
function A(r2) {
  return typeof r2.loggerOverride < "u" && typeof r2.loggerOverride != "string" ? { logger: r2.loggerOverride, chunkLoggerController: null } : typeof window < "u" ? C2(r2) : I(r2);
}

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/types/dist/index.es.js
init_esm();
var import_events2 = __toESM(require_events());
var n3 = class extends IEvents {
  constructor(s2) {
    super(), this.opts = s2, this.protocol = "wc", this.version = 2;
  }
};
var h3 = class extends IEvents {
  constructor(s2, t) {
    super(), this.core = s2, this.logger = t, this.records = /* @__PURE__ */ new Map();
  }
};
var a = class {
  constructor(s2, t) {
    this.logger = s2, this.core = t;
  }
};
var u = class extends IEvents {
  constructor(s2, t) {
    super(), this.relayer = s2, this.logger = t;
  }
};
var g2 = class extends IEvents {
  constructor(s2) {
    super();
  }
};
var p2 = class {
  constructor(s2, t, o2, M2) {
    this.core = s2, this.logger = t, this.name = o2;
  }
};
var d2 = class extends IEvents {
  constructor(s2, t) {
    super(), this.relayer = s2, this.logger = t;
  }
};
var E3 = class extends IEvents {
  constructor(s2, t) {
    super(), this.core = s2, this.logger = t;
  }
};
var y3 = class {
  constructor(s2, t) {
    this.projectId = s2, this.logger = t;
  }
};
var v2 = class {
  constructor(s2, t) {
    this.projectId = s2, this.logger = t;
  }
};
var b2 = class {
  constructor(s2) {
    this.opts = s2, this.protocol = "wc", this.version = 2;
  }
};
var w2 = class {
  constructor(s2) {
    this.client = s2;
  }
};

// node_modules/@walletconnect/relay-auth/dist/index.es.js
var import_time2 = __toESM(require_cjs());
function En2(t) {
  return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
}
function fe2(t, ...e2) {
  if (!En2(t)) throw new Error("Uint8Array expected");
  if (e2.length > 0 && !e2.includes(t.length)) throw new Error("Uint8Array expected of length " + e2 + ", got length=" + t.length);
}
function De(t, e2 = true) {
  if (t.destroyed) throw new Error("Hash instance has been destroyed");
  if (e2 && t.finished) throw new Error("Hash#digest() has already been called");
}
function gn(t, e2) {
  fe2(t);
  const n4 = e2.outputLen;
  if (t.length < n4) throw new Error("digestInto() expects output buffer of length at least " + n4);
}
var it = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
var _t = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength);
function yn2(t) {
  if (typeof t != "string") throw new Error("utf8ToBytes expected string, got " + typeof t);
  return new Uint8Array(new TextEncoder().encode(t));
}
function de2(t) {
  return typeof t == "string" && (t = yn2(t)), fe2(t), t;
}
var xn2 = class {
  clone() {
    return this._cloneInto();
  }
};
function Bn(t) {
  const e2 = (r2) => t().update(de2(r2)).digest(), n4 = t();
  return e2.outputLen = n4.outputLen, e2.blockLen = n4.blockLen, e2.create = () => t(), e2;
}
function he2(t = 32) {
  if (it && typeof it.getRandomValues == "function") return it.getRandomValues(new Uint8Array(t));
  if (it && typeof it.randomBytes == "function") return it.randomBytes(t);
  throw new Error("crypto.getRandomValues must be defined");
}
function Cn(t, e2, n4, r2) {
  if (typeof t.setBigUint64 == "function") return t.setBigUint64(e2, n4, r2);
  const o2 = BigInt(32), s2 = BigInt(4294967295), a3 = Number(n4 >> o2 & s2), u3 = Number(n4 & s2), i3 = r2 ? 4 : 0, D2 = r2 ? 0 : 4;
  t.setUint32(e2 + i3, a3, r2), t.setUint32(e2 + D2, u3, r2);
}
var An = class extends xn2 {
  constructor(e2, n4, r2, o2) {
    super(), this.blockLen = e2, this.outputLen = n4, this.padOffset = r2, this.isLE = o2, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e2), this.view = _t(this.buffer);
  }
  update(e2) {
    De(this);
    const { view: n4, buffer: r2, blockLen: o2 } = this;
    e2 = de2(e2);
    const s2 = e2.length;
    for (let a3 = 0; a3 < s2; ) {
      const u3 = Math.min(o2 - this.pos, s2 - a3);
      if (u3 === o2) {
        const i3 = _t(e2);
        for (; o2 <= s2 - a3; a3 += o2) this.process(i3, a3);
        continue;
      }
      r2.set(e2.subarray(a3, a3 + u3), this.pos), this.pos += u3, a3 += u3, this.pos === o2 && (this.process(n4, 0), this.pos = 0);
    }
    return this.length += e2.length, this.roundClean(), this;
  }
  digestInto(e2) {
    De(this), gn(e2, this), this.finished = true;
    const { buffer: n4, view: r2, blockLen: o2, isLE: s2 } = this;
    let { pos: a3 } = this;
    n4[a3++] = 128, this.buffer.subarray(a3).fill(0), this.padOffset > o2 - a3 && (this.process(r2, 0), a3 = 0);
    for (let l3 = a3; l3 < o2; l3++) n4[l3] = 0;
    Cn(r2, o2 - 8, BigInt(this.length * 8), s2), this.process(r2, 0);
    const u3 = _t(e2), i3 = this.outputLen;
    if (i3 % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
    const D2 = i3 / 4, c4 = this.get();
    if (D2 > c4.length) throw new Error("_sha2: outputLen bigger than state");
    for (let l3 = 0; l3 < D2; l3++) u3.setUint32(4 * l3, c4[l3], s2);
  }
  digest() {
    const { buffer: e2, outputLen: n4 } = this;
    this.digestInto(e2);
    const r2 = e2.slice(0, n4);
    return this.destroy(), r2;
  }
  _cloneInto(e2) {
    e2 || (e2 = new this.constructor()), e2.set(...this.get());
    const { blockLen: n4, buffer: r2, length: o2, finished: s2, destroyed: a3, pos: u3 } = this;
    return e2.length = o2, e2.pos = u3, e2.finished = s2, e2.destroyed = a3, o2 % n4 && e2.buffer.set(r2), e2;
  }
};
var wt = BigInt(2 ** 32 - 1);
var St = BigInt(32);
function le2(t, e2 = false) {
  return e2 ? { h: Number(t & wt), l: Number(t >> St & wt) } : { h: Number(t >> St & wt) | 0, l: Number(t & wt) | 0 };
}
function mn(t, e2 = false) {
  let n4 = new Uint32Array(t.length), r2 = new Uint32Array(t.length);
  for (let o2 = 0; o2 < t.length; o2++) {
    const { h: s2, l: a3 } = le2(t[o2], e2);
    [n4[o2], r2[o2]] = [s2, a3];
  }
  return [n4, r2];
}
var _n2 = (t, e2) => BigInt(t >>> 0) << St | BigInt(e2 >>> 0);
var Sn2 = (t, e2, n4) => t >>> n4;
var vn = (t, e2, n4) => t << 32 - n4 | e2 >>> n4;
var In2 = (t, e2, n4) => t >>> n4 | e2 << 32 - n4;
var Un2 = (t, e2, n4) => t << 32 - n4 | e2 >>> n4;
var Tn2 = (t, e2, n4) => t << 64 - n4 | e2 >>> n4 - 32;
var Fn2 = (t, e2, n4) => t >>> n4 - 32 | e2 << 64 - n4;
var Nn2 = (t, e2) => e2;
var Ln2 = (t, e2) => t;
var On2 = (t, e2, n4) => t << n4 | e2 >>> 32 - n4;
var Hn2 = (t, e2, n4) => e2 << n4 | t >>> 32 - n4;
var zn2 = (t, e2, n4) => e2 << n4 - 32 | t >>> 64 - n4;
var Mn = (t, e2, n4) => t << n4 - 32 | e2 >>> 64 - n4;
function qn2(t, e2, n4, r2) {
  const o2 = (e2 >>> 0) + (r2 >>> 0);
  return { h: t + n4 + (o2 / 2 ** 32 | 0) | 0, l: o2 | 0 };
}
var $n2 = (t, e2, n4) => (t >>> 0) + (e2 >>> 0) + (n4 >>> 0);
var kn2 = (t, e2, n4, r2) => e2 + n4 + r2 + (t / 2 ** 32 | 0) | 0;
var Rn = (t, e2, n4, r2) => (t >>> 0) + (e2 >>> 0) + (n4 >>> 0) + (r2 >>> 0);
var jn2 = (t, e2, n4, r2, o2) => e2 + n4 + r2 + o2 + (t / 2 ** 32 | 0) | 0;
var Zn2 = (t, e2, n4, r2, o2) => (t >>> 0) + (e2 >>> 0) + (n4 >>> 0) + (r2 >>> 0) + (o2 >>> 0);
var Gn2 = (t, e2, n4, r2, o2, s2) => e2 + n4 + r2 + o2 + s2 + (t / 2 ** 32 | 0) | 0;
var x3 = { fromBig: le2, split: mn, toBig: _n2, shrSH: Sn2, shrSL: vn, rotrSH: In2, rotrSL: Un2, rotrBH: Tn2, rotrBL: Fn2, rotr32H: Nn2, rotr32L: Ln2, rotlSH: On2, rotlSL: Hn2, rotlBH: zn2, rotlBL: Mn, add: qn2, add3L: $n2, add3H: kn2, add4L: Rn, add4H: jn2, add5H: Gn2, add5L: Zn2 };
var [Vn2, Yn2] = (() => x3.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((t) => BigInt(t))))();
var P = new Uint32Array(80);
var Q2 = new Uint32Array(80);
var Jn2 = class extends An {
  constructor() {
    super(128, 64, 16, false), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  get() {
    const { Ah: e2, Al: n4, Bh: r2, Bl: o2, Ch: s2, Cl: a3, Dh: u3, Dl: i3, Eh: D2, El: c4, Fh: l3, Fl: p3, Gh: w4, Gl: h5, Hh: g3, Hl: S4 } = this;
    return [e2, n4, r2, o2, s2, a3, u3, i3, D2, c4, l3, p3, w4, h5, g3, S4];
  }
  set(e2, n4, r2, o2, s2, a3, u3, i3, D2, c4, l3, p3, w4, h5, g3, S4) {
    this.Ah = e2 | 0, this.Al = n4 | 0, this.Bh = r2 | 0, this.Bl = o2 | 0, this.Ch = s2 | 0, this.Cl = a3 | 0, this.Dh = u3 | 0, this.Dl = i3 | 0, this.Eh = D2 | 0, this.El = c4 | 0, this.Fh = l3 | 0, this.Fl = p3 | 0, this.Gh = w4 | 0, this.Gl = h5 | 0, this.Hh = g3 | 0, this.Hl = S4 | 0;
  }
  process(e2, n4) {
    for (let d3 = 0; d3 < 16; d3++, n4 += 4) P[d3] = e2.getUint32(n4), Q2[d3] = e2.getUint32(n4 += 4);
    for (let d3 = 16; d3 < 80; d3++) {
      const m2 = P[d3 - 15] | 0, F2 = Q2[d3 - 15] | 0, q2 = x3.rotrSH(m2, F2, 1) ^ x3.rotrSH(m2, F2, 8) ^ x3.shrSH(m2, F2, 7), z4 = x3.rotrSL(m2, F2, 1) ^ x3.rotrSL(m2, F2, 8) ^ x3.shrSL(m2, F2, 7), I3 = P[d3 - 2] | 0, O3 = Q2[d3 - 2] | 0, ot2 = x3.rotrSH(I3, O3, 19) ^ x3.rotrBH(I3, O3, 61) ^ x3.shrSH(I3, O3, 6), tt2 = x3.rotrSL(I3, O3, 19) ^ x3.rotrBL(I3, O3, 61) ^ x3.shrSL(I3, O3, 6), st2 = x3.add4L(z4, tt2, Q2[d3 - 7], Q2[d3 - 16]), at2 = x3.add4H(st2, q2, ot2, P[d3 - 7], P[d3 - 16]);
      P[d3] = at2 | 0, Q2[d3] = st2 | 0;
    }
    let { Ah: r2, Al: o2, Bh: s2, Bl: a3, Ch: u3, Cl: i3, Dh: D2, Dl: c4, Eh: l3, El: p3, Fh: w4, Fl: h5, Gh: g3, Gl: S4, Hh: v4, Hl: L3 } = this;
    for (let d3 = 0; d3 < 80; d3++) {
      const m2 = x3.rotrSH(l3, p3, 14) ^ x3.rotrSH(l3, p3, 18) ^ x3.rotrBH(l3, p3, 41), F2 = x3.rotrSL(l3, p3, 14) ^ x3.rotrSL(l3, p3, 18) ^ x3.rotrBL(l3, p3, 41), q2 = l3 & w4 ^ ~l3 & g3, z4 = p3 & h5 ^ ~p3 & S4, I3 = x3.add5L(L3, F2, z4, Yn2[d3], Q2[d3]), O3 = x3.add5H(I3, v4, m2, q2, Vn2[d3], P[d3]), ot2 = I3 | 0, tt2 = x3.rotrSH(r2, o2, 28) ^ x3.rotrBH(r2, o2, 34) ^ x3.rotrBH(r2, o2, 39), st2 = x3.rotrSL(r2, o2, 28) ^ x3.rotrBL(r2, o2, 34) ^ x3.rotrBL(r2, o2, 39), at2 = r2 & s2 ^ r2 & u3 ^ s2 & u3, Ct2 = o2 & a3 ^ o2 & i3 ^ a3 & i3;
      v4 = g3 | 0, L3 = S4 | 0, g3 = w4 | 0, S4 = h5 | 0, w4 = l3 | 0, h5 = p3 | 0, { h: l3, l: p3 } = x3.add(D2 | 0, c4 | 0, O3 | 0, ot2 | 0), D2 = u3 | 0, c4 = i3 | 0, u3 = s2 | 0, i3 = a3 | 0, s2 = r2 | 0, a3 = o2 | 0;
      const At2 = x3.add3L(ot2, st2, Ct2);
      r2 = x3.add3H(At2, O3, tt2, at2), o2 = At2 | 0;
    }
    ({ h: r2, l: o2 } = x3.add(this.Ah | 0, this.Al | 0, r2 | 0, o2 | 0)), { h: s2, l: a3 } = x3.add(this.Bh | 0, this.Bl | 0, s2 | 0, a3 | 0), { h: u3, l: i3 } = x3.add(this.Ch | 0, this.Cl | 0, u3 | 0, i3 | 0), { h: D2, l: c4 } = x3.add(this.Dh | 0, this.Dl | 0, D2 | 0, c4 | 0), { h: l3, l: p3 } = x3.add(this.Eh | 0, this.El | 0, l3 | 0, p3 | 0), { h: w4, l: h5 } = x3.add(this.Fh | 0, this.Fl | 0, w4 | 0, h5 | 0), { h: g3, l: S4 } = x3.add(this.Gh | 0, this.Gl | 0, g3 | 0, S4 | 0), { h: v4, l: L3 } = x3.add(this.Hh | 0, this.Hl | 0, v4 | 0, L3 | 0), this.set(r2, o2, s2, a3, u3, i3, D2, c4, l3, p3, w4, h5, g3, S4, v4, L3);
  }
  roundClean() {
    P.fill(0), Q2.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var Kn2 = Bn(() => new Jn2());
var vt = BigInt(0);
var be2 = BigInt(1);
var Wn2 = BigInt(2);
function It(t) {
  return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
}
function Ut2(t) {
  if (!It(t)) throw new Error("Uint8Array expected");
}
function Tt2(t, e2) {
  if (typeof e2 != "boolean") throw new Error(t + " boolean expected, got " + e2);
}
var Xn2 = Array.from({ length: 256 }, (t, e2) => e2.toString(16).padStart(2, "0"));
function Ft2(t) {
  Ut2(t);
  let e2 = "";
  for (let n4 = 0; n4 < t.length; n4++) e2 += Xn2[t[n4]];
  return e2;
}
function pe2(t) {
  if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
  return t === "" ? vt : BigInt("0x" + t);
}
var K3 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function we2(t) {
  if (t >= K3._0 && t <= K3._9) return t - K3._0;
  if (t >= K3.A && t <= K3.F) return t - (K3.A - 10);
  if (t >= K3.a && t <= K3.f) return t - (K3.a - 10);
}
function Ee(t) {
  if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
  const e2 = t.length, n4 = e2 / 2;
  if (e2 % 2) throw new Error("hex string expected, got unpadded hex of length " + e2);
  const r2 = new Uint8Array(n4);
  for (let o2 = 0, s2 = 0; o2 < n4; o2++, s2 += 2) {
    const a3 = we2(t.charCodeAt(s2)), u3 = we2(t.charCodeAt(s2 + 1));
    if (a3 === void 0 || u3 === void 0) {
      const i3 = t[s2] + t[s2 + 1];
      throw new Error('hex string expected, got non-hex character "' + i3 + '" at index ' + s2);
    }
    r2[o2] = a3 * 16 + u3;
  }
  return r2;
}
function Pn2(t) {
  return pe2(Ft2(t));
}
function Et(t) {
  return Ut2(t), pe2(Ft2(Uint8Array.from(t).reverse()));
}
function ge2(t, e2) {
  return Ee(t.toString(16).padStart(e2 * 2, "0"));
}
function Nt(t, e2) {
  return ge2(t, e2).reverse();
}
function W(t, e2, n4) {
  let r2;
  if (typeof e2 == "string") try {
    r2 = Ee(e2);
  } catch (s2) {
    throw new Error(t + " must be hex string or Uint8Array, cause: " + s2);
  }
  else if (It(e2)) r2 = Uint8Array.from(e2);
  else throw new Error(t + " must be hex string or Uint8Array");
  const o2 = r2.length;
  if (typeof n4 == "number" && o2 !== n4) throw new Error(t + " of length " + n4 + " expected, got " + o2);
  return r2;
}
function ye2(...t) {
  let e2 = 0;
  for (let r2 = 0; r2 < t.length; r2++) {
    const o2 = t[r2];
    Ut2(o2), e2 += o2.length;
  }
  const n4 = new Uint8Array(e2);
  for (let r2 = 0, o2 = 0; r2 < t.length; r2++) {
    const s2 = t[r2];
    n4.set(s2, o2), o2 += s2.length;
  }
  return n4;
}
var Lt2 = (t) => typeof t == "bigint" && vt <= t;
function Qn2(t, e2, n4) {
  return Lt2(t) && Lt2(e2) && Lt2(n4) && e2 <= t && t < n4;
}
function ft(t, e2, n4, r2) {
  if (!Qn2(e2, n4, r2)) throw new Error("expected valid " + t + ": " + n4 + " <= n < " + r2 + ", got " + e2);
}
function tr2(t) {
  let e2;
  for (e2 = 0; t > vt; t >>= be2, e2 += 1) ;
  return e2;
}
var er2 = (t) => (Wn2 << BigInt(t - 1)) - be2;
var nr2 = { bigint: (t) => typeof t == "bigint", function: (t) => typeof t == "function", boolean: (t) => typeof t == "boolean", string: (t) => typeof t == "string", stringOrUint8Array: (t) => typeof t == "string" || It(t), isSafeInteger: (t) => Number.isSafeInteger(t), array: (t) => Array.isArray(t), field: (t, e2) => e2.Fp.isValid(t), hash: (t) => typeof t == "function" && Number.isSafeInteger(t.outputLen) };
function Ot2(t, e2, n4 = {}) {
  const r2 = (o2, s2, a3) => {
    const u3 = nr2[s2];
    if (typeof u3 != "function") throw new Error("invalid validator function");
    const i3 = t[o2];
    if (!(a3 && i3 === void 0) && !u3(i3, t)) throw new Error("param " + String(o2) + " is invalid. Expected " + s2 + ", got " + i3);
  };
  for (const [o2, s2] of Object.entries(e2)) r2(o2, s2, false);
  for (const [o2, s2] of Object.entries(n4)) r2(o2, s2, true);
  return t;
}
function xe2(t) {
  const e2 = /* @__PURE__ */ new WeakMap();
  return (n4, ...r2) => {
    const o2 = e2.get(n4);
    if (o2 !== void 0) return o2;
    const s2 = t(n4, ...r2);
    return e2.set(n4, s2), s2;
  };
}
var M = BigInt(0);
var N2 = BigInt(1);
var nt = BigInt(2);
var rr2 = BigInt(3);
var Ht2 = BigInt(4);
var Be2 = BigInt(5);
var Ce2 = BigInt(8);
function H(t, e2) {
  const n4 = t % e2;
  return n4 >= M ? n4 : e2 + n4;
}
function or2(t, e2, n4) {
  if (e2 < M) throw new Error("invalid exponent, negatives unsupported");
  if (n4 <= M) throw new Error("invalid modulus");
  if (n4 === N2) return M;
  let r2 = N2;
  for (; e2 > M; ) e2 & N2 && (r2 = r2 * t % n4), t = t * t % n4, e2 >>= N2;
  return r2;
}
function J(t, e2, n4) {
  let r2 = t;
  for (; e2-- > M; ) r2 *= r2, r2 %= n4;
  return r2;
}
function Ae2(t, e2) {
  if (t === M) throw new Error("invert: expected non-zero number");
  if (e2 <= M) throw new Error("invert: expected positive modulus, got " + e2);
  let n4 = H(t, e2), r2 = e2, o2 = M, s2 = N2;
  for (; n4 !== M; ) {
    const u3 = r2 / n4, i3 = r2 % n4, D2 = o2 - s2 * u3;
    r2 = n4, n4 = i3, o2 = s2, s2 = D2;
  }
  if (r2 !== N2) throw new Error("invert: does not exist");
  return H(o2, e2);
}
function sr2(t) {
  const e2 = (t - N2) / nt;
  let n4, r2, o2;
  for (n4 = t - N2, r2 = 0; n4 % nt === M; n4 /= nt, r2++) ;
  for (o2 = nt; o2 < t && or2(o2, e2, t) !== t - N2; o2++) if (o2 > 1e3) throw new Error("Cannot find square root: likely non-prime P");
  if (r2 === 1) {
    const a3 = (t + N2) / Ht2;
    return function(i3, D2) {
      const c4 = i3.pow(D2, a3);
      if (!i3.eql(i3.sqr(c4), D2)) throw new Error("Cannot find square root");
      return c4;
    };
  }
  const s2 = (n4 + N2) / nt;
  return function(u3, i3) {
    if (u3.pow(i3, e2) === u3.neg(u3.ONE)) throw new Error("Cannot find square root");
    let D2 = r2, c4 = u3.pow(u3.mul(u3.ONE, o2), n4), l3 = u3.pow(i3, s2), p3 = u3.pow(i3, n4);
    for (; !u3.eql(p3, u3.ONE); ) {
      if (u3.eql(p3, u3.ZERO)) return u3.ZERO;
      let w4 = 1;
      for (let g3 = u3.sqr(p3); w4 < D2 && !u3.eql(g3, u3.ONE); w4++) g3 = u3.sqr(g3);
      const h5 = u3.pow(c4, N2 << BigInt(D2 - w4 - 1));
      c4 = u3.sqr(h5), l3 = u3.mul(l3, h5), p3 = u3.mul(p3, c4), D2 = w4;
    }
    return l3;
  };
}
function ir2(t) {
  if (t % Ht2 === rr2) {
    const e2 = (t + N2) / Ht2;
    return function(r2, o2) {
      const s2 = r2.pow(o2, e2);
      if (!r2.eql(r2.sqr(s2), o2)) throw new Error("Cannot find square root");
      return s2;
    };
  }
  if (t % Ce2 === Be2) {
    const e2 = (t - Be2) / Ce2;
    return function(r2, o2) {
      const s2 = r2.mul(o2, nt), a3 = r2.pow(s2, e2), u3 = r2.mul(o2, a3), i3 = r2.mul(r2.mul(u3, nt), a3), D2 = r2.mul(u3, r2.sub(i3, r2.ONE));
      if (!r2.eql(r2.sqr(D2), o2)) throw new Error("Cannot find square root");
      return D2;
    };
  }
  return sr2(t);
}
var ur2 = (t, e2) => (H(t, e2) & N2) === N2;
var cr2 = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
function ar2(t) {
  const e2 = { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" }, n4 = cr2.reduce((r2, o2) => (r2[o2] = "function", r2), e2);
  return Ot2(t, n4);
}
function fr2(t, e2, n4) {
  if (n4 < M) throw new Error("invalid exponent, negatives unsupported");
  if (n4 === M) return t.ONE;
  if (n4 === N2) return e2;
  let r2 = t.ONE, o2 = e2;
  for (; n4 > M; ) n4 & N2 && (r2 = t.mul(r2, o2)), o2 = t.sqr(o2), n4 >>= N2;
  return r2;
}
function Dr2(t, e2) {
  const n4 = new Array(e2.length), r2 = e2.reduce((s2, a3, u3) => t.is0(a3) ? s2 : (n4[u3] = s2, t.mul(s2, a3)), t.ONE), o2 = t.inv(r2);
  return e2.reduceRight((s2, a3, u3) => t.is0(a3) ? s2 : (n4[u3] = t.mul(s2, n4[u3]), t.mul(s2, a3)), o2), n4;
}
function me2(t, e2) {
  const n4 = e2 !== void 0 ? e2 : t.toString(2).length, r2 = Math.ceil(n4 / 8);
  return { nBitLength: n4, nByteLength: r2 };
}
function _e2(t, e2, n4 = false, r2 = {}) {
  if (t <= M) throw new Error("invalid field: expected ORDER > 0, got " + t);
  const { nBitLength: o2, nByteLength: s2 } = me2(t, e2);
  if (s2 > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
  let a3;
  const u3 = Object.freeze({ ORDER: t, isLE: n4, BITS: o2, BYTES: s2, MASK: er2(o2), ZERO: M, ONE: N2, create: (i3) => H(i3, t), isValid: (i3) => {
    if (typeof i3 != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof i3);
    return M <= i3 && i3 < t;
  }, is0: (i3) => i3 === M, isOdd: (i3) => (i3 & N2) === N2, neg: (i3) => H(-i3, t), eql: (i3, D2) => i3 === D2, sqr: (i3) => H(i3 * i3, t), add: (i3, D2) => H(i3 + D2, t), sub: (i3, D2) => H(i3 - D2, t), mul: (i3, D2) => H(i3 * D2, t), pow: (i3, D2) => fr2(u3, i3, D2), div: (i3, D2) => H(i3 * Ae2(D2, t), t), sqrN: (i3) => i3 * i3, addN: (i3, D2) => i3 + D2, subN: (i3, D2) => i3 - D2, mulN: (i3, D2) => i3 * D2, inv: (i3) => Ae2(i3, t), sqrt: r2.sqrt || ((i3) => (a3 || (a3 = ir2(t)), a3(u3, i3))), invertBatch: (i3) => Dr2(u3, i3), cmov: (i3, D2, c4) => c4 ? D2 : i3, toBytes: (i3) => n4 ? Nt(i3, s2) : ge2(i3, s2), fromBytes: (i3) => {
    if (i3.length !== s2) throw new Error("Field.fromBytes: expected " + s2 + " bytes, got " + i3.length);
    return n4 ? Et(i3) : Pn2(i3);
  } });
  return Object.freeze(u3);
}
var Se = BigInt(0);
var gt = BigInt(1);
function zt2(t, e2) {
  const n4 = e2.negate();
  return t ? n4 : e2;
}
function ve2(t, e2) {
  if (!Number.isSafeInteger(t) || t <= 0 || t > e2) throw new Error("invalid window size, expected [1.." + e2 + "], got W=" + t);
}
function Mt(t, e2) {
  ve2(t, e2);
  const n4 = Math.ceil(e2 / t) + 1, r2 = 2 ** (t - 1);
  return { windows: n4, windowSize: r2 };
}
function dr2(t, e2) {
  if (!Array.isArray(t)) throw new Error("array expected");
  t.forEach((n4, r2) => {
    if (!(n4 instanceof e2)) throw new Error("invalid point at index " + r2);
  });
}
function hr2(t, e2) {
  if (!Array.isArray(t)) throw new Error("array of scalars expected");
  t.forEach((n4, r2) => {
    if (!e2.isValid(n4)) throw new Error("invalid scalar at index " + r2);
  });
}
var qt2 = /* @__PURE__ */ new WeakMap();
var Ie = /* @__PURE__ */ new WeakMap();
function $t2(t) {
  return Ie.get(t) || 1;
}
function lr2(t, e2) {
  return { constTimeNegate: zt2, hasPrecomputes(n4) {
    return $t2(n4) !== 1;
  }, unsafeLadder(n4, r2, o2 = t.ZERO) {
    let s2 = n4;
    for (; r2 > Se; ) r2 & gt && (o2 = o2.add(s2)), s2 = s2.double(), r2 >>= gt;
    return o2;
  }, precomputeWindow(n4, r2) {
    const { windows: o2, windowSize: s2 } = Mt(r2, e2), a3 = [];
    let u3 = n4, i3 = u3;
    for (let D2 = 0; D2 < o2; D2++) {
      i3 = u3, a3.push(i3);
      for (let c4 = 1; c4 < s2; c4++) i3 = i3.add(u3), a3.push(i3);
      u3 = i3.double();
    }
    return a3;
  }, wNAF(n4, r2, o2) {
    const { windows: s2, windowSize: a3 } = Mt(n4, e2);
    let u3 = t.ZERO, i3 = t.BASE;
    const D2 = BigInt(2 ** n4 - 1), c4 = 2 ** n4, l3 = BigInt(n4);
    for (let p3 = 0; p3 < s2; p3++) {
      const w4 = p3 * a3;
      let h5 = Number(o2 & D2);
      o2 >>= l3, h5 > a3 && (h5 -= c4, o2 += gt);
      const g3 = w4, S4 = w4 + Math.abs(h5) - 1, v4 = p3 % 2 !== 0, L3 = h5 < 0;
      h5 === 0 ? i3 = i3.add(zt2(v4, r2[g3])) : u3 = u3.add(zt2(L3, r2[S4]));
    }
    return { p: u3, f: i3 };
  }, wNAFUnsafe(n4, r2, o2, s2 = t.ZERO) {
    const { windows: a3, windowSize: u3 } = Mt(n4, e2), i3 = BigInt(2 ** n4 - 1), D2 = 2 ** n4, c4 = BigInt(n4);
    for (let l3 = 0; l3 < a3; l3++) {
      const p3 = l3 * u3;
      if (o2 === Se) break;
      let w4 = Number(o2 & i3);
      if (o2 >>= c4, w4 > u3 && (w4 -= D2, o2 += gt), w4 === 0) continue;
      let h5 = r2[p3 + Math.abs(w4) - 1];
      w4 < 0 && (h5 = h5.negate()), s2 = s2.add(h5);
    }
    return s2;
  }, getPrecomputes(n4, r2, o2) {
    let s2 = qt2.get(r2);
    return s2 || (s2 = this.precomputeWindow(r2, n4), n4 !== 1 && qt2.set(r2, o2(s2))), s2;
  }, wNAFCached(n4, r2, o2) {
    const s2 = $t2(n4);
    return this.wNAF(s2, this.getPrecomputes(s2, n4, o2), r2);
  }, wNAFCachedUnsafe(n4, r2, o2, s2) {
    const a3 = $t2(n4);
    return a3 === 1 ? this.unsafeLadder(n4, r2, s2) : this.wNAFUnsafe(a3, this.getPrecomputes(a3, n4, o2), r2, s2);
  }, setWindowSize(n4, r2) {
    ve2(r2, e2), Ie.set(n4, r2), qt2.delete(n4);
  } };
}
function br2(t, e2, n4, r2) {
  if (dr2(n4, t), hr2(r2, e2), n4.length !== r2.length) throw new Error("arrays of points and scalars must have equal length");
  const o2 = t.ZERO, s2 = tr2(BigInt(n4.length)), a3 = s2 > 12 ? s2 - 3 : s2 > 4 ? s2 - 2 : s2 ? 2 : 1, u3 = (1 << a3) - 1, i3 = new Array(u3 + 1).fill(o2), D2 = Math.floor((e2.BITS - 1) / a3) * a3;
  let c4 = o2;
  for (let l3 = D2; l3 >= 0; l3 -= a3) {
    i3.fill(o2);
    for (let w4 = 0; w4 < r2.length; w4++) {
      const h5 = r2[w4], g3 = Number(h5 >> BigInt(l3) & BigInt(u3));
      i3[g3] = i3[g3].add(n4[w4]);
    }
    let p3 = o2;
    for (let w4 = i3.length - 1, h5 = o2; w4 > 0; w4--) h5 = h5.add(i3[w4]), p3 = p3.add(h5);
    if (c4 = c4.add(p3), l3 !== 0) for (let w4 = 0; w4 < a3; w4++) c4 = c4.double();
  }
  return c4;
}
function pr2(t) {
  return ar2(t.Fp), Ot2(t, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...me2(t.n, t.nBitLength), ...t, p: t.Fp.ORDER });
}
var G = BigInt(0);
var j3 = BigInt(1);
var yt = BigInt(2);
var wr2 = BigInt(8);
var Er2 = { zip215: true };
function gr2(t) {
  const e2 = pr2(t);
  return Ot2(t, { hash: "function", a: "bigint", d: "bigint", randomBytes: "function" }, { adjustScalarBytes: "function", domain: "function", uvRatio: "function", mapToCurve: "function" }), Object.freeze({ ...e2 });
}
function yr2(t) {
  const e2 = gr2(t), { Fp: n4, n: r2, prehash: o2, hash: s2, randomBytes: a3, nByteLength: u3, h: i3 } = e2, D2 = yt << BigInt(u3 * 8) - j3, c4 = n4.create, l3 = _e2(e2.n, e2.nBitLength), p3 = e2.uvRatio || ((y6, f4) => {
    try {
      return { isValid: true, value: n4.sqrt(y6 * n4.inv(f4)) };
    } catch {
      return { isValid: false, value: G };
    }
  }), w4 = e2.adjustScalarBytes || ((y6) => y6), h5 = e2.domain || ((y6, f4, b4) => {
    if (Tt2("phflag", b4), f4.length || b4) throw new Error("Contexts/pre-hash are not supported");
    return y6;
  });
  function g3(y6, f4) {
    ft("coordinate " + y6, f4, G, D2);
  }
  function S4(y6) {
    if (!(y6 instanceof d3)) throw new Error("ExtendedPoint expected");
  }
  const v4 = xe2((y6, f4) => {
    const { ex: b4, ey: E4, ez: B2 } = y6, C4 = y6.is0();
    f4 == null && (f4 = C4 ? wr2 : n4.inv(B2));
    const A2 = c4(b4 * f4), U3 = c4(E4 * f4), _3 = c4(B2 * f4);
    if (C4) return { x: G, y: j3 };
    if (_3 !== j3) throw new Error("invZ was invalid");
    return { x: A2, y: U3 };
  }), L3 = xe2((y6) => {
    const { a: f4, d: b4 } = e2;
    if (y6.is0()) throw new Error("bad point: ZERO");
    const { ex: E4, ey: B2, ez: C4, et: A2 } = y6, U3 = c4(E4 * E4), _3 = c4(B2 * B2), T3 = c4(C4 * C4), $2 = c4(T3 * T3), R = c4(U3 * f4), V3 = c4(T3 * c4(R + _3)), Y = c4($2 + c4(b4 * c4(U3 * _3)));
    if (V3 !== Y) throw new Error("bad point: equation left != right (1)");
    const Z2 = c4(E4 * B2), X2 = c4(C4 * A2);
    if (Z2 !== X2) throw new Error("bad point: equation left != right (2)");
    return true;
  });
  class d3 {
    constructor(f4, b4, E4, B2) {
      this.ex = f4, this.ey = b4, this.ez = E4, this.et = B2, g3("x", f4), g3("y", b4), g3("z", E4), g3("t", B2), Object.freeze(this);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static fromAffine(f4) {
      if (f4 instanceof d3) throw new Error("extended point not allowed");
      const { x: b4, y: E4 } = f4 || {};
      return g3("x", b4), g3("y", E4), new d3(b4, E4, j3, c4(b4 * E4));
    }
    static normalizeZ(f4) {
      const b4 = n4.invertBatch(f4.map((E4) => E4.ez));
      return f4.map((E4, B2) => E4.toAffine(b4[B2])).map(d3.fromAffine);
    }
    static msm(f4, b4) {
      return br2(d3, l3, f4, b4);
    }
    _setWindowSize(f4) {
      q2.setWindowSize(this, f4);
    }
    assertValidity() {
      L3(this);
    }
    equals(f4) {
      S4(f4);
      const { ex: b4, ey: E4, ez: B2 } = this, { ex: C4, ey: A2, ez: U3 } = f4, _3 = c4(b4 * U3), T3 = c4(C4 * B2), $2 = c4(E4 * U3), R = c4(A2 * B2);
      return _3 === T3 && $2 === R;
    }
    is0() {
      return this.equals(d3.ZERO);
    }
    negate() {
      return new d3(c4(-this.ex), this.ey, this.ez, c4(-this.et));
    }
    double() {
      const { a: f4 } = e2, { ex: b4, ey: E4, ez: B2 } = this, C4 = c4(b4 * b4), A2 = c4(E4 * E4), U3 = c4(yt * c4(B2 * B2)), _3 = c4(f4 * C4), T3 = b4 + E4, $2 = c4(c4(T3 * T3) - C4 - A2), R = _3 + A2, V3 = R - U3, Y = _3 - A2, Z2 = c4($2 * V3), X2 = c4(R * Y), et2 = c4($2 * Y), pt2 = c4(V3 * R);
      return new d3(Z2, X2, pt2, et2);
    }
    add(f4) {
      S4(f4);
      const { a: b4, d: E4 } = e2, { ex: B2, ey: C4, ez: A2, et: U3 } = this, { ex: _3, ey: T3, ez: $2, et: R } = f4;
      if (b4 === BigInt(-1)) {
        const re2 = c4((C4 - B2) * (T3 + _3)), oe2 = c4((C4 + B2) * (T3 - _3)), mt2 = c4(oe2 - re2);
        if (mt2 === G) return this.double();
        const se2 = c4(A2 * yt * R), ie3 = c4(U3 * yt * $2), ue3 = ie3 + se2, ce2 = oe2 + re2, ae2 = ie3 - se2, Dn2 = c4(ue3 * mt2), dn2 = c4(ce2 * ae2), hn2 = c4(ue3 * ae2), ln = c4(mt2 * ce2);
        return new d3(Dn2, dn2, ln, hn2);
      }
      const V3 = c4(B2 * _3), Y = c4(C4 * T3), Z2 = c4(U3 * E4 * R), X2 = c4(A2 * $2), et2 = c4((B2 + C4) * (_3 + T3) - V3 - Y), pt2 = X2 - Z2, ee2 = X2 + Z2, ne2 = c4(Y - b4 * V3), un2 = c4(et2 * pt2), cn2 = c4(ee2 * ne2), an2 = c4(et2 * ne2), fn2 = c4(pt2 * ee2);
      return new d3(un2, cn2, fn2, an2);
    }
    subtract(f4) {
      return this.add(f4.negate());
    }
    wNAF(f4) {
      return q2.wNAFCached(this, f4, d3.normalizeZ);
    }
    multiply(f4) {
      const b4 = f4;
      ft("scalar", b4, j3, r2);
      const { p: E4, f: B2 } = this.wNAF(b4);
      return d3.normalizeZ([E4, B2])[0];
    }
    multiplyUnsafe(f4, b4 = d3.ZERO) {
      const E4 = f4;
      return ft("scalar", E4, G, r2), E4 === G ? F2 : this.is0() || E4 === j3 ? this : q2.wNAFCachedUnsafe(this, E4, d3.normalizeZ, b4);
    }
    isSmallOrder() {
      return this.multiplyUnsafe(i3).is0();
    }
    isTorsionFree() {
      return q2.unsafeLadder(this, r2).is0();
    }
    toAffine(f4) {
      return v4(this, f4);
    }
    clearCofactor() {
      const { h: f4 } = e2;
      return f4 === j3 ? this : this.multiplyUnsafe(f4);
    }
    static fromHex(f4, b4 = false) {
      const { d: E4, a: B2 } = e2, C4 = n4.BYTES;
      f4 = W("pointHex", f4, C4), Tt2("zip215", b4);
      const A2 = f4.slice(), U3 = f4[C4 - 1];
      A2[C4 - 1] = U3 & -129;
      const _3 = Et(A2), T3 = b4 ? D2 : n4.ORDER;
      ft("pointHex.y", _3, G, T3);
      const $2 = c4(_3 * _3), R = c4($2 - j3), V3 = c4(E4 * $2 - B2);
      let { isValid: Y, value: Z2 } = p3(R, V3);
      if (!Y) throw new Error("Point.fromHex: invalid y coordinate");
      const X2 = (Z2 & j3) === j3, et2 = (U3 & 128) !== 0;
      if (!b4 && Z2 === G && et2) throw new Error("Point.fromHex: x=0 and x_0=1");
      return et2 !== X2 && (Z2 = c4(-Z2)), d3.fromAffine({ x: Z2, y: _3 });
    }
    static fromPrivateKey(f4) {
      return O3(f4).point;
    }
    toRawBytes() {
      const { x: f4, y: b4 } = this.toAffine(), E4 = Nt(b4, n4.BYTES);
      return E4[E4.length - 1] |= f4 & j3 ? 128 : 0, E4;
    }
    toHex() {
      return Ft2(this.toRawBytes());
    }
  }
  d3.BASE = new d3(e2.Gx, e2.Gy, j3, c4(e2.Gx * e2.Gy)), d3.ZERO = new d3(G, j3, j3, G);
  const { BASE: m2, ZERO: F2 } = d3, q2 = lr2(d3, u3 * 8);
  function z4(y6) {
    return H(y6, r2);
  }
  function I3(y6) {
    return z4(Et(y6));
  }
  function O3(y6) {
    const f4 = n4.BYTES;
    y6 = W("private key", y6, f4);
    const b4 = W("hashed private key", s2(y6), 2 * f4), E4 = w4(b4.slice(0, f4)), B2 = b4.slice(f4, 2 * f4), C4 = I3(E4), A2 = m2.multiply(C4), U3 = A2.toRawBytes();
    return { head: E4, prefix: B2, scalar: C4, point: A2, pointBytes: U3 };
  }
  function ot2(y6) {
    return O3(y6).pointBytes;
  }
  function tt2(y6 = new Uint8Array(), ...f4) {
    const b4 = ye2(...f4);
    return I3(s2(h5(b4, W("context", y6), !!o2)));
  }
  function st2(y6, f4, b4 = {}) {
    y6 = W("message", y6), o2 && (y6 = o2(y6));
    const { prefix: E4, scalar: B2, pointBytes: C4 } = O3(f4), A2 = tt2(b4.context, E4, y6), U3 = m2.multiply(A2).toRawBytes(), _3 = tt2(b4.context, U3, C4, y6), T3 = z4(A2 + _3 * B2);
    ft("signature.s", T3, G, r2);
    const $2 = ye2(U3, Nt(T3, n4.BYTES));
    return W("result", $2, n4.BYTES * 2);
  }
  const at2 = Er2;
  function Ct2(y6, f4, b4, E4 = at2) {
    const { context: B2, zip215: C4 } = E4, A2 = n4.BYTES;
    y6 = W("signature", y6, 2 * A2), f4 = W("message", f4), b4 = W("publicKey", b4, A2), C4 !== void 0 && Tt2("zip215", C4), o2 && (f4 = o2(f4));
    const U3 = Et(y6.slice(A2, 2 * A2));
    let _3, T3, $2;
    try {
      _3 = d3.fromHex(b4, C4), T3 = d3.fromHex(y6.slice(0, A2), C4), $2 = m2.multiplyUnsafe(U3);
    } catch {
      return false;
    }
    if (!C4 && _3.isSmallOrder()) return false;
    const R = tt2(B2, T3.toRawBytes(), _3.toRawBytes(), f4);
    return T3.add(_3.multiplyUnsafe(R)).subtract($2).clearCofactor().equals(d3.ZERO);
  }
  return m2._setWindowSize(8), { CURVE: e2, getPublicKey: ot2, sign: st2, verify: Ct2, ExtendedPoint: d3, utils: { getExtendedPublicKey: O3, randomPrivateKey: () => a3(n4.BYTES), precompute(y6 = 8, f4 = d3.BASE) {
    return f4._setWindowSize(y6), f4.multiply(BigInt(3)), f4;
  } } };
}
BigInt(0), BigInt(1);
var kt2 = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
var Ue = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
BigInt(0);
var xr2 = BigInt(1);
var Te = BigInt(2);
BigInt(3);
var Br = BigInt(5);
var Cr2 = BigInt(8);
function Ar2(t) {
  const e2 = BigInt(10), n4 = BigInt(20), r2 = BigInt(40), o2 = BigInt(80), s2 = kt2, u3 = t * t % s2 * t % s2, i3 = J(u3, Te, s2) * u3 % s2, D2 = J(i3, xr2, s2) * t % s2, c4 = J(D2, Br, s2) * D2 % s2, l3 = J(c4, e2, s2) * c4 % s2, p3 = J(l3, n4, s2) * l3 % s2, w4 = J(p3, r2, s2) * p3 % s2, h5 = J(w4, o2, s2) * w4 % s2, g3 = J(h5, o2, s2) * w4 % s2, S4 = J(g3, e2, s2) * c4 % s2;
  return { pow_p_5_8: J(S4, Te, s2) * t % s2, b2: u3 };
}
function mr2(t) {
  return t[0] &= 248, t[31] &= 127, t[31] |= 64, t;
}
function _r2(t, e2) {
  const n4 = kt2, r2 = H(e2 * e2 * e2, n4), o2 = H(r2 * r2 * e2, n4), s2 = Ar2(t * o2).pow_p_5_8;
  let a3 = H(t * r2 * s2, n4);
  const u3 = H(e2 * a3 * a3, n4), i3 = a3, D2 = H(a3 * Ue, n4), c4 = u3 === t, l3 = u3 === H(-t, n4), p3 = u3 === H(-t * Ue, n4);
  return c4 && (a3 = i3), (l3 || p3) && (a3 = D2), ur2(a3, n4) && (a3 = H(-a3, n4)), { isValid: c4 || l3, value: a3 };
}
var Sr2 = (() => _e2(kt2, void 0, true))();
var vr2 = (() => ({ a: BigInt(-1), d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"), Fp: Sr2, n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"), h: Cr2, Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"), Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"), hash: Kn2, randomBytes: he2, adjustScalarBytes: mr2, uvRatio: _r2 }))();
var Rt = (() => yr2(vr2))();
var jt2 = "EdDSA";
var Zt2 = "JWT";
var ut = ".";
var Dt2 = "base64url";
var Gt2 = "utf8";
var xt = "utf8";
var Vt = ":";
var Yt = "did";
var Jt2 = "key";
var dt = "base58btc";
var Kt2 = "z";
var Wt2 = "K36";
var Ne = 32;
function Xt2(t) {
  return globalThis.Buffer != null ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t;
}
function Le(t = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Xt2(globalThis.Buffer.allocUnsafe(t)) : new Uint8Array(t);
}
function Oe2(t, e2) {
  e2 || (e2 = t.reduce((o2, s2) => o2 + s2.length, 0));
  const n4 = Le(e2);
  let r2 = 0;
  for (const o2 of t) n4.set(o2, r2), r2 += o2.length;
  return Xt2(n4);
}
function Ir2(t, e2) {
  if (t.length >= 255) throw new TypeError("Alphabet too long");
  for (var n4 = new Uint8Array(256), r2 = 0; r2 < n4.length; r2++) n4[r2] = 255;
  for (var o2 = 0; o2 < t.length; o2++) {
    var s2 = t.charAt(o2), a3 = s2.charCodeAt(0);
    if (n4[a3] !== 255) throw new TypeError(s2 + " is ambiguous");
    n4[a3] = o2;
  }
  var u3 = t.length, i3 = t.charAt(0), D2 = Math.log(u3) / Math.log(256), c4 = Math.log(256) / Math.log(u3);
  function l3(h5) {
    if (h5 instanceof Uint8Array || (ArrayBuffer.isView(h5) ? h5 = new Uint8Array(h5.buffer, h5.byteOffset, h5.byteLength) : Array.isArray(h5) && (h5 = Uint8Array.from(h5))), !(h5 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (h5.length === 0) return "";
    for (var g3 = 0, S4 = 0, v4 = 0, L3 = h5.length; v4 !== L3 && h5[v4] === 0; ) v4++, g3++;
    for (var d3 = (L3 - v4) * c4 + 1 >>> 0, m2 = new Uint8Array(d3); v4 !== L3; ) {
      for (var F2 = h5[v4], q2 = 0, z4 = d3 - 1; (F2 !== 0 || q2 < S4) && z4 !== -1; z4--, q2++) F2 += 256 * m2[z4] >>> 0, m2[z4] = F2 % u3 >>> 0, F2 = F2 / u3 >>> 0;
      if (F2 !== 0) throw new Error("Non-zero carry");
      S4 = q2, v4++;
    }
    for (var I3 = d3 - S4; I3 !== d3 && m2[I3] === 0; ) I3++;
    for (var O3 = i3.repeat(g3); I3 < d3; ++I3) O3 += t.charAt(m2[I3]);
    return O3;
  }
  function p3(h5) {
    if (typeof h5 != "string") throw new TypeError("Expected String");
    if (h5.length === 0) return new Uint8Array();
    var g3 = 0;
    if (h5[g3] !== " ") {
      for (var S4 = 0, v4 = 0; h5[g3] === i3; ) S4++, g3++;
      for (var L3 = (h5.length - g3) * D2 + 1 >>> 0, d3 = new Uint8Array(L3); h5[g3]; ) {
        var m2 = n4[h5.charCodeAt(g3)];
        if (m2 === 255) return;
        for (var F2 = 0, q2 = L3 - 1; (m2 !== 0 || F2 < v4) && q2 !== -1; q2--, F2++) m2 += u3 * d3[q2] >>> 0, d3[q2] = m2 % 256 >>> 0, m2 = m2 / 256 >>> 0;
        if (m2 !== 0) throw new Error("Non-zero carry");
        v4 = F2, g3++;
      }
      if (h5[g3] !== " ") {
        for (var z4 = L3 - v4; z4 !== L3 && d3[z4] === 0; ) z4++;
        for (var I3 = new Uint8Array(S4 + (L3 - z4)), O3 = S4; z4 !== L3; ) I3[O3++] = d3[z4++];
        return I3;
      }
    }
  }
  function w4(h5) {
    var g3 = p3(h5);
    if (g3) return g3;
    throw new Error(`Non-${e2} character`);
  }
  return { encode: l3, decodeUnsafe: p3, decode: w4 };
}
var Ur2 = Ir2;
var Tr2 = Ur2;
var He = (t) => {
  if (t instanceof Uint8Array && t.constructor.name === "Uint8Array") return t;
  if (t instanceof ArrayBuffer) return new Uint8Array(t);
  if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Fr2 = (t) => new TextEncoder().encode(t);
var Nr2 = (t) => new TextDecoder().decode(t);
var Lr2 = class {
  constructor(e2, n4, r2) {
    this.name = e2, this.prefix = n4, this.baseEncode = r2;
  }
  encode(e2) {
    if (e2 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e2)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Or2 = class {
  constructor(e2, n4, r2) {
    if (this.name = e2, this.prefix = n4, n4.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = n4.codePointAt(0), this.baseDecode = r2;
  }
  decode(e2) {
    if (typeof e2 == "string") {
      if (e2.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e2)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e2.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e2) {
    return ze(this, e2);
  }
};
var Hr2 = class {
  constructor(e2) {
    this.decoders = e2;
  }
  or(e2) {
    return ze(this, e2);
  }
  decode(e2) {
    const n4 = e2[0], r2 = this.decoders[n4];
    if (r2) return r2.decode(e2);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e2)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var ze = (t, e2) => new Hr2({ ...t.decoders || { [t.prefix]: t }, ...e2.decoders || { [e2.prefix]: e2 } });
var zr2 = class {
  constructor(e2, n4, r2, o2) {
    this.name = e2, this.prefix = n4, this.baseEncode = r2, this.baseDecode = o2, this.encoder = new Lr2(e2, n4, r2), this.decoder = new Or2(e2, n4, o2);
  }
  encode(e2) {
    return this.encoder.encode(e2);
  }
  decode(e2) {
    return this.decoder.decode(e2);
  }
};
var Bt = ({ name: t, prefix: e2, encode: n4, decode: r2 }) => new zr2(t, e2, n4, r2);
var ht = ({ prefix: t, name: e2, alphabet: n4 }) => {
  const { encode: r2, decode: o2 } = Tr2(n4, e2);
  return Bt({ prefix: t, name: e2, encode: r2, decode: (s2) => He(o2(s2)) });
};
var Mr2 = (t, e2, n4, r2) => {
  const o2 = {};
  for (let c4 = 0; c4 < e2.length; ++c4) o2[e2[c4]] = c4;
  let s2 = t.length;
  for (; t[s2 - 1] === "="; ) --s2;
  const a3 = new Uint8Array(s2 * n4 / 8 | 0);
  let u3 = 0, i3 = 0, D2 = 0;
  for (let c4 = 0; c4 < s2; ++c4) {
    const l3 = o2[t[c4]];
    if (l3 === void 0) throw new SyntaxError(`Non-${r2} character`);
    i3 = i3 << n4 | l3, u3 += n4, u3 >= 8 && (u3 -= 8, a3[D2++] = 255 & i3 >> u3);
  }
  if (u3 >= n4 || 255 & i3 << 8 - u3) throw new SyntaxError("Unexpected end of data");
  return a3;
};
var qr2 = (t, e2, n4) => {
  const r2 = e2[e2.length - 1] === "=", o2 = (1 << n4) - 1;
  let s2 = "", a3 = 0, u3 = 0;
  for (let i3 = 0; i3 < t.length; ++i3) for (u3 = u3 << 8 | t[i3], a3 += 8; a3 > n4; ) a3 -= n4, s2 += e2[o2 & u3 >> a3];
  if (a3 && (s2 += e2[o2 & u3 << n4 - a3]), r2) for (; s2.length * n4 & 7; ) s2 += "=";
  return s2;
};
var k3 = ({ name: t, prefix: e2, bitsPerChar: n4, alphabet: r2 }) => Bt({ prefix: e2, name: t, encode(o2) {
  return qr2(o2, r2, n4);
}, decode(o2) {
  return Mr2(o2, r2, n4, t);
} });
var $r = Bt({ prefix: "\0", name: "identity", encode: (t) => Nr2(t), decode: (t) => Fr2(t) });
var kr2 = Object.freeze({ __proto__: null, identity: $r });
var Rr2 = k3({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var jr2 = Object.freeze({ __proto__: null, base2: Rr2 });
var Zr = k3({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Gr2 = Object.freeze({ __proto__: null, base8: Zr });
var Vr2 = ht({ prefix: "9", name: "base10", alphabet: "0123456789" });
var Yr2 = Object.freeze({ __proto__: null, base10: Vr2 });
var Jr2 = k3({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var Kr2 = k3({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var Wr = Object.freeze({ __proto__: null, base16: Jr2, base16upper: Kr2 });
var Xr = k3({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var Pr2 = k3({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var Qr2 = k3({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var to2 = k3({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var eo2 = k3({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var no2 = k3({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var ro2 = k3({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var oo2 = k3({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var so2 = k3({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var io2 = Object.freeze({ __proto__: null, base32: Xr, base32upper: Pr2, base32pad: Qr2, base32padupper: to2, base32hex: eo2, base32hexupper: no2, base32hexpad: ro2, base32hexpadupper: oo2, base32z: so2 });
var uo = ht({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var co2 = ht({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var ao2 = Object.freeze({ __proto__: null, base36: uo, base36upper: co2 });
var fo2 = ht({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Do = ht({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var ho = Object.freeze({ __proto__: null, base58btc: fo2, base58flickr: Do });
var lo2 = k3({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var bo2 = k3({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var po2 = k3({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var wo2 = k3({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Eo2 = Object.freeze({ __proto__: null, base64: lo2, base64pad: bo2, base64url: po2, base64urlpad: wo2 });
var Me = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var go2 = Me.reduce((t, e2, n4) => (t[n4] = e2, t), []);
var yo2 = Me.reduce((t, e2, n4) => (t[e2.codePointAt(0)] = n4, t), []);
function xo2(t) {
  return t.reduce((e2, n4) => (e2 += go2[n4], e2), "");
}
function Bo2(t) {
  const e2 = [];
  for (const n4 of t) {
    const r2 = yo2[n4.codePointAt(0)];
    if (r2 === void 0) throw new Error(`Non-base256emoji character: ${n4}`);
    e2.push(r2);
  }
  return new Uint8Array(e2);
}
var Co2 = Bt({ prefix: "🚀", name: "base256emoji", encode: xo2, decode: Bo2 });
var Ao2 = Object.freeze({ __proto__: null, base256emoji: Co2 });
var mo2 = $e2;
var qe = 128;
var _o2 = 127;
var So2 = ~_o2;
var vo2 = Math.pow(2, 31);
function $e2(t, e2, n4) {
  e2 = e2 || [], n4 = n4 || 0;
  for (var r2 = n4; t >= vo2; ) e2[n4++] = t & 255 | qe, t /= 128;
  for (; t & So2; ) e2[n4++] = t & 255 | qe, t >>>= 7;
  return e2[n4] = t | 0, $e2.bytes = n4 - r2 + 1, e2;
}
var Io2 = Pt;
var Uo2 = 128;
var ke = 127;
function Pt(t, r2) {
  var n4 = 0, r2 = r2 || 0, o2 = 0, s2 = r2, a3, u3 = t.length;
  do {
    if (s2 >= u3) throw Pt.bytes = 0, new RangeError("Could not decode varint");
    a3 = t[s2++], n4 += o2 < 28 ? (a3 & ke) << o2 : (a3 & ke) * Math.pow(2, o2), o2 += 7;
  } while (a3 >= Uo2);
  return Pt.bytes = s2 - r2, n4;
}
var To2 = Math.pow(2, 7);
var Fo2 = Math.pow(2, 14);
var No2 = Math.pow(2, 21);
var Lo = Math.pow(2, 28);
var Oo2 = Math.pow(2, 35);
var Ho = Math.pow(2, 42);
var zo2 = Math.pow(2, 49);
var Mo2 = Math.pow(2, 56);
var qo = Math.pow(2, 63);
var $o2 = function(t) {
  return t < To2 ? 1 : t < Fo2 ? 2 : t < No2 ? 3 : t < Lo ? 4 : t < Oo2 ? 5 : t < Ho ? 6 : t < zo2 ? 7 : t < Mo2 ? 8 : t < qo ? 9 : 10;
};
var ko2 = { encode: mo2, decode: Io2, encodingLength: $o2 };
var Re2 = ko2;
var je = (t, e2, n4 = 0) => (Re2.encode(t, e2, n4), e2);
var Ze2 = (t) => Re2.encodingLength(t);
var Qt2 = (t, e2) => {
  const n4 = e2.byteLength, r2 = Ze2(t), o2 = r2 + Ze2(n4), s2 = new Uint8Array(o2 + n4);
  return je(t, s2, 0), je(n4, s2, r2), s2.set(e2, o2), new Ro2(t, n4, e2, s2);
};
var Ro2 = class {
  constructor(e2, n4, r2, o2) {
    this.code = e2, this.size = n4, this.digest = r2, this.bytes = o2;
  }
};
var Ge = ({ name: t, code: e2, encode: n4 }) => new jo(t, e2, n4);
var jo = class {
  constructor(e2, n4, r2) {
    this.name = e2, this.code = n4, this.encode = r2;
  }
  digest(e2) {
    if (e2 instanceof Uint8Array) {
      const n4 = this.encode(e2);
      return n4 instanceof Uint8Array ? Qt2(this.code, n4) : n4.then((r2) => Qt2(this.code, r2));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Ve = (t) => async (e2) => new Uint8Array(await crypto.subtle.digest(t, e2));
var Zo = Ge({ name: "sha2-256", code: 18, encode: Ve("SHA-256") });
var Go2 = Ge({ name: "sha2-512", code: 19, encode: Ve("SHA-512") });
var Vo = Object.freeze({ __proto__: null, sha256: Zo, sha512: Go2 });
var Ye = 0;
var Yo = "identity";
var Je = He;
var Jo2 = (t) => Qt2(Ye, Je(t));
var Ko = { code: Ye, name: Yo, encode: Je, digest: Jo2 };
var Wo2 = Object.freeze({ __proto__: null, identity: Ko });
new TextEncoder(), new TextDecoder();
var Ke = { ...kr2, ...jr2, ...Gr2, ...Yr2, ...Wr, ...io2, ...ao2, ...ho, ...Eo2, ...Ao2 };
({ ...Vo, ...Wo2 });
function We2(t, e2, n4, r2) {
  return { name: t, prefix: e2, encoder: { name: t, prefix: e2, encode: n4 }, decoder: { decode: r2 } };
}
var Xe2 = We2("utf8", "u", (t) => "u" + new TextDecoder("utf8").decode(t), (t) => new TextEncoder().encode(t.substring(1)));
var te = We2("ascii", "a", (t) => {
  let e2 = "a";
  for (let n4 = 0; n4 < t.length; n4++) e2 += String.fromCharCode(t[n4]);
  return e2;
}, (t) => {
  t = t.substring(1);
  const e2 = Le(t.length);
  for (let n4 = 0; n4 < t.length; n4++) e2[n4] = t.charCodeAt(n4);
  return e2;
});
var Pe2 = { utf8: Xe2, "utf-8": Xe2, hex: Ke.base16, latin1: te, ascii: te, binary: te, ...Ke };
function ct(t, e2 = "utf8") {
  const n4 = Pe2[e2];
  if (!n4) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8") : n4.encoder.encode(t).substring(1);
}
function rt(t, e2 = "utf8") {
  const n4 = Pe2[e2];
  if (!n4) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Xt2(globalThis.Buffer.from(t, "utf-8")) : n4.decoder.decode(`${n4.prefix}${t}`);
}
function lt(t) {
  return safeJsonParse(ct(rt(t, Dt2), Gt2));
}
function bt(t) {
  return ct(rt(safeJsonStringify(t), Gt2), Dt2);
}
function Qe(t) {
  const e2 = rt(Wt2, dt), n4 = Kt2 + ct(Oe2([e2, t]), dt);
  return [Yt, Jt2, n4].join(Vt);
}
function en2(t) {
  return ct(t, Dt2);
}
function nn2(t) {
  return rt(t, Dt2);
}
function rn2(t) {
  return rt([bt(t.header), bt(t.payload)].join(ut), xt);
}
function on2(t) {
  return [bt(t.header), bt(t.payload), en2(t.signature)].join(ut);
}
function sn2(t) {
  const e2 = t.split(ut), n4 = lt(e2[0]), r2 = lt(e2[1]), o2 = nn2(e2[2]), s2 = rt(e2.slice(0, 2).join(ut), xt);
  return { header: n4, payload: r2, signature: o2, data: s2 };
}
function Po2(t = he2(Ne)) {
  const e2 = Rt.getPublicKey(t);
  return { secretKey: Oe2([t, e2]), publicKey: e2 };
}
async function Qo2(t, e2, n4, r2, o2 = (0, import_time2.fromMiliseconds)(Date.now())) {
  const s2 = { alg: jt2, typ: Zt2 }, a3 = Qe(r2.publicKey), u3 = o2 + n4, i3 = { iss: a3, sub: t, aud: e2, iat: o2, exp: u3 }, D2 = rn2({ header: s2, payload: i3 }), c4 = Rt.sign(D2, r2.secretKey.slice(0, 32));
  return on2({ header: s2, payload: i3, signature: c4 });
}

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/core/dist/index.es.js
var import_time3 = __toESM(require_cjs());

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
var import_events3 = __toESM(require_events());
var JsonRpcProvider = class extends r {
  constructor(connection) {
    super(connection);
    this.events = new import_events3.EventEmitter();
    this.hasRegisteredEventListeners = false;
    this.connection = this.setConnection(connection);
    if (this.connection.connected) {
      this.registerEventListeners();
    }
  }
  async connect(connection = this.connection) {
    await this.open(connection);
  }
  async disconnect() {
    await this.close();
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async request(request, context) {
    return this.requestStrict(formatJsonRpcRequest(request.method, request.params || [], request.id || getBigIntRpcId().toString()), context);
  }
  async requestStrict(request, context) {
    return new Promise(async (resolve, reject) => {
      if (!this.connection.connected) {
        try {
          await this.open();
        } catch (e2) {
          reject(e2);
        }
      }
      this.events.on(`${request.id}`, (response) => {
        if (isJsonRpcError(response)) {
          reject(response.error);
        } else {
          resolve(response.result);
        }
      });
      try {
        await this.connection.send(request, context);
      } catch (e2) {
        reject(e2);
      }
    });
  }
  setConnection(connection = this.connection) {
    return connection;
  }
  onPayload(payload) {
    this.events.emit("payload", payload);
    if (isJsonRpcResponse(payload)) {
      this.events.emit(`${payload.id}`, payload);
    } else {
      this.events.emit("message", {
        type: payload.method,
        data: payload.params
      });
    }
  }
  onClose(event) {
    if (event && event.code === 3e3) {
      this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : ""}`));
    }
    this.events.emit("disconnect");
  }
  async open(connection = this.connection) {
    if (this.connection === connection && this.connection.connected)
      return;
    if (this.connection.connected)
      this.close();
    if (typeof connection === "string") {
      await this.connection.open(connection);
      connection = this.connection;
    }
    this.connection = this.setConnection(connection);
    await this.connection.open();
    this.registerEventListeners();
    this.events.emit("connect");
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    if (this.hasRegisteredEventListeners)
      return;
    this.connection.on("payload", (payload) => this.onPayload(payload));
    this.connection.on("close", (event) => this.onClose(event));
    this.connection.on("error", (error) => this.events.emit("error", error));
    this.connection.on("register_error", (error) => this.onClose());
    this.hasRegisteredEventListeners = true;
  }
};

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js
var import_events4 = __toESM(require_events());
var w3 = () => typeof WebSocket < "u" ? WebSocket : typeof global < "u" && typeof global.WebSocket < "u" ? global.WebSocket : typeof window < "u" && typeof window.WebSocket < "u" ? window.WebSocket : typeof self < "u" && typeof self.WebSocket < "u" ? self.WebSocket : require_browser3();
var b3 = () => typeof WebSocket < "u" || typeof global < "u" && typeof global.WebSocket < "u" || typeof window < "u" && typeof window.WebSocket < "u" || typeof self < "u" && typeof self.WebSocket < "u";
var a2 = (c4) => c4.split("?")[0];
var h4 = 10;
var S2 = w3();
var f2 = class {
  constructor(e2) {
    if (this.url = e2, this.events = new import_events4.EventEmitter(), this.registering = false, !isWsUrl(e2)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e2}`);
    this.url = e2;
  }
  get connected() {
    return typeof this.socket < "u";
  }
  get connecting() {
    return this.registering;
  }
  on(e2, t) {
    this.events.on(e2, t);
  }
  once(e2, t) {
    this.events.once(e2, t);
  }
  off(e2, t) {
    this.events.off(e2, t);
  }
  removeListener(e2, t) {
    this.events.removeListener(e2, t);
  }
  async open(e2 = this.url) {
    await this.register(e2);
  }
  async close() {
    return new Promise((e2, t) => {
      if (typeof this.socket > "u") {
        t(new Error("Connection already closed"));
        return;
      }
      this.socket.onclose = (n4) => {
        this.onClose(n4), e2();
      }, this.socket.close();
    });
  }
  async send(e2) {
    typeof this.socket > "u" && (this.socket = await this.register());
    try {
      this.socket.send(safeJsonStringify(e2));
    } catch (t) {
      this.onError(e2.id, t);
    }
  }
  register(e2 = this.url) {
    if (!isWsUrl(e2)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e2}`);
    if (this.registering) {
      const t = this.events.getMaxListeners();
      return (this.events.listenerCount("register_error") >= t || this.events.listenerCount("open") >= t) && this.events.setMaxListeners(t + 1), new Promise((n4, o2) => {
        this.events.once("register_error", (s2) => {
          this.resetMaxListeners(), o2(s2);
        }), this.events.once("open", () => {
          if (this.resetMaxListeners(), typeof this.socket > "u") return o2(new Error("WebSocket connection is missing or invalid"));
          n4(this.socket);
        });
      });
    }
    return this.url = e2, this.registering = true, new Promise((t, n4) => {
      const o2 = new URLSearchParams(e2).get("origin"), s2 = (0, esm_exports.isReactNative)() ? { headers: { origin: o2 } } : { rejectUnauthorized: !isLocalhostUrl(e2) }, i3 = new S2(e2, [], s2);
      b3() ? i3.onerror = (r2) => {
        const l3 = r2;
        n4(this.emitError(l3.error));
      } : i3.on("error", (r2) => {
        n4(this.emitError(r2));
      }), i3.onopen = () => {
        this.onOpen(i3), t(i3);
      };
    });
  }
  onOpen(e2) {
    e2.onmessage = (t) => this.onPayload(t), e2.onclose = (t) => this.onClose(t), this.socket = e2, this.registering = false, this.events.emit("open");
  }
  onClose(e2) {
    this.socket = void 0, this.registering = false, this.events.emit("close", e2);
  }
  onPayload(e2) {
    if (typeof e2.data > "u") return;
    const t = typeof e2.data == "string" ? safeJsonParse(e2.data) : e2.data;
    this.events.emit("payload", t);
  }
  onError(e2, t) {
    const n4 = this.parseError(t), o2 = n4.message || n4.toString(), s2 = formatJsonRpcError(e2, o2);
    this.events.emit("payload", s2);
  }
  parseError(e2, t = this.url) {
    return parseConnectionError(e2, a2(t), "WS");
  }
  resetMaxListeners() {
    this.events.getMaxListeners() > h4 && this.events.setMaxListeners(h4);
  }
  emitError(e2) {
    const t = this.parseError(new Error((e2 == null ? void 0 : e2.message) || `WebSocket connection failed for host: ${a2(this.url)}`));
    return this.events.emit("register_error", t), t;
  }
};

// node_modules/@thirdweb-dev/wallets/node_modules/@walletconnect/core/dist/index.es.js
var import_lodash = __toESM(require_lodash());
var import_isomorphic_unfetch = __toESM(require_browser4());
function Ji2(n4, e2) {
  if (n4.length >= 255) throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), i3 = 0; i3 < t.length; i3++) t[i3] = 255;
  for (var s2 = 0; s2 < n4.length; s2++) {
    var r2 = n4.charAt(s2), o2 = r2.charCodeAt(0);
    if (t[o2] !== 255) throw new TypeError(r2 + " is ambiguous");
    t[o2] = s2;
  }
  var a3 = n4.length, h5 = n4.charAt(0), l3 = Math.log(a3) / Math.log(256), d3 = Math.log(256) / Math.log(a3);
  function g3(u3) {
    if (u3 instanceof Uint8Array || (ArrayBuffer.isView(u3) ? u3 = new Uint8Array(u3.buffer, u3.byteOffset, u3.byteLength) : Array.isArray(u3) && (u3 = Uint8Array.from(u3))), !(u3 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (u3.length === 0) return "";
    for (var p3 = 0, _3 = 0, D2 = 0, P2 = u3.length; D2 !== P2 && u3[D2] === 0; ) D2++, p3++;
    for (var x4 = (P2 - D2) * d3 + 1 >>> 0, E4 = new Uint8Array(x4); D2 !== P2; ) {
      for (var O3 = u3[D2], N3 = 0, R = x4 - 1; (O3 !== 0 || N3 < _3) && R !== -1; R--, N3++) O3 += 256 * E4[R] >>> 0, E4[R] = O3 % a3 >>> 0, O3 = O3 / a3 >>> 0;
      if (O3 !== 0) throw new Error("Non-zero carry");
      _3 = N3, D2++;
    }
    for (var A2 = x4 - _3; A2 !== x4 && E4[A2] === 0; ) A2++;
    for (var j4 = h5.repeat(p3); A2 < x4; ++A2) j4 += n4.charAt(E4[A2]);
    return j4;
  }
  function m2(u3) {
    if (typeof u3 != "string") throw new TypeError("Expected String");
    if (u3.length === 0) return new Uint8Array();
    var p3 = 0;
    if (u3[p3] !== " ") {
      for (var _3 = 0, D2 = 0; u3[p3] === h5; ) _3++, p3++;
      for (var P2 = (u3.length - p3) * l3 + 1 >>> 0, x4 = new Uint8Array(P2); u3[p3]; ) {
        var E4 = t[u3.charCodeAt(p3)];
        if (E4 === 255) return;
        for (var O3 = 0, N3 = P2 - 1; (E4 !== 0 || O3 < D2) && N3 !== -1; N3--, O3++) E4 += a3 * x4[N3] >>> 0, x4[N3] = E4 % 256 >>> 0, E4 = E4 / 256 >>> 0;
        if (E4 !== 0) throw new Error("Non-zero carry");
        D2 = O3, p3++;
      }
      if (u3[p3] !== " ") {
        for (var R = P2 - D2; R !== P2 && x4[R] === 0; ) R++;
        for (var A2 = new Uint8Array(_3 + (P2 - R)), j4 = _3; R !== P2; ) A2[j4++] = x4[R++];
        return A2;
      }
    }
  }
  function L3(u3) {
    var p3 = m2(u3);
    if (p3) return p3;
    throw new Error(`Non-${e2} character`);
  }
  return { encode: g3, decodeUnsafe: m2, decode: L3 };
}
var Xi2 = Ji2;
var Wi2 = Xi2;
var Ue2 = (n4) => {
  if (n4 instanceof Uint8Array && n4.constructor.name === "Uint8Array") return n4;
  if (n4 instanceof ArrayBuffer) return new Uint8Array(n4);
  if (ArrayBuffer.isView(n4)) return new Uint8Array(n4.buffer, n4.byteOffset, n4.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Qi2 = (n4) => new TextEncoder().encode(n4);
var Zi2 = (n4) => new TextDecoder().decode(n4);
var es2 = class {
  constructor(e2, t, i3) {
    this.name = e2, this.prefix = t, this.baseEncode = i3;
  }
  encode(e2) {
    if (e2 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e2)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var ts2 = class {
  constructor(e2, t, i3) {
    if (this.name = e2, this.prefix = t, t.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = i3;
  }
  decode(e2) {
    if (typeof e2 == "string") {
      if (e2.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e2)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e2.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e2) {
    return $e3(this, e2);
  }
};
var is2 = class {
  constructor(e2) {
    this.decoders = e2;
  }
  or(e2) {
    return $e3(this, e2);
  }
  decode(e2) {
    const t = e2[0], i3 = this.decoders[t];
    if (i3) return i3.decode(e2);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e2)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var $e3 = (n4, e2) => new is2({ ...n4.decoders || { [n4.prefix]: n4 }, ...e2.decoders || { [e2.prefix]: e2 } });
var ss2 = class {
  constructor(e2, t, i3, s2) {
    this.name = e2, this.prefix = t, this.baseEncode = i3, this.baseDecode = s2, this.encoder = new es2(e2, t, i3), this.decoder = new ts2(e2, t, s2);
  }
  encode(e2) {
    return this.encoder.encode(e2);
  }
  decode(e2) {
    return this.decoder.decode(e2);
  }
};
var Q3 = ({ name: n4, prefix: e2, encode: t, decode: i3 }) => new ss2(n4, e2, t, i3);
var K4 = ({ prefix: n4, name: e2, alphabet: t }) => {
  const { encode: i3, decode: s2 } = Wi2(t, e2);
  return Q3({ prefix: n4, name: e2, encode: i3, decode: (r2) => Ue2(s2(r2)) });
};
var rs2 = (n4, e2, t, i3) => {
  const s2 = {};
  for (let d3 = 0; d3 < e2.length; ++d3) s2[e2[d3]] = d3;
  let r2 = n4.length;
  for (; n4[r2 - 1] === "="; ) --r2;
  const o2 = new Uint8Array(r2 * t / 8 | 0);
  let a3 = 0, h5 = 0, l3 = 0;
  for (let d3 = 0; d3 < r2; ++d3) {
    const g3 = s2[n4[d3]];
    if (g3 === void 0) throw new SyntaxError(`Non-${i3} character`);
    h5 = h5 << t | g3, a3 += t, a3 >= 8 && (a3 -= 8, o2[l3++] = 255 & h5 >> a3);
  }
  if (a3 >= t || 255 & h5 << 8 - a3) throw new SyntaxError("Unexpected end of data");
  return o2;
};
var ns2 = (n4, e2, t) => {
  const i3 = e2[e2.length - 1] === "=", s2 = (1 << t) - 1;
  let r2 = "", o2 = 0, a3 = 0;
  for (let h5 = 0; h5 < n4.length; ++h5) for (a3 = a3 << 8 | n4[h5], o2 += 8; o2 > t; ) o2 -= t, r2 += e2[s2 & a3 >> o2];
  if (o2 && (r2 += e2[s2 & a3 << t - o2]), i3) for (; r2.length * t & 7; ) r2 += "=";
  return r2;
};
var y5 = ({ name: n4, prefix: e2, bitsPerChar: t, alphabet: i3 }) => Q3({ prefix: e2, name: n4, encode(s2) {
  return ns2(s2, i3, t);
}, decode(s2) {
  return rs2(s2, i3, t, n4);
} });
var os2 = Q3({ prefix: "\0", name: "identity", encode: (n4) => Zi2(n4), decode: (n4) => Qi2(n4) });
var as2 = Object.freeze({ __proto__: null, identity: os2 });
var hs2 = y5({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var cs2 = Object.freeze({ __proto__: null, base2: hs2 });
var ls2 = y5({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var us2 = Object.freeze({ __proto__: null, base8: ls2 });
var ds2 = K4({ prefix: "9", name: "base10", alphabet: "0123456789" });
var gs2 = Object.freeze({ __proto__: null, base10: ds2 });
var ps2 = y5({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var Ds2 = y5({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var ys2 = Object.freeze({ __proto__: null, base16: ps2, base16upper: Ds2 });
var ms2 = y5({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var bs2 = y5({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var fs2 = y5({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var Es2 = y5({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var ws2 = y5({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var vs2 = y5({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var Is2 = y5({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var Cs2 = y5({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var _s2 = y5({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var Rs2 = Object.freeze({ __proto__: null, base32: ms2, base32upper: bs2, base32pad: fs2, base32padupper: Es2, base32hex: ws2, base32hexupper: vs2, base32hexpad: Is2, base32hexpadupper: Cs2, base32z: _s2 });
var Ts2 = K4({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var Ss2 = K4({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var Ps2 = Object.freeze({ __proto__: null, base36: Ts2, base36upper: Ss2 });
var xs2 = K4({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Os2 = K4({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var As2 = Object.freeze({ __proto__: null, base58btc: xs2, base58flickr: Os2 });
var zs2 = y5({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var Ns2 = y5({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var Ls2 = y5({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var Us2 = y5({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var $s2 = Object.freeze({ __proto__: null, base64: zs2, base64pad: Ns2, base64url: Ls2, base64urlpad: Us2 });
var Fe = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var Fs2 = Fe.reduce((n4, e2, t) => (n4[t] = e2, n4), []);
var ks2 = Fe.reduce((n4, e2, t) => (n4[e2.codePointAt(0)] = t, n4), []);
function Bs2(n4) {
  return n4.reduce((e2, t) => (e2 += Fs2[t], e2), "");
}
function Ms2(n4) {
  const e2 = [];
  for (const t of n4) {
    const i3 = ks2[t.codePointAt(0)];
    if (i3 === void 0) throw new Error(`Non-base256emoji character: ${t}`);
    e2.push(i3);
  }
  return new Uint8Array(e2);
}
var Ks2 = Q3({ prefix: "🚀", name: "base256emoji", encode: Bs2, decode: Ms2 });
var Vs2 = Object.freeze({ __proto__: null, base256emoji: Ks2 });
var qs2 = Be3;
var ke2 = 128;
var js2 = 127;
var Gs2 = ~js2;
var Ys2 = Math.pow(2, 31);
function Be3(n4, e2, t) {
  e2 = e2 || [], t = t || 0;
  for (var i3 = t; n4 >= Ys2; ) e2[t++] = n4 & 255 | ke2, n4 /= 128;
  for (; n4 & Gs2; ) e2[t++] = n4 & 255 | ke2, n4 >>>= 7;
  return e2[t] = n4 | 0, Be3.bytes = t - i3 + 1, e2;
}
var Hs2 = de3;
var Js2 = 128;
var Me2 = 127;
function de3(n4, i3) {
  var t = 0, i3 = i3 || 0, s2 = 0, r2 = i3, o2, a3 = n4.length;
  do {
    if (r2 >= a3) throw de3.bytes = 0, new RangeError("Could not decode varint");
    o2 = n4[r2++], t += s2 < 28 ? (o2 & Me2) << s2 : (o2 & Me2) * Math.pow(2, s2), s2 += 7;
  } while (o2 >= Js2);
  return de3.bytes = r2 - i3, t;
}
var Xs2 = Math.pow(2, 7);
var Ws2 = Math.pow(2, 14);
var Qs2 = Math.pow(2, 21);
var Zs2 = Math.pow(2, 28);
var er3 = Math.pow(2, 35);
var tr3 = Math.pow(2, 42);
var ir3 = Math.pow(2, 49);
var sr3 = Math.pow(2, 56);
var rr3 = Math.pow(2, 63);
var nr3 = function(n4) {
  return n4 < Xs2 ? 1 : n4 < Ws2 ? 2 : n4 < Qs2 ? 3 : n4 < Zs2 ? 4 : n4 < er3 ? 5 : n4 < tr3 ? 6 : n4 < ir3 ? 7 : n4 < sr3 ? 8 : n4 < rr3 ? 9 : 10;
};
var or3 = { encode: qs2, decode: Hs2, encodingLength: nr3 };
var Ke2 = or3;
var Ve2 = (n4, e2, t = 0) => (Ke2.encode(n4, e2, t), e2);
var qe2 = (n4) => Ke2.encodingLength(n4);
var ge3 = (n4, e2) => {
  const t = e2.byteLength, i3 = qe2(n4), s2 = i3 + qe2(t), r2 = new Uint8Array(s2 + t);
  return Ve2(n4, r2, 0), Ve2(t, r2, i3), r2.set(e2, s2), new ar3(n4, t, e2, r2);
};
var ar3 = class {
  constructor(e2, t, i3, s2) {
    this.code = e2, this.size = t, this.digest = i3, this.bytes = s2;
  }
};
var je2 = ({ name: n4, code: e2, encode: t }) => new hr3(n4, e2, t);
var hr3 = class {
  constructor(e2, t, i3) {
    this.name = e2, this.code = t, this.encode = i3;
  }
  digest(e2) {
    if (e2 instanceof Uint8Array) {
      const t = this.encode(e2);
      return t instanceof Uint8Array ? ge3(this.code, t) : t.then((i3) => ge3(this.code, i3));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Ge2 = (n4) => async (e2) => new Uint8Array(await crypto.subtle.digest(n4, e2));
var cr3 = je2({ name: "sha2-256", code: 18, encode: Ge2("SHA-256") });
var lr3 = je2({ name: "sha2-512", code: 19, encode: Ge2("SHA-512") });
var ur3 = Object.freeze({ __proto__: null, sha256: cr3, sha512: lr3 });
var Ye2 = 0;
var dr3 = "identity";
var He2 = Ue2;
var gr3 = (n4) => ge3(Ye2, He2(n4));
var pr3 = { code: Ye2, name: dr3, encode: He2, digest: gr3 };
var Dr3 = Object.freeze({ __proto__: null, identity: pr3 });
new TextEncoder(), new TextDecoder();
var Je2 = { ...as2, ...cs2, ...us2, ...gs2, ...ys2, ...Rs2, ...Ps2, ...As2, ...$s2, ...Vs2 };
({ ...ur3, ...Dr3 });
function Xe3(n4) {
  return globalThis.Buffer != null ? new Uint8Array(n4.buffer, n4.byteOffset, n4.byteLength) : n4;
}
function yr3(n4 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Xe3(globalThis.Buffer.allocUnsafe(n4)) : new Uint8Array(n4);
}
function We3(n4, e2, t, i3) {
  return { name: n4, prefix: e2, encoder: { name: n4, prefix: e2, encode: t }, decoder: { decode: i3 } };
}
var Qe2 = We3("utf8", "u", (n4) => "u" + new TextDecoder("utf8").decode(n4), (n4) => new TextEncoder().encode(n4.substring(1)));
var pe3 = We3("ascii", "a", (n4) => {
  let e2 = "a";
  for (let t = 0; t < n4.length; t++) e2 += String.fromCharCode(n4[t]);
  return e2;
}, (n4) => {
  n4 = n4.substring(1);
  const e2 = yr3(n4.length);
  for (let t = 0; t < n4.length; t++) e2[t] = n4.charCodeAt(t);
  return e2;
});
var mr3 = { utf8: Qe2, "utf-8": Qe2, hex: Je2.base16, latin1: pe3, ascii: pe3, binary: pe3, ...Je2 };
function br3(n4, e2 = "utf8") {
  const t = mr3[e2];
  if (!t) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Xe3(globalThis.Buffer.from(n4, "utf-8")) : t.decoder.decode(`${t.prefix}${n4}`);
}
var De2 = "wc";
var Ze3 = 2;
var Z = "core";
var z3 = `${De2}@2:${Z}:`;
var et = { name: Z, logger: "error" };
var tt = { database: ":memory:" };
var it2 = "crypto";
var ye3 = "client_ed25519_seed";
var st = import_time3.ONE_DAY;
var rt2 = "keychain";
var nt2 = "0.3";
var ot = "messages";
var at = "0.3";
var ht2 = import_time3.SIX_HOURS;
var ct2 = "publisher";
var lt2 = "irn";
var ut2 = "error";
var me3 = "wss://relay.walletconnect.com";
var be3 = "wss://relay.walletconnect.org";
var dt2 = "relayer";
var v3 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" };
var gt2 = "_subscription";
var f3 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" };
var pt = import_time3.ONE_SECOND;
var Dt3 = "2.12.2";
var yt2 = 1e4;
var mt = "0.3";
var bt2 = "WALLETCONNECT_CLIENT_ID";
var S3 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" };
var ft2 = "subscription";
var Et2 = "0.3";
var wt2 = import_time3.FIVE_SECONDS * 1e3;
var vt2 = "pairing";
var It2 = "0.3";
var F = { wc_pairingDelete: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: import_time3.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: import_time3.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 0 } } };
var V2 = { create: "pairing_create", expire: "pairing_expire", delete: "pairing_delete", ping: "pairing_ping" };
var I2 = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" };
var Ct = "history";
var _t2 = "0.3";
var Rt2 = "expirer";
var C3 = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" };
var Tt3 = "0.3";
var ee = "verify-api";
var k4 = "https://verify.walletconnect.com";
var te2 = "https://verify.walletconnect.org";
var St2 = [k4, te2];
var Pt2 = "echo";
var xt2 = "https://echo.walletconnect.com";
var Ot3 = class {
  constructor(e2, t) {
    this.core = e2, this.logger = t, this.keychain = /* @__PURE__ */ new Map(), this.name = rt2, this.version = nt2, this.initialized = false, this.storagePrefix = z3, this.init = async () => {
      if (!this.initialized) {
        const i3 = await this.getKeyChain();
        typeof i3 < "u" && (this.keychain = i3), this.initialized = true;
      }
    }, this.has = (i3) => (this.isInitialized(), this.keychain.has(i3)), this.set = async (i3, s2) => {
      this.isInitialized(), this.keychain.set(i3, s2), await this.persist();
    }, this.get = (i3) => {
      this.isInitialized();
      const s2 = this.keychain.get(i3);
      if (typeof s2 > "u") {
        const { message: r2 } = xe("NO_MATCHING_KEY", `${this.name}: ${i3}`);
        throw new Error(r2);
      }
      return s2;
    }, this.del = async (i3) => {
      this.isInitialized(), this.keychain.delete(i3), await this.persist();
    }, this.core = e2, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setKeyChain(e2) {
    await this.core.storage.setItem(this.storageKey, i0(e2));
  }
  async getKeyChain() {
    const e2 = await this.core.storage.getItem(this.storageKey);
    return typeof e2 < "u" ? n0(e2) : void 0;
  }
  async persist() {
    await this.setKeyChain(this.keychain);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var At = class {
  constructor(e2, t, i3) {
    this.core = e2, this.logger = t, this.name = it2, this.initialized = false, this.init = async () => {
      this.initialized || (await this.keychain.init(), this.initialized = true);
    }, this.hasKeys = (s2) => (this.isInitialized(), this.keychain.has(s2)), this.getClientId = async () => {
      this.isInitialized();
      const s2 = await this.getClientSeed(), r2 = Po2(s2);
      return Qe(r2.publicKey);
    }, this.generateKeyPair = () => {
      this.isInitialized();
      const s2 = mu();
      return this.setPrivateKey(s2.publicKey, s2.privateKey);
    }, this.signJWT = async (s2) => {
      this.isInitialized();
      const r2 = await this.getClientSeed(), o2 = Po2(r2), a3 = gu(), h5 = st;
      return await Qo2(a3, s2, h5, o2);
    }, this.generateSharedKey = (s2, r2, o2) => {
      this.isInitialized();
      const a3 = this.getPrivateKey(s2), h5 = Au(a3, r2);
      return this.setSymKey(h5, o2);
    }, this.setSymKey = async (s2, r2) => {
      this.isInitialized();
      const o2 = r2 || bu(s2);
      return await this.keychain.set(o2, s2), o2;
    }, this.deleteKeyPair = async (s2) => {
      this.isInitialized(), await this.keychain.del(s2);
    }, this.deleteSymKey = async (s2) => {
      this.isInitialized(), await this.keychain.del(s2);
    }, this.encode = async (s2, r2, o2) => {
      this.isInitialized();
      const a3 = eo(o2), h5 = safeJsonStringify(r2);
      if (Eu(a3)) {
        const m2 = a3.senderPublicKey, L3 = a3.receiverPublicKey;
        s2 = await this.generateSharedKey(m2, L3);
      }
      const l3 = this.getSymKey(s2), { type: d3, senderPublicKey: g3 } = a3;
      return wu({ type: d3, symKey: l3, message: h5, senderPublicKey: g3 });
    }, this.decode = async (s2, r2, o2) => {
      this.isInitialized();
      const a3 = Mu(r2, o2);
      if (Eu(a3)) {
        const h5 = a3.receiverPublicKey, l3 = a3.senderPublicKey;
        s2 = await this.generateSharedKey(h5, l3);
      }
      try {
        const h5 = this.getSymKey(s2), l3 = xu({ symKey: h5, encoded: r2 });
        return safeJsonParse(l3);
      } catch (h5) {
        this.logger.error(`Failed to decode message from topic: '${s2}', clientId: '${await this.getClientId()}'`), this.logger.error(h5);
      }
    }, this.getPayloadType = (s2) => {
      const r2 = Xi(s2);
      return Mr(r2.type);
    }, this.getPayloadSenderPublicKey = (s2) => {
      const r2 = Xi(s2);
      return r2.senderPublicKey ? toString(r2.senderPublicKey, zt) : void 0;
    }, this.core = e2, this.logger = E2(t, this.name), this.keychain = i3 || new Ot3(this.core, this.logger);
  }
  get context() {
    return y2(this.logger);
  }
  async setPrivateKey(e2, t) {
    return await this.keychain.set(e2, t), e2;
  }
  getPrivateKey(e2) {
    return this.keychain.get(e2);
  }
  async getClientSeed() {
    let e2 = "";
    try {
      e2 = this.keychain.get(ye3);
    } catch {
      e2 = gu(), await this.keychain.set(ye3, e2);
    }
    return br3(e2, "base16");
  }
  getSymKey(e2) {
    return this.keychain.get(e2);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var zt3 = class extends a {
  constructor(e2, t) {
    super(e2, t), this.logger = e2, this.core = t, this.messages = /* @__PURE__ */ new Map(), this.name = ot, this.version = at, this.initialized = false, this.storagePrefix = z3, this.init = async () => {
      if (!this.initialized) {
        this.logger.trace("Initialized");
        try {
          const i3 = await this.getRelayerMessages();
          typeof i3 < "u" && (this.messages = i3), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
        } catch (i3) {
          this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i3);
        } finally {
          this.initialized = true;
        }
      }
    }, this.set = async (i3, s2) => {
      this.isInitialized();
      const r2 = yu(s2);
      let o2 = this.messages.get(i3);
      return typeof o2 > "u" && (o2 = {}), typeof o2[r2] < "u" || (o2[r2] = s2, this.messages.set(i3, o2), await this.persist()), r2;
    }, this.get = (i3) => {
      this.isInitialized();
      let s2 = this.messages.get(i3);
      return typeof s2 > "u" && (s2 = {}), s2;
    }, this.has = (i3, s2) => {
      this.isInitialized();
      const r2 = this.get(i3), o2 = yu(s2);
      return typeof r2[o2] < "u";
    }, this.del = async (i3) => {
      this.isInitialized(), this.messages.delete(i3), await this.persist();
    }, this.logger = E2(e2, this.name), this.core = t;
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setRelayerMessages(e2) {
    await this.core.storage.setItem(this.storageKey, i0(e2));
  }
  async getRelayerMessages() {
    const e2 = await this.core.storage.getItem(this.storageKey);
    return typeof e2 < "u" ? n0(e2) : void 0;
  }
  async persist() {
    await this.setRelayerMessages(this.messages);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Ir3 = class extends u {
  constructor(e2, t) {
    super(e2, t), this.relayer = e2, this.logger = t, this.events = new import_events5.EventEmitter(), this.name = ct2, this.queue = /* @__PURE__ */ new Map(), this.publishTimeout = (0, import_time3.toMiliseconds)(import_time3.ONE_MINUTE), this.failedPublishTimeout = (0, import_time3.toMiliseconds)(import_time3.ONE_SECOND), this.needsTransportRestart = false, this.publish = async (i3, s2, r2) => {
      var o2;
      this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i3, message: s2, opts: r2 } });
      const a3 = (r2 == null ? void 0 : r2.ttl) || ht2, h5 = Su(r2), l3 = (r2 == null ? void 0 : r2.prompt) || false, d3 = (r2 == null ? void 0 : r2.tag) || 0, g3 = (r2 == null ? void 0 : r2.id) || getBigIntRpcId().toString(), m2 = { topic: i3, message: s2, opts: { ttl: a3, relay: h5, prompt: l3, tag: d3, id: g3 } }, L3 = `Failed to publish payload, please try again. id:${g3} tag:${d3}`, u3 = Date.now();
      let p3, _3 = 1;
      try {
        for (; p3 === void 0; ) {
          if (Date.now() - u3 > this.publishTimeout) throw new Error(L3);
          this.logger.trace({ id: g3, attempts: _3 }, `publisher.publish - attempt ${_3}`), p3 = await await u0(this.rpcPublish(i3, s2, a3, h5, l3, d3, g3).catch((D2) => this.logger.warn(D2)), this.publishTimeout, L3), _3++, p3 || await new Promise((D2) => setTimeout(D2, this.failedPublishTimeout));
        }
        this.relayer.events.emit(v3.publish, m2), this.logger.debug("Successfully Published Payload"), this.logger.trace({ type: "method", method: "publish", params: { id: g3, topic: i3, message: s2, opts: r2 } });
      } catch (D2) {
        if (this.logger.debug("Failed to Publish Payload"), this.logger.error(D2), (o2 = r2 == null ? void 0 : r2.internal) != null && o2.throwOnFailedPublish) throw D2;
        this.queue.set(g3, m2);
      }
    }, this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.relayer = e2, this.logger = E2(t, this.name), this.registerEventListeners();
  }
  get context() {
    return y2(this.logger);
  }
  rpcPublish(e2, t, i3, s2, r2, o2, a3) {
    var h5, l3, d3, g3;
    const m2 = { method: Nu(s2.protocol).publish, params: { topic: e2, message: t, ttl: i3, prompt: r2, tag: o2 }, id: a3 };
    return Pe((h5 = m2.params) == null ? void 0 : h5.prompt) && ((l3 = m2.params) == null || delete l3.prompt), Pe((d3 = m2.params) == null ? void 0 : d3.tag) && ((g3 = m2.params) == null || delete g3.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: m2 }), this.relayer.request(m2);
  }
  removeRequestFromQueue(e2) {
    this.queue.delete(e2);
  }
  checkQueue() {
    this.queue.forEach(async (e2) => {
      const { topic: t, message: i3, opts: s2 } = e2;
      await this.publish(t, i3, s2);
    });
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => {
      if (this.needsTransportRestart) {
        this.needsTransportRestart = false, this.relayer.events.emit(v3.connection_stalled);
        return;
      }
      this.checkQueue();
    }), this.relayer.on(v3.message_ack, (e2) => {
      this.removeRequestFromQueue(e2.id.toString());
    });
  }
};
var Cr3 = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map(), this.set = (e2, t) => {
      const i3 = this.get(e2);
      this.exists(e2, t) || this.map.set(e2, [...i3, t]);
    }, this.get = (e2) => this.map.get(e2) || [], this.exists = (e2, t) => this.get(e2).includes(t), this.delete = (e2, t) => {
      if (typeof t > "u") {
        this.map.delete(e2);
        return;
      }
      if (!this.map.has(e2)) return;
      const i3 = this.get(e2);
      if (!this.exists(e2, t)) return;
      const s2 = i3.filter((r2) => r2 !== t);
      if (!s2.length) {
        this.map.delete(e2);
        return;
      }
      this.map.set(e2, s2);
    }, this.clear = () => {
      this.map.clear();
    };
  }
  get topics() {
    return Array.from(this.map.keys());
  }
};
var _r3 = Object.defineProperty;
var Rr3 = Object.defineProperties;
var Tr3 = Object.getOwnPropertyDescriptors;
var Nt2 = Object.getOwnPropertySymbols;
var Sr3 = Object.prototype.hasOwnProperty;
var Pr3 = Object.prototype.propertyIsEnumerable;
var Lt3 = (n4, e2, t) => e2 in n4 ? _r3(n4, e2, { enumerable: true, configurable: true, writable: true, value: t }) : n4[e2] = t;
var q = (n4, e2) => {
  for (var t in e2 || (e2 = {})) Sr3.call(e2, t) && Lt3(n4, t, e2[t]);
  if (Nt2) for (var t of Nt2(e2)) Pr3.call(e2, t) && Lt3(n4, t, e2[t]);
  return n4;
};
var fe3 = (n4, e2) => Rr3(n4, Tr3(e2));
var Ut3 = class extends d2 {
  constructor(e2, t) {
    super(e2, t), this.relayer = e2, this.logger = t, this.subscriptions = /* @__PURE__ */ new Map(), this.topicMap = new Cr3(), this.events = new import_events5.EventEmitter(), this.name = ft2, this.version = Et2, this.pending = /* @__PURE__ */ new Map(), this.cached = [], this.initialized = false, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = z3, this.subscribeTimeout = (0, import_time3.toMiliseconds)(import_time3.ONE_MINUTE), this.restartInProgress = false, this.batchSubscribeTopicsLimit = 500, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId());
    }, this.subscribe = async (i3, s2) => {
      await this.restartToComplete(), this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i3, opts: s2 } });
      try {
        const r2 = Su(s2), o2 = { topic: i3, relay: r2 };
        this.pending.set(i3, o2);
        const a3 = await this.rpcSubscribe(i3, r2);
        return typeof a3 == "string" && (this.onSubscribe(a3, o2), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i3, opts: s2 } })), a3;
      } catch (r2) {
        throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(r2), r2;
      }
    }, this.unsubscribe = async (i3, s2) => {
      await this.restartToComplete(), this.isInitialized(), typeof (s2 == null ? void 0 : s2.id) < "u" ? await this.unsubscribeById(i3, s2.id, s2) : await this.unsubscribeByTopic(i3, s2);
    }, this.isSubscribed = async (i3) => {
      if (this.topics.includes(i3)) return true;
      const s2 = `${this.pendingSubscriptionWatchLabel}_${i3}`;
      return await new Promise((r2, o2) => {
        const a3 = new import_time3.Watch();
        a3.start(s2);
        const h5 = setInterval(() => {
          !this.pending.has(i3) && this.topics.includes(i3) && (clearInterval(h5), a3.stop(s2), r2(true)), a3.elapsed(s2) >= wt2 && (clearInterval(h5), a3.stop(s2), o2(new Error("Subscription resolution timeout")));
        }, this.pollingInterval);
      }).catch(() => false);
    }, this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.start = async () => {
      await this.onConnect();
    }, this.stop = async () => {
      await this.onDisconnect();
    }, this.restart = async () => {
      this.restartInProgress = true, await this.restore(), await this.reset(), this.restartInProgress = false;
    }, this.relayer = e2, this.logger = E2(t, this.name), this.clientId = "";
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.subscriptions.size;
  }
  get ids() {
    return Array.from(this.subscriptions.keys());
  }
  get values() {
    return Array.from(this.subscriptions.values());
  }
  get topics() {
    return this.topicMap.topics;
  }
  hasSubscription(e2, t) {
    let i3 = false;
    try {
      i3 = this.getSubscription(e2).topic === t;
    } catch {
    }
    return i3;
  }
  onEnable() {
    this.cached = [], this.initialized = true;
  }
  onDisable() {
    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
  }
  async unsubscribeByTopic(e2, t) {
    const i3 = this.topicMap.get(e2);
    await Promise.all(i3.map(async (s2) => await this.unsubscribeById(e2, s2, t)));
  }
  async unsubscribeById(e2, t, i3) {
    this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e2, id: t, opts: i3 } });
    try {
      const s2 = Su(i3);
      await this.rpcUnsubscribe(e2, t, s2);
      const r2 = tr("USER_DISCONNECTED", `${this.name}, ${e2}`);
      await this.onUnsubscribe(e2, t, r2), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e2, id: t, opts: i3 } });
    } catch (s2) {
      throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(s2), s2;
    }
  }
  async rpcSubscribe(e2, t) {
    const i3 = { method: Nu(t.protocol).subscribe, params: { topic: e2 } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i3 });
    try {
      return await await u0(this.relayer.request(i3).catch((s2) => this.logger.warn(s2)), this.subscribeTimeout) ? yu(e2 + this.clientId) : null;
    } catch {
      this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(v3.connection_stalled);
    }
    return null;
  }
  async rpcBatchSubscribe(e2) {
    if (!e2.length) return;
    const t = e2[0].relay, i3 = { method: Nu(t.protocol).batchSubscribe, params: { topics: e2.map((s2) => s2.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i3 });
    try {
      return await await u0(this.relayer.request(i3).catch((s2) => this.logger.warn(s2)), this.subscribeTimeout);
    } catch {
      this.relayer.events.emit(v3.connection_stalled);
    }
  }
  rpcUnsubscribe(e2, t, i3) {
    const s2 = { method: Nu(i3.protocol).unsubscribe, params: { topic: e2, id: t } };
    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s2 }), this.relayer.request(s2);
  }
  onSubscribe(e2, t) {
    this.setSubscription(e2, fe3(q({}, t), { id: e2 })), this.pending.delete(t.topic);
  }
  onBatchSubscribe(e2) {
    e2.length && e2.forEach((t) => {
      this.setSubscription(t.id, q({}, t)), this.pending.delete(t.topic);
    });
  }
  async onUnsubscribe(e2, t, i3) {
    this.events.removeAllListeners(t), this.hasSubscription(t, e2) && this.deleteSubscription(t, i3), await this.relayer.messages.del(e2);
  }
  async setRelayerSubscriptions(e2) {
    await this.relayer.core.storage.setItem(this.storageKey, e2);
  }
  async getRelayerSubscriptions() {
    return await this.relayer.core.storage.getItem(this.storageKey);
  }
  setSubscription(e2, t) {
    this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e2, subscription: t }), this.addSubscription(e2, t);
  }
  addSubscription(e2, t) {
    this.subscriptions.set(e2, q({}, t)), this.topicMap.set(t.topic, e2), this.events.emit(S3.created, t);
  }
  getSubscription(e2) {
    this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e2 });
    const t = this.subscriptions.get(e2);
    if (!t) {
      const { message: i3 } = xe("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw new Error(i3);
    }
    return t;
  }
  deleteSubscription(e2, t) {
    this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e2, reason: t });
    const i3 = this.getSubscription(e2);
    this.subscriptions.delete(e2), this.topicMap.delete(i3.topic, e2), this.events.emit(S3.deleted, fe3(q({}, i3), { reason: t }));
  }
  async persist() {
    await this.setRelayerSubscriptions(this.values), this.events.emit(S3.sync);
  }
  async reset() {
    if (this.cached.length) {
      const e2 = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
      for (let t = 0; t < e2; t++) {
        const i3 = this.cached.splice(0, this.batchSubscribeTopicsLimit);
        await this.batchSubscribe(i3);
      }
    }
    this.events.emit(S3.resubscribed);
  }
  async restore() {
    try {
      const e2 = await this.getRelayerSubscriptions();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.subscriptions.size) {
        const { message: t } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e2);
    }
  }
  async batchSubscribe(e2) {
    if (!e2.length) return;
    const t = await this.rpcBatchSubscribe(e2);
    Er(t) && this.onBatchSubscribe(t.map((i3, s2) => fe3(q({}, e2[s2]), { id: i3 })));
  }
  async onConnect() {
    await this.restart(), this.onEnable();
  }
  onDisconnect() {
    this.onDisable();
  }
  async checkPending() {
    if (!this.initialized || !this.relayer.connected) return;
    const e2 = [];
    this.pending.forEach((t) => {
      e2.push(t);
    }), await this.batchSubscribe(e2);
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, async () => {
      await this.checkPending();
    }), this.events.on(S3.created, async (e2) => {
      const t = S3.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), await this.persist();
    }), this.events.on(S3.deleted, async (e2) => {
      const t = S3.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), await this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  async restartToComplete() {
    this.restartInProgress && await new Promise((e2) => {
      const t = setInterval(() => {
        this.restartInProgress || (clearInterval(t), e2());
      }, this.pollingInterval);
    });
  }
};
var xr3 = Object.defineProperty;
var $t3 = Object.getOwnPropertySymbols;
var Or3 = Object.prototype.hasOwnProperty;
var Ar3 = Object.prototype.propertyIsEnumerable;
var Ft3 = (n4, e2, t) => e2 in n4 ? xr3(n4, e2, { enumerable: true, configurable: true, writable: true, value: t }) : n4[e2] = t;
var zr3 = (n4, e2) => {
  for (var t in e2 || (e2 = {})) Or3.call(e2, t) && Ft3(n4, t, e2[t]);
  if ($t3) for (var t of $t3(e2)) Ar3.call(e2, t) && Ft3(n4, t, e2[t]);
  return n4;
};
var kt3 = class extends g2 {
  constructor(e2) {
    super(e2), this.protocol = "wc", this.version = 2, this.events = new import_events5.EventEmitter(), this.name = dt2, this.transportExplicitlyClosed = false, this.initialized = false, this.connectionAttemptInProgress = false, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = ["socket hang up", "socket stalled", "interrupted"], this.hasExperiencedNetworkDisruption = false, this.requestsInFlight = /* @__PURE__ */ new Map(), this.heartBeatTimeout = (0, import_time3.toMiliseconds)(import_time3.THIRTY_SECONDS + import_time3.ONE_SECOND), this.request = async (t) => {
      var i3, s2;
      this.logger.debug("Publishing Request Payload");
      const r2 = t.id || getBigIntRpcId().toString();
      await this.toEstablishConnection();
      try {
        const o2 = this.provider.request(t);
        this.requestsInFlight.set(r2, { promise: o2, request: t }), this.logger.trace({ id: r2, method: t.method, topic: (i3 = t.params) == null ? void 0 : i3.topic }, "relayer.request - attempt to publish...");
        const a3 = await new Promise(async (h5, l3) => {
          const d3 = () => {
            l3(new Error(`relayer.request - publish interrupted, id: ${r2}`));
          };
          this.provider.on(f3.disconnect, d3);
          const g3 = await o2;
          this.provider.off(f3.disconnect, d3), h5(g3);
        });
        return this.logger.trace({ id: r2, method: t.method, topic: (s2 = t.params) == null ? void 0 : s2.topic }, "relayer.request - published"), a3;
      } catch (o2) {
        throw this.logger.debug(`Failed to Publish Request: ${r2}`), o2;
      } finally {
        this.requestsInFlight.delete(r2);
      }
    }, this.resetPingTimeout = () => {
      if (pi()) try {
        clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(() => {
          var t, i3, s2;
          (s2 = (i3 = (t = this.provider) == null ? void 0 : t.connection) == null ? void 0 : i3.socket) == null || s2.terminate();
        }, this.heartBeatTimeout);
      } catch (t) {
        this.logger.warn(t);
      }
    }, this.onPayloadHandler = (t) => {
      this.onProviderPayload(t), this.resetPingTimeout();
    }, this.onConnectHandler = () => {
      this.startPingTimeout(), this.events.emit(v3.connect);
    }, this.onDisconnectHandler = () => {
      this.onProviderDisconnect();
    }, this.onProviderErrorHandler = (t) => {
      this.logger.error(t), this.events.emit(v3.error, t), this.logger.info("Fatal socket error received, closing transport"), this.transportClose();
    }, this.registerProviderListeners = () => {
      this.provider.on(f3.payload, this.onPayloadHandler), this.provider.on(f3.connect, this.onConnectHandler), this.provider.on(f3.disconnect, this.onDisconnectHandler), this.provider.on(f3.error, this.onProviderErrorHandler);
    }, this.core = e2.core, this.logger = typeof e2.logger < "u" && typeof e2.logger != "string" ? E2(e2.logger, this.name) : (0, import_pino2.default)(k2({ level: e2.logger || ut2 })), this.messages = new zt3(this.logger, e2.core), this.subscriber = new Ut3(this, this.logger), this.publisher = new Ir3(this, this.logger), this.relayUrl = (e2 == null ? void 0 : e2.relayUrl) || me3, this.projectId = e2.projectId, this.bundleId = Wo(), this.provider = {};
  }
  async init() {
    this.logger.trace("Initialized"), this.registerEventListeners(), await this.createProvider(), await Promise.all([this.messages.init(), this.subscriber.init()]);
    try {
      await this.transportOpen();
    } catch {
      this.logger.warn(`Connection via ${this.relayUrl} failed, attempting to connect via failover domain ${be3}...`), await this.restartTransport(be3);
    }
    this.initialized = true, setTimeout(async () => {
      this.subscriber.topics.length === 0 && this.subscriber.pending.size === 0 && (this.logger.info("No topics subscribed to after init, closing transport"), await this.transportClose(), this.transportExplicitlyClosed = false);
    }, yt2);
  }
  get context() {
    return y2(this.logger);
  }
  get connected() {
    var e2, t, i3;
    return ((i3 = (t = (e2 = this.provider) == null ? void 0 : e2.connection) == null ? void 0 : t.socket) == null ? void 0 : i3.readyState) === 1;
  }
  get connecting() {
    var e2, t, i3;
    return ((i3 = (t = (e2 = this.provider) == null ? void 0 : e2.connection) == null ? void 0 : t.socket) == null ? void 0 : i3.readyState) === 0;
  }
  async publish(e2, t, i3) {
    this.isInitialized(), await this.publisher.publish(e2, t, i3), await this.recordMessageEvent({ topic: e2, message: t, publishedAt: Date.now() });
  }
  async subscribe(e2, t) {
    var i3;
    this.isInitialized();
    let s2 = ((i3 = this.subscriber.topicMap.get(e2)) == null ? void 0 : i3[0]) || "", r2;
    const o2 = (a3) => {
      a3.topic === e2 && (this.subscriber.off(S3.created, o2), r2());
    };
    return await Promise.all([new Promise((a3) => {
      r2 = a3, this.subscriber.on(S3.created, o2);
    }), new Promise(async (a3) => {
      s2 = await this.subscriber.subscribe(e2, t) || s2, a3();
    })]), s2;
  }
  async unsubscribe(e2, t) {
    this.isInitialized(), await this.subscriber.unsubscribe(e2, t);
  }
  on(e2, t) {
    this.events.on(e2, t);
  }
  once(e2, t) {
    this.events.once(e2, t);
  }
  off(e2, t) {
    this.events.off(e2, t);
  }
  removeListener(e2, t) {
    this.events.removeListener(e2, t);
  }
  async transportDisconnect() {
    if (!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0) try {
      await Promise.all(Array.from(this.requestsInFlight.values()).map((e2) => e2.promise));
    } catch (e2) {
      this.logger.warn(e2);
    }
    this.hasExperiencedNetworkDisruption || this.connected ? await u0(this.provider.disconnect(), 2e3, "provider.disconnect()").catch(() => this.onProviderDisconnect()) : this.onProviderDisconnect();
  }
  async transportClose() {
    this.transportExplicitlyClosed = true, await this.transportDisconnect();
  }
  async transportOpen(e2) {
    await this.confirmOnlineStateOrThrow(), e2 && e2 !== this.relayUrl && (this.relayUrl = e2, await this.transportDisconnect(), await this.createProvider()), this.connectionAttemptInProgress = true, this.transportExplicitlyClosed = false;
    try {
      await new Promise(async (t, i3) => {
        const s2 = () => {
          this.provider.off(f3.disconnect, s2), i3(new Error("Connection interrupted while trying to subscribe"));
        };
        this.provider.on(f3.disconnect, s2), await u0(this.provider.connect(), (0, import_time3.toMiliseconds)(import_time3.ONE_MINUTE), `Socket stalled when trying to connect to ${this.relayUrl}`).catch((r2) => {
          i3(r2);
        }), await this.subscriber.start(), this.hasExperiencedNetworkDisruption = false, t();
      });
    } catch (t) {
      this.logger.error(t);
      const i3 = t;
      if (!this.isConnectionStalled(i3.message)) throw t;
    } finally {
      this.connectionAttemptInProgress = false;
    }
  }
  async restartTransport(e2) {
    this.connectionAttemptInProgress || (this.relayUrl = e2 || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.createProvider(), await this.transportOpen());
  }
  async confirmOnlineStateOrThrow() {
    if (!await hh()) throw new Error("No internet connection detected. Please restart your network and try again.");
  }
  startPingTimeout() {
    var e2, t, i3, s2, r2;
    if (pi()) try {
      (t = (e2 = this.provider) == null ? void 0 : e2.connection) != null && t.socket && ((r2 = (s2 = (i3 = this.provider) == null ? void 0 : i3.connection) == null ? void 0 : s2.socket) == null || r2.once("ping", () => {
        this.resetPingTimeout();
      })), this.resetPingTimeout();
    } catch (o2) {
      this.logger.warn(o2);
    }
  }
  isConnectionStalled(e2) {
    return this.staleConnectionErrors.some((t) => e2.includes(t));
  }
  async createProvider() {
    this.provider.connection && this.unregisterProviderListeners();
    const e2 = await this.core.crypto.signJWT(this.relayUrl);
    this.provider = new JsonRpcProvider(new f2($o({ sdkVersion: Dt3, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e2, useOnCloseEvent: true, bundleId: this.bundleId }))), this.registerProviderListeners();
  }
  async recordMessageEvent(e2) {
    const { topic: t, message: i3 } = e2;
    await this.messages.set(t, i3);
  }
  async shouldIgnoreMessageEvent(e2) {
    const { topic: t, message: i3 } = e2;
    if (!i3 || i3.length === 0) return this.logger.debug(`Ignoring invalid/empty message: ${i3}`), true;
    if (!await this.subscriber.isSubscribed(t)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t}`), true;
    const s2 = this.messages.has(t, i3);
    return s2 && this.logger.debug(`Ignoring duplicate message: ${i3}`), s2;
  }
  async onProviderPayload(e2) {
    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e2 }), isJsonRpcRequest(e2)) {
      if (!e2.method.endsWith(gt2)) return;
      const t = e2.params, { topic: i3, message: s2, publishedAt: r2 } = t.data, o2 = { topic: i3, message: s2, publishedAt: r2 };
      this.logger.debug("Emitting Relayer Payload"), this.logger.trace(zr3({ type: "event", event: t.id }, o2)), this.events.emit(t.id, o2), await this.acknowledgePayload(e2), await this.onMessageEvent(o2);
    } else isJsonRpcResponse(e2) && this.events.emit(v3.message_ack, e2);
  }
  async onMessageEvent(e2) {
    await this.shouldIgnoreMessageEvent(e2) || (this.events.emit(v3.message, e2), await this.recordMessageEvent(e2));
  }
  async acknowledgePayload(e2) {
    const t = formatJsonRpcResult(e2.id, true);
    await this.provider.connection.send(t);
  }
  unregisterProviderListeners() {
    this.provider.off(f3.payload, this.onPayloadHandler), this.provider.off(f3.connect, this.onConnectHandler), this.provider.off(f3.disconnect, this.onDisconnectHandler), this.provider.off(f3.error, this.onProviderErrorHandler);
  }
  async registerEventListeners() {
    let e2 = await hh();
    ch(async (t) => {
      e2 !== t && (e2 = t, t ? await this.restartTransport().catch((i3) => this.logger.error(i3)) : (this.hasExperiencedNetworkDisruption = true, await this.transportDisconnect(), this.transportExplicitlyClosed = false));
    });
  }
  async onProviderDisconnect() {
    await this.subscriber.stop(), this.events.emit(v3.disconnect), this.connectionAttemptInProgress = false, !this.transportExplicitlyClosed && setTimeout(async () => {
      await this.transportOpen().catch((e2) => this.logger.error(e2));
    }, (0, import_time3.toMiliseconds)(pt));
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  async toEstablishConnection() {
    await this.confirmOnlineStateOrThrow(), !this.connected && (this.connectionAttemptInProgress && await new Promise((e2) => {
      const t = setInterval(() => {
        this.connected && (clearInterval(t), e2());
      }, this.connectionStatusPollingInterval);
    }), await this.transportOpen());
  }
};
var Nr3 = Object.defineProperty;
var Bt2 = Object.getOwnPropertySymbols;
var Lr3 = Object.prototype.hasOwnProperty;
var Ur3 = Object.prototype.propertyIsEnumerable;
var Mt2 = (n4, e2, t) => e2 in n4 ? Nr3(n4, e2, { enumerable: true, configurable: true, writable: true, value: t }) : n4[e2] = t;
var Kt3 = (n4, e2) => {
  for (var t in e2 || (e2 = {})) Lr3.call(e2, t) && Mt2(n4, t, e2[t]);
  if (Bt2) for (var t of Bt2(e2)) Ur3.call(e2, t) && Mt2(n4, t, e2[t]);
  return n4;
};
var Vt2 = class extends p2 {
  constructor(e2, t, i3, s2 = z3, r2 = void 0) {
    super(e2, t, i3, s2), this.core = e2, this.logger = t, this.name = i3, this.map = /* @__PURE__ */ new Map(), this.version = mt, this.cached = [], this.initialized = false, this.storagePrefix = z3, this.recentlyDeleted = [], this.recentlyDeletedLimit = 200, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((o2) => {
        this.getKey && o2 !== null && !Pe(o2) ? this.map.set(this.getKey(o2), o2) : Gu(o2) ? this.map.set(o2.id, o2) : Yu(o2) && this.map.set(o2.topic, o2);
      }), this.cached = [], this.initialized = true);
    }, this.set = async (o2, a3) => {
      this.isInitialized(), this.map.has(o2) ? await this.update(o2, a3) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: o2, value: a3 }), this.map.set(o2, a3), await this.persist());
    }, this.get = (o2) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: o2 }), this.getData(o2)), this.getAll = (o2) => (this.isInitialized(), o2 ? this.values.filter((a3) => Object.keys(o2).every((h5) => (0, import_lodash.default)(a3[h5], o2[h5]))) : this.values), this.update = async (o2, a3) => {
      this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: o2, update: a3 });
      const h5 = Kt3(Kt3({}, this.getData(o2)), a3);
      this.map.set(o2, h5), await this.persist();
    }, this.delete = async (o2, a3) => {
      this.isInitialized(), this.map.has(o2) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: o2, reason: a3 }), this.map.delete(o2), this.addToRecentlyDeleted(o2), await this.persist());
    }, this.logger = E2(t, this.name), this.storagePrefix = s2, this.getKey = r2;
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.map.size;
  }
  get keys() {
    return Array.from(this.map.keys());
  }
  get values() {
    return Array.from(this.map.values());
  }
  addToRecentlyDeleted(e2) {
    this.recentlyDeleted.push(e2), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
  }
  async setDataStore(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getDataStore() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getData(e2) {
    const t = this.map.get(e2);
    if (!t) {
      if (this.recentlyDeleted.includes(e2)) {
        const { message: s2 } = xe("MISSING_OR_INVALID", `Record was recently deleted - ${this.name}: ${e2}`);
        throw this.logger.error(s2), new Error(s2);
      }
      const { message: i3 } = xe("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw this.logger.error(i3), new Error(i3);
    }
    return t;
  }
  async persist() {
    await this.setDataStore(this.values);
  }
  async restore() {
    try {
      const e2 = await this.getDataStore();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.map.size) {
        const { message: t } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e2);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var qt3 = class {
  constructor(e2, t) {
    this.core = e2, this.logger = t, this.name = vt2, this.version = It2, this.events = new import_events5.default(), this.initialized = false, this.storagePrefix = z3, this.ignoredPayloadTypes = [lr], this.registeredMethods = [], this.init = async () => {
      this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
    }, this.register = ({ methods: i3 }) => {
      this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...i3])];
    }, this.create = async (i3) => {
      this.isInitialized();
      const s2 = gu(), r2 = await this.core.crypto.setSymKey(s2), o2 = d0(import_time3.FIVE_MINUTES), a3 = { protocol: lt2 }, h5 = { topic: r2, expiry: o2, relay: a3, active: false }, l3 = Du({ protocol: this.core.protocol, version: this.core.version, topic: r2, symKey: s2, relay: a3, expiryTimestamp: o2, methods: i3 == null ? void 0 : i3.methods });
      return await this.pairings.set(r2, h5), await this.core.relayer.subscribe(r2), this.core.expirer.set(r2, o2), { topic: r2, uri: l3 };
    }, this.pair = async (i3) => {
      this.isInitialized(), this.isValidPair(i3);
      const { topic: s2, symKey: r2, relay: o2, expiryTimestamp: a3, methods: h5 } = Pu(i3.uri);
      let l3;
      if (this.pairings.keys.includes(s2) && (l3 = this.pairings.get(s2), l3.active)) throw new Error(`Pairing already exists: ${s2}. Please try again with a new connection URI.`);
      const d3 = a3 || d0(import_time3.FIVE_MINUTES), g3 = { topic: s2, relay: o2, expiry: d3, active: false, methods: h5 };
      return await this.pairings.set(s2, g3), this.core.expirer.set(s2, d3), i3.activatePairing && await this.activate({ topic: s2 }), this.events.emit(V2.create, g3), this.core.crypto.keychain.has(s2) || await this.core.crypto.setSymKey(r2, s2), await this.core.relayer.subscribe(s2, { relay: o2 }), g3;
    }, this.activate = async ({ topic: i3 }) => {
      this.isInitialized();
      const s2 = d0(import_time3.THIRTY_DAYS);
      await this.pairings.update(i3, { active: true, expiry: s2 }), this.core.expirer.set(i3, s2);
    }, this.ping = async (i3) => {
      this.isInitialized(), await this.isValidPing(i3);
      const { topic: s2 } = i3;
      if (this.pairings.keys.includes(s2)) {
        const r2 = await this.sendRequest(s2, "wc_pairingPing", {}), { done: o2, resolve: a3, reject: h5 } = a0();
        this.events.once(v0("pairing_ping", r2), ({ error: l3 }) => {
          l3 ? h5(l3) : a3();
        }), await o2();
      }
    }, this.updateExpiry = async ({ topic: i3, expiry: s2 }) => {
      this.isInitialized(), await this.pairings.update(i3, { expiry: s2 });
    }, this.updateMetadata = async ({ topic: i3, metadata: s2 }) => {
      this.isInitialized(), await this.pairings.update(i3, { peerMetadata: s2 });
    }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async (i3) => {
      this.isInitialized(), await this.isValidDisconnect(i3);
      const { topic: s2 } = i3;
      this.pairings.keys.includes(s2) && (await this.sendRequest(s2, "wc_pairingDelete", tr("USER_DISCONNECTED")), await this.deletePairing(s2));
    }, this.sendRequest = async (i3, s2, r2) => {
      const o2 = formatJsonRpcRequest(s2, r2), a3 = await this.core.crypto.encode(i3, o2), h5 = F[s2].req;
      return this.core.history.set(i3, o2), this.core.relayer.publish(i3, a3, h5), o2.id;
    }, this.sendResult = async (i3, s2, r2) => {
      const o2 = formatJsonRpcResult(i3, r2), a3 = await this.core.crypto.encode(s2, o2), h5 = await this.core.history.get(s2, i3), l3 = F[h5.request.method].res;
      await this.core.relayer.publish(s2, a3, l3), await this.core.history.resolve(o2);
    }, this.sendError = async (i3, s2, r2) => {
      const o2 = formatJsonRpcError(i3, r2), a3 = await this.core.crypto.encode(s2, o2), h5 = await this.core.history.get(s2, i3), l3 = F[h5.request.method] ? F[h5.request.method].res : F.unregistered_method.res;
      await this.core.relayer.publish(s2, a3, l3), await this.core.history.resolve(o2);
    }, this.deletePairing = async (i3, s2) => {
      await this.core.relayer.unsubscribe(i3), await Promise.all([this.pairings.delete(i3, tr("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(i3), s2 ? Promise.resolve() : this.core.expirer.del(i3)]);
    }, this.cleanup = async () => {
      const i3 = this.pairings.getAll().filter((s2) => p0(s2.expiry));
      await Promise.all(i3.map((s2) => this.deletePairing(s2.topic)));
    }, this.onRelayEventRequest = (i3) => {
      const { topic: s2, payload: r2 } = i3;
      switch (r2.method) {
        case "wc_pairingPing":
          return this.onPairingPingRequest(s2, r2);
        case "wc_pairingDelete":
          return this.onPairingDeleteRequest(s2, r2);
        default:
          return this.onUnknownRpcMethodRequest(s2, r2);
      }
    }, this.onRelayEventResponse = async (i3) => {
      const { topic: s2, payload: r2 } = i3, o2 = (await this.core.history.get(s2, r2.id)).request.method;
      switch (o2) {
        case "wc_pairingPing":
          return this.onPairingPingResponse(s2, r2);
        default:
          return this.onUnknownRpcMethodResponse(o2);
      }
    }, this.onPairingPingRequest = async (i3, s2) => {
      const { id: r2 } = s2;
      try {
        this.isValidPing({ topic: i3 }), await this.sendResult(r2, i3, true), this.events.emit(V2.ping, { id: r2, topic: i3 });
      } catch (o2) {
        await this.sendError(r2, i3, o2), this.logger.error(o2);
      }
    }, this.onPairingPingResponse = (i3, s2) => {
      const { id: r2 } = s2;
      setTimeout(() => {
        isJsonRpcResult(s2) ? this.events.emit(v0("pairing_ping", r2), {}) : isJsonRpcError(s2) && this.events.emit(v0("pairing_ping", r2), { error: s2.error });
      }, 500);
    }, this.onPairingDeleteRequest = async (i3, s2) => {
      const { id: r2 } = s2;
      try {
        this.isValidDisconnect({ topic: i3 }), await this.deletePairing(i3), this.events.emit(V2.delete, { id: r2, topic: i3 });
      } catch (o2) {
        await this.sendError(r2, i3, o2), this.logger.error(o2);
      }
    }, this.onUnknownRpcMethodRequest = async (i3, s2) => {
      const { id: r2, method: o2 } = s2;
      try {
        if (this.registeredMethods.includes(o2)) return;
        const a3 = tr("WC_METHOD_UNSUPPORTED", o2);
        await this.sendError(r2, i3, a3), this.logger.error(a3);
      } catch (a3) {
        await this.sendError(r2, i3, a3), this.logger.error(a3);
      }
    }, this.onUnknownRpcMethodResponse = (i3) => {
      this.registeredMethods.includes(i3) || this.logger.error(tr("WC_METHOD_UNSUPPORTED", i3));
    }, this.isValidPair = (i3) => {
      var s2;
      if (!$u(i3)) {
        const { message: o2 } = xe("MISSING_OR_INVALID", `pair() params: ${i3}`);
        throw new Error(o2);
      }
      if (!Ju(i3.uri)) {
        const { message: o2 } = xe("MISSING_OR_INVALID", `pair() uri: ${i3.uri}`);
        throw new Error(o2);
      }
      const r2 = Pu(i3.uri);
      if (!((s2 = r2 == null ? void 0 : r2.relay) != null && s2.protocol)) {
        const { message: o2 } = xe("MISSING_OR_INVALID", "pair() uri#relay-protocol");
        throw new Error(o2);
      }
      if (!(r2 != null && r2.symKey)) {
        const { message: o2 } = xe("MISSING_OR_INVALID", "pair() uri#symKey");
        throw new Error(o2);
      }
      if (r2 != null && r2.expiryTimestamp && (0, import_time3.toMiliseconds)(r2 == null ? void 0 : r2.expiryTimestamp) < Date.now()) {
        const { message: o2 } = xe("EXPIRED", "pair() URI has expired. Please try again with a new connection URI.");
        throw new Error(o2);
      }
    }, this.isValidPing = async (i3) => {
      if (!$u(i3)) {
        const { message: r2 } = xe("MISSING_OR_INVALID", `ping() params: ${i3}`);
        throw new Error(r2);
      }
      const { topic: s2 } = i3;
      await this.isValidPairingTopic(s2);
    }, this.isValidDisconnect = async (i3) => {
      if (!$u(i3)) {
        const { message: r2 } = xe("MISSING_OR_INVALID", `disconnect() params: ${i3}`);
        throw new Error(r2);
      }
      const { topic: s2 } = i3;
      await this.isValidPairingTopic(s2);
    }, this.isValidPairingTopic = async (i3) => {
      if (!Gt(i3, false)) {
        const { message: s2 } = xe("MISSING_OR_INVALID", `pairing topic should be a string: ${i3}`);
        throw new Error(s2);
      }
      if (!this.pairings.keys.includes(i3)) {
        const { message: s2 } = xe("NO_MATCHING_KEY", `pairing topic doesn't exist: ${i3}`);
        throw new Error(s2);
      }
      if (p0(this.pairings.get(i3).expiry)) {
        await this.deletePairing(i3);
        const { message: s2 } = xe("EXPIRED", `pairing topic: ${i3}`);
        throw new Error(s2);
      }
    }, this.core = e2, this.logger = E2(t, this.name), this.pairings = new Vt2(this.core, this.logger, this.name, this.storagePrefix);
  }
  get context() {
    return y2(this.logger);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  registerRelayerEvents() {
    this.core.relayer.on(v3.message, async (e2) => {
      const { topic: t, message: i3 } = e2;
      if (!this.pairings.keys.includes(t) || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i3))) return;
      const s2 = await this.core.crypto.decode(t, i3);
      try {
        isJsonRpcRequest(s2) ? (this.core.history.set(t, s2), this.onRelayEventRequest({ topic: t, payload: s2 })) : isJsonRpcResponse(s2) && (await this.core.history.resolve(s2), await this.onRelayEventResponse({ topic: t, payload: s2 }), this.core.history.delete(t, s2.id));
      } catch (r2) {
        this.logger.error(r2);
      }
    });
  }
  registerExpirerEvents() {
    this.core.expirer.on(C3.expired, async (e2) => {
      const { topic: t } = l0(e2.target);
      t && this.pairings.keys.includes(t) && (await this.deletePairing(t, true), this.events.emit(V2.expire, { topic: t }));
    });
  }
};
var jt3 = class extends h3 {
  constructor(e2, t) {
    super(e2, t), this.core = e2, this.logger = t, this.records = /* @__PURE__ */ new Map(), this.events = new import_events5.EventEmitter(), this.name = Ct, this.version = _t2, this.cached = [], this.initialized = false, this.storagePrefix = z3, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i3) => this.records.set(i3.id, i3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.set = (i3, s2, r2) => {
      if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: i3, request: s2, chainId: r2 }), this.records.has(s2.id)) return;
      const o2 = { id: s2.id, topic: i3, request: { method: s2.method, params: s2.params || null }, chainId: r2, expiry: d0(import_time3.THIRTY_DAYS) };
      this.records.set(o2.id, o2), this.persist(), this.events.emit(I2.created, o2);
    }, this.resolve = async (i3) => {
      if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: i3 }), !this.records.has(i3.id)) return;
      const s2 = await this.getRecord(i3.id);
      typeof s2.response > "u" && (s2.response = isJsonRpcError(i3) ? { error: i3.error } : { result: i3.result }, this.records.set(s2.id, s2), this.persist(), this.events.emit(I2.updated, s2));
    }, this.get = async (i3, s2) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: i3, id: s2 }), await this.getRecord(s2)), this.delete = (i3, s2) => {
      this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: s2 }), this.values.forEach((r2) => {
        if (r2.topic === i3) {
          if (typeof s2 < "u" && r2.id !== s2) return;
          this.records.delete(r2.id), this.events.emit(I2.deleted, r2);
        }
      }), this.persist();
    }, this.exists = async (i3, s2) => (this.isInitialized(), this.records.has(s2) ? (await this.getRecord(s2)).topic === i3 : false), this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get size() {
    return this.records.size;
  }
  get keys() {
    return Array.from(this.records.keys());
  }
  get values() {
    return Array.from(this.records.values());
  }
  get pending() {
    const e2 = [];
    return this.values.forEach((t) => {
      if (typeof t.response < "u") return;
      const i3 = { topic: t.topic, request: formatJsonRpcRequest(t.request.method, t.request.params, t.id), chainId: t.chainId };
      return e2.push(i3);
    }), e2;
  }
  async setJsonRpcRecords(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getJsonRpcRecords() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getRecord(e2) {
    this.isInitialized();
    const t = this.records.get(e2);
    if (!t) {
      const { message: i3 } = xe("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw new Error(i3);
    }
    return t;
  }
  async persist() {
    await this.setJsonRpcRecords(this.values), this.events.emit(I2.sync);
  }
  async restore() {
    try {
      const e2 = await this.getJsonRpcRecords();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.records.size) {
        const { message: t } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e2);
    }
  }
  registerEventListeners() {
    this.events.on(I2.created, (e2) => {
      const t = I2.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 });
    }), this.events.on(I2.updated, (e2) => {
      const t = I2.updated;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 });
    }), this.events.on(I2.deleted, (e2) => {
      const t = I2.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 });
    }), this.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => {
      this.cleanup();
    });
  }
  cleanup() {
    try {
      this.isInitialized();
      let e2 = false;
      this.records.forEach((t) => {
        (0, import_time3.toMiliseconds)(t.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${t.id}`), this.records.delete(t.id), this.events.emit(I2.deleted, t, false), e2 = true);
      }), e2 && this.persist();
    } catch (e2) {
      this.logger.warn(e2);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Gt3 = class extends E3 {
  constructor(e2, t) {
    super(e2, t), this.core = e2, this.logger = t, this.expirations = /* @__PURE__ */ new Map(), this.events = new import_events5.EventEmitter(), this.name = Rt2, this.version = Tt3, this.cached = [], this.initialized = false, this.storagePrefix = z3, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i3) => this.expirations.set(i3.target, i3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.has = (i3) => {
      try {
        const s2 = this.formatTarget(i3);
        return typeof this.getExpiration(s2) < "u";
      } catch {
        return false;
      }
    }, this.set = (i3, s2) => {
      this.isInitialized();
      const r2 = this.formatTarget(i3), o2 = { target: r2, expiry: s2 };
      this.expirations.set(r2, o2), this.checkExpiry(r2, o2), this.events.emit(C3.created, { target: r2, expiration: o2 });
    }, this.get = (i3) => {
      this.isInitialized();
      const s2 = this.formatTarget(i3);
      return this.getExpiration(s2);
    }, this.del = (i3) => {
      if (this.isInitialized(), this.has(i3)) {
        const s2 = this.formatTarget(i3), r2 = this.getExpiration(s2);
        this.expirations.delete(s2), this.events.emit(C3.deleted, { target: s2, expiration: r2 });
      }
    }, this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.expirations.size;
  }
  get keys() {
    return Array.from(this.expirations.keys());
  }
  get values() {
    return Array.from(this.expirations.values());
  }
  formatTarget(e2) {
    if (typeof e2 == "string") return h0(e2);
    if (typeof e2 == "number") return c0(e2);
    const { message: t } = xe("UNKNOWN_TYPE", `Target type: ${typeof e2}`);
    throw new Error(t);
  }
  async setExpirations(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getExpirations() {
    return await this.core.storage.getItem(this.storageKey);
  }
  async persist() {
    await this.setExpirations(this.values), this.events.emit(C3.sync);
  }
  async restore() {
    try {
      const e2 = await this.getExpirations();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.expirations.size) {
        const { message: t } = xe("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e2);
    }
  }
  getExpiration(e2) {
    const t = this.expirations.get(e2);
    if (!t) {
      const { message: i3 } = xe("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw this.logger.warn(i3), new Error(i3);
    }
    return t;
  }
  checkExpiry(e2, t) {
    const { expiry: i3 } = t;
    (0, import_time3.toMiliseconds)(i3) - Date.now() <= 0 && this.expire(e2, t);
  }
  expire(e2, t) {
    this.expirations.delete(e2), this.events.emit(C3.expired, { target: e2, expiration: t });
  }
  checkExpirations() {
    this.core.relayer.connected && this.expirations.forEach((e2, t) => this.checkExpiry(t, e2));
  }
  registerEventListeners() {
    this.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => this.checkExpirations()), this.events.on(C3.created, (e2) => {
      const t = C3.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    }), this.events.on(C3.expired, (e2) => {
      const t = C3.expired;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    }), this.events.on(C3.deleted, (e2) => {
      const t = C3.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = xe("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Yt2 = class extends y3 {
  constructor(e2, t) {
    super(e2, t), this.projectId = e2, this.logger = t, this.name = ee, this.initialized = false, this.queue = [], this.verifyDisabled = false, this.init = async (i3) => {
      if (this.verifyDisabled || er() || !pr()) return;
      const s2 = this.getVerifyUrl(i3 == null ? void 0 : i3.verifyUrl);
      this.verifyUrl !== s2 && this.removeIframe(), this.verifyUrl = s2;
      try {
        await this.createIframe();
      } catch (r2) {
        this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(r2);
      }
      if (!this.initialized) {
        this.removeIframe(), this.verifyUrl = te2;
        try {
          await this.createIframe();
        } catch (r2) {
          this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(r2), this.verifyDisabled = true;
        }
      }
    }, this.register = async (i3) => {
      this.initialized ? this.sendPost(i3.attestationId) : (this.addToQueue(i3.attestationId), await this.init());
    }, this.resolve = async (i3) => {
      if (this.isDevEnv) return "";
      const s2 = this.getVerifyUrl(i3 == null ? void 0 : i3.verifyUrl);
      let r2;
      try {
        r2 = await this.fetchAttestation(i3.attestationId, s2);
      } catch (o2) {
        this.logger.info(`failed to resolve attestation: ${i3.attestationId} from url: ${s2}`), this.logger.info(o2), r2 = await this.fetchAttestation(i3.attestationId, te2);
      }
      return r2;
    }, this.fetchAttestation = async (i3, s2) => {
      this.logger.info(`resolving attestation: ${i3} from url: ${s2}`);
      const r2 = this.startAbortTimer(import_time3.ONE_SECOND * 2), o2 = await fetch(`${s2}/attestation/${i3}`, { signal: this.abortController.signal });
      return clearTimeout(r2), o2.status === 200 ? await o2.json() : void 0;
    }, this.addToQueue = (i3) => {
      this.queue.push(i3);
    }, this.processQueue = () => {
      this.queue.length !== 0 && (this.queue.forEach((i3) => this.sendPost(i3)), this.queue = []);
    }, this.sendPost = (i3) => {
      var s2;
      try {
        if (!this.iframe) return;
        (s2 = this.iframe.contentWindow) == null || s2.postMessage(i3, "*"), this.logger.info(`postMessage sent: ${i3} ${this.verifyUrl}`);
      } catch {
      }
    }, this.createIframe = async () => {
      let i3;
      const s2 = (r2) => {
        r2.data === "verify_ready" && (this.onInit(), window.removeEventListener("message", s2), i3());
      };
      await Promise.race([new Promise((r2) => {
        const o2 = document.getElementById(ee);
        if (o2) return this.iframe = o2, this.onInit(), r2();
        window.addEventListener("message", s2);
        const a3 = document.createElement("iframe");
        a3.id = ee, a3.src = `${this.verifyUrl}/${this.projectId}`, a3.style.display = "none", document.body.append(a3), this.iframe = a3, i3 = r2;
      }), new Promise((r2, o2) => setTimeout(() => {
        window.removeEventListener("message", s2), o2("verify iframe load timeout");
      }, (0, import_time3.toMiliseconds)(import_time3.FIVE_SECONDS)))]);
    }, this.onInit = () => {
      this.initialized = true, this.processQueue();
    }, this.removeIframe = () => {
      this.iframe && (this.iframe.remove(), this.iframe = void 0, this.initialized = false);
    }, this.getVerifyUrl = (i3) => {
      let s2 = i3 || k4;
      return St2.includes(s2) || (this.logger.info(`verify url: ${s2}, not included in trusted list, assigning default: ${k4}`), s2 = k4), s2;
    }, this.logger = E2(t, this.name), this.verifyUrl = k4, this.abortController = new AbortController(), this.isDevEnv = pi() && process.env.IS_VITEST;
  }
  get context() {
    return y2(this.logger);
  }
  startAbortTimer(e2) {
    return this.abortController = new AbortController(), setTimeout(() => this.abortController.abort(), (0, import_time3.toMiliseconds)(e2));
  }
};
var Ht3 = class extends v2 {
  constructor(e2, t) {
    super(e2, t), this.projectId = e2, this.logger = t, this.context = Pt2, this.registerDeviceToken = async (i3) => {
      const { clientId: s2, token: r2, notificationType: o2, enableEncrypted: a3 = false } = i3, h5 = `${xt2}/${this.projectId}/clients`;
      await (0, import_isomorphic_unfetch.default)(h5, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ client_id: s2, type: o2, token: r2, always_raw: a3 }) });
    }, this.logger = E2(t, this.context);
  }
};
var $r2 = Object.defineProperty;
var Jt3 = Object.getOwnPropertySymbols;
var Fr3 = Object.prototype.hasOwnProperty;
var kr3 = Object.prototype.propertyIsEnumerable;
var Xt3 = (n4, e2, t) => e2 in n4 ? $r2(n4, e2, { enumerable: true, configurable: true, writable: true, value: t }) : n4[e2] = t;
var Wt3 = (n4, e2) => {
  for (var t in e2 || (e2 = {})) Fr3.call(e2, t) && Xt3(n4, t, e2[t]);
  if (Jt3) for (var t of Jt3(e2)) kr3.call(e2, t) && Xt3(n4, t, e2[t]);
  return n4;
};
var ie2 = class _ie extends n3 {
  constructor(e2) {
    var t;
    super(e2), this.protocol = De2, this.version = Ze3, this.name = Z, this.events = new import_events5.EventEmitter(), this.initialized = false, this.on = (o2, a3) => this.events.on(o2, a3), this.once = (o2, a3) => this.events.once(o2, a3), this.off = (o2, a3) => this.events.off(o2, a3), this.removeListener = (o2, a3) => this.events.removeListener(o2, a3), this.projectId = e2 == null ? void 0 : e2.projectId, this.relayUrl = (e2 == null ? void 0 : e2.relayUrl) || me3, this.customStoragePrefix = e2 != null && e2.customStoragePrefix ? `:${e2.customStoragePrefix}` : "";
    const i3 = k2({ level: typeof (e2 == null ? void 0 : e2.logger) == "string" && e2.logger ? e2.logger : et.logger }), { logger: s2, chunkLoggerController: r2 } = A({ opts: i3, maxSizeInBytes: e2 == null ? void 0 : e2.maxLogBlobSizeInBytes, loggerOverride: e2 == null ? void 0 : e2.logger });
    this.logChunkController = r2, (t = this.logChunkController) != null && t.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async () => {
      var o2, a3;
      (o2 = this.logChunkController) != null && o2.downloadLogsBlobInBrowser && ((a3 = this.logChunkController) == null || a3.downloadLogsBlobInBrowser({ clientId: await this.crypto.getClientId() }));
    }), this.logger = E2(s2, this.name), this.heartbeat = new import_heartbeat.HeartBeat(), this.crypto = new At(this, this.logger, e2 == null ? void 0 : e2.keychain), this.history = new jt3(this, this.logger), this.expirer = new Gt3(this, this.logger), this.storage = e2 != null && e2.storage ? e2.storage : new h(Wt3(Wt3({}, tt), e2 == null ? void 0 : e2.storageOptions)), this.relayer = new kt3({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new qt3(this, this.logger), this.verify = new Yt2(this.projectId || "", this.logger), this.echoClient = new Ht3(this.projectId || "", this.logger);
  }
  static async init(e2) {
    const t = new _ie(e2);
    await t.initialize();
    const i3 = await t.crypto.getClientId();
    return await t.storage.setItem(bt2, i3), t;
  }
  get context() {
    return y2(this.logger);
  }
  async start() {
    this.initialized || await this.initialize();
  }
  async getLogsBlob() {
    var e2;
    return (e2 = this.logChunkController) == null ? void 0 : e2.logsToBlob({ clientId: await this.crypto.getClientId() });
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = true, this.logger.info("Core Initialization Success");
    } catch (e2) {
      throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e2), this.logger.error(e2.message), e2;
    }
  }
};
var Br2 = ie2;

export {
  destr,
  createStore,
  get,
  set,
  del,
  clear,
  keys,
  safeJsonParse,
  safeJsonStringify,
  require_cjs,
  IEvents,
  init_esm,
  import_pino2 as import_pino,
  k2 as k,
  y2 as y,
  E2 as E,
  A,
  b2 as b,
  w2 as w,
  Qe,
  sn2 as sn,
  Po2 as Po,
  Qo2 as Qo,
  detect,
  require_cjs2,
  require_cjs3,
  require_query_string,
  require_binary,
  require_wipe,
  require_chacha20poly1305,
  require_hkdf,
  require_random,
  require_sha256,
  require_x25519,
  C,
  dn,
  zo,
  pr,
  Xo,
  a0,
  l0,
  d0,
  p0,
  v0,
  ge,
  m0,
  g0,
  fu,
  Li,
  ou,
  zf,
  cu,
  lu,
  du,
  pu,
  Qr,
  lr,
  bu,
  yu,
  Zi,
  vo,
  ju,
  xe,
  tr,
  Er,
  Yr,
  Pe,
  Gt,
  Qu,
  Vu,
  Wu,
  So,
  No,
  Xu,
  Zu,
  $u,
  th,
  eh,
  rh,
  ih,
  nh,
  fh,
  oh,
  Io,
  uh,
  lh,
  parseConnectionError,
  payloadId,
  getBigIntRpcId,
  formatJsonRpcRequest,
  formatJsonRpcResult,
  formatJsonRpcError,
  r,
  isHttpUrl,
  isWsUrl,
  isLocalhostUrl,
  isJsonRpcRequest,
  isJsonRpcResponse,
  isJsonRpcResult,
  isJsonRpcError,
  esm_exports,
  JsonRpcProvider,
  require_lodash,
  require_browser4 as require_browser,
  lt2 as lt,
  v3 as v,
  V2 as V,
  C3 as C2,
  k4 as k2,
  Vt2 as Vt,
  Br2 as Br
};
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

@walletconnect/utils/dist/index.es.js:
  (**
  * [js-sha3]{@link https://github.com/emn178/js-sha3}
  *
  * @version 0.8.0
  * @author Chen, Yi-Cyuan [emn178@gmail.com]
  * @copyright Chen, Yi-Cyuan 2015-2018
  * @license MIT
  *)

@walletconnect/relay-auth/dist/index.es.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=chunk-NY2HE5IQ.js.map
